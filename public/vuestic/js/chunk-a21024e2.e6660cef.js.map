{"version":3,"sources":["webpack:///./node_modules/suneditor/src/plugins/dialog/image.js","webpack:///./node_modules/suneditor/src/plugins/dialog/link.js","webpack:///./src/view/components/editor.vue?fb9b","webpack:///./node_modules/suneditor/src/plugins/submenu/align.js","webpack:///./node_modules/suneditor/src/plugins/submenu/fontColor.js","webpack:///./src/view/components/editor.vue?dd0a","webpack:///./node_modules/suneditor/src/lib/core.js","webpack:///./node_modules/suneditor/src/lib/constructor.js","webpack:///./node_modules/suneditor/src/lib/context.js","webpack:///./node_modules/suneditor/src/lang/en.js","webpack:///./node_modules/suneditor/src/suneditor.js","webpack:///./node_modules/suneditor/src/plugins/index.js","webpack:///src/view/components/editor.vue","webpack:///./src/view/components/editor.vue?69a2","webpack:///./src/view/components/editor.vue","webpack:///./node_modules/suneditor/src/plugins/submenu/font.js","webpack:///./node_modules/suneditor/src/lib/util.js","webpack:///./node_modules/suneditor/src/plugins/submenu/horizontalRule.js","webpack:///./node_modules/suneditor/src/plugins/submenu/table.js","webpack:///./node_modules/suneditor/src/plugins/modules/resizing.js","webpack:///./node_modules/suneditor/src/plugins/submenu/hiliteColor.js","webpack:///./node_modules/suneditor/src/plugins/modules/notice.js","webpack:///./node_modules/suneditor/src/plugins/dialog/video.js","webpack:///./node_modules/suneditor/src/plugins/modules/dialog.js","webpack:///./node_modules/suneditor/src/plugins/modules/colorPicker.js","webpack:///./node_modules/suneditor/src/plugins/submenu/list.js","webpack:///./node_modules/suneditor/src/plugins/submenu/fontSize.js","webpack:///./node_modules/suneditor/src/plugins/submenu/formatBlock.js"],"names":["_lib_util__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_modules_dialog__WEBPACK_IMPORTED_MODULE_1__","_modules_resizing__WEBPACK_IMPORTED_MODULE_2__","_modules_notice__WEBPACK_IMPORTED_MODULE_3__","__webpack_exports__","name","add","core","addModule","context","image","_linkElement","_container","_cover","_element","_element_w","_element_h","_element_l","_element_t","_origin_w","option","imageWidth","_origin_h","_altText","_caption","captionCheckEl","_linkValue","_align","_captionChecked","_proportionChecked","_floatClassRegExp","_xmlHttp","_resizing","imageResizing","_defaultAuto","image_dialog","eval","this","setDialog","lang","modal","imgUrlFile","getElementsByClassName","imgInputFile","focusElement","altText","imgLink","imgLinkNewWindowCheck","addEventListener","openTab","bind","submit","imageX","imageY","proportion","value","setInputSize","sizeRevert","dialog","appendChild","createElement","className","style","display","html","dialogBox","close","imageBox","title","toolbar","link","imageFileInput","file","imageUrlInput","url","width","height","revertButton","caption","linkBox","newWindowCheck","basic","left","center","right","submitButton","innerHTML","e","targetElement","target","test","tagName","tabName","getAttribute","contentClassName","i","tabContent","tabLinks","length","removeClass","addClass","focus","onRender_imgInput","submitAction","files","imageUploadUrl","filesLen","updateModal","formData","FormData","append","getXMLHttpRequest","onreadystatechange","plugins","callBack_imgUpload","checked","open","send","setup_reader","call","closeLoading","message","Error","imgLinkValue","align","index","reader","FileReader","setAttribute","size","onload","update","updateElement","create_image","result","readAsDataURL","linkValue","linkNewWindow","readyState","status","responseURL","response","JSON","parse","responseText","errorMessage","fileList","len","onRender_imgUrl","trim","onRender_link","imgTag","href","xy","Math","round","showLoading","preventDefault","stopPropagation","querySelector","update_image","error","_onload_image","oImg","offsetHeight","naturalWidth","naturalHeight","offsetWidth","dataIndex","imgInfo","_variable","_imagesInfo","_imageIndex","select","resizing","call_controller_resize","onModifyMode","scrollIntoView","delete","destroy","_imageUpload","src","contextImage","alt","cover","set_cover","container","set_container","create_caption","margin","_resize_plugin","setAutoSize","insertNode","getFormatElement","getSelectionNode","appendFormatTag","imageEl","isNewContainer","changeSize","cloneNode","setSize","removeItem","newEl","insertBefore","imageElement","removeChild","existElement","parentNode","_rotateVertical","setTransformSize","element","nodeName","getParentElement","getChildElement","w","h","t","l","userSize","split","openModify","notOpen","disabled","resetTransform","cancelPercentAttr","maxWidth","setPercentSize","resetAlign","imageContainer","init","controllersOff","autoWidth","link_dialog","linkAnchorText","linkNewWindowCheck","link_button","setController_LinkButton","linkBtn","_linkAnchor","onClick_linkBtn","relative","text","link_btn","controller","edit","remove","anchor","anchorText","textContent","setRange","childNodes","oA","call_controller_linkButton","selectionATag","editLink","getElementsByTagName","offset","getOffset","wysiwyg","scrollLeft","top","controllersOn","command","contextLink","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_editor_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_editor_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","n","listDiv","setSubmenu","pickup","alignLeft","alignCenter","alignRight","justifyFull","execCommand","submenuOff","_modules_colorPicker__WEBPACK_IMPORTED_MODULE_1__","fontColor","previewEl","colorInput","colorPicker","colorListHTML","onChangeInput","colorArea","on","contextPicker","_colorInput","_defaultColor","_styleProperty","setCurrentColor","applyColor","_currentColor","color","newNode","nodeChange","render","_vm","_h","$createElement","_c","_self","staticStyle","attrs","id","editor_id","staticRenderFns","_d","document","_w","window","editor","initPlugins","dialogForm","_submenuName","submenu","_bindedSubmenuOff","submenuActiveButton","controllerArray","_bindControllersOff","codeViewDisabledButtons","querySelectorAll","_isInline","mode","_isBalloon","_inlineToolbarAttr","isShow","targetImgElement","isDelete","userFunction","onImageUpload","commandMap","FORMAT","tool","format","FONT","font","SIZE","fontSize","B","bold","U","underline","I","italic","STRIKE","strike","SUB","subscript","SUP","superscript","wysiwygActive","isFullScreen","innerHeight_fullScreen","resizeClientY","tabSize","minResizingSize","currentNodes","_range","_selectionNode","_originCssText","topArea","cssText","_bodyOverflow","_editorAreaOriginCssText","_wysiwygOriginCssText","_codeOriginCssText","_sticky","callPlugin","pluginName","callBackFunction","buttonElement","moduleArray","moduleName","util","copyObj","submenuOn","submenuName","nextElementSibling","overLeft","parentElement","offsetLeft","removeEventListener","arguments","showDefaultUI","event","_findButtonEffectTag","startCon","startOff","endCon","endOff","range","createRange","setStart","setEnd","selection","getSelection","removeAllRanges","addRange","_editorRange","getRange","_createDefaultRange","firstChild","focusNode","selectionNode","rangeCount","getRangeAt","collapsed","commonAncestorContainer","extentNode","anchorNode","getSelectedFormatElements","isWysiwygDiv","startContainer","children","endContainer","commonCon","rangeFormatElements","isRangeFormatElement","lineNodes","getListChildren","current","isFormatElement","startLine","endLine","startIdx","endIdx","push","getSelectedRangeFormatElements","el","getRangeFormatElement","rangeElements","isEdgePoint","nodeValue","loading","formatNodeName","formatEl","currentFormatEl","oFormatName","oFormat","zeroWidthSpace","isCell","oNode","rightNode","nextSibling","startOffset","endOffset","nodeType","splitText","lastChild","isBreak","isSameContainer","removeNode","deleteContents","beforeNode","afterNode","getListChildNodes","startIndex","getArrayIndex","endIndex","startNode","endNode","splice","item","undefined","data","createTextNode","substringData","wrapToTags","wrapTag","rangeLines","inner","standTag","beforeTag","pElement","last","listParent","line","prevNodeName","removeEmptyNode","appendNode","checkCSSPropertyArray","isRemoveFormat","tempCon","tempOffset","tempChild","tempArray","sNode","checkCnt","emptyText","previousElementSibling","previousSibling","newNodeName","regExp","start","end","RegExp","checkCss","vNode","replace","endLength","_nodeChange_startLine","_nodeChange_middleLine","_nodeChange_endLine","newRange","_nodeChange_oneLine","newInnerNode","validation","pNode","isSameNode","pCurrent","startPass","endPass","recursionFunc","node","child","coverNode","prevNode","textNode","substr","indexOf","childNode","pop","passNode","commandHandler","toggleCodeView","toggleClass","toggleFullScreen","indent","removeFormat","openWindowContents","toggleDisplayBlocks","hasClass","p","marginLeft","match","disButtons","code","convertHTMLForCodeView","scrollHeight","code_html","convertContentsForEditor","scrollTop","editorArea","body","overflow","stickyToolbar","onScroll_window","firstElementChild","position","zIndex","innerHeight","isPrint","windowObject","mimeType","write","print","preview","getIncludePath","getContents","contents","innerText","renderHTML","figcaptions","outerHTML","_shortcutKeyCode","66","83","85","73","89","90","219","221","_directionKeyKeyCode","_changeButtonClassTagCheck","classOnCheck","commandMapNodes","findFormat","findFont","findSize","findA","findB","findI","findU","findS","selectionParent","toUpperCase","changeTxt","fontFamily","face","selectFont","key","reverse","showPathLabel","navigation","join","_cancelCaptionEdit","onMouseDown_toolbar","onClick_toolbar","onMouseUp_wysiwyg","_hideToolbar","_showToolbarBalloon","onClick_wysiwyg","iframe","video","figcaption","_showToolbarInline","hideToolbar","td","table","call_controller_tableEdit","onClick","rangeObj","padding","isDirTop","focusOffset","anchorOffset","rects","getClientRects","toolbarWidth","toolbarHeight","scrollX","documentElement","bottom","offsetTop","scrollY","overRight","_arrow","arrow_width","arrow_left","arrow_point_width","onKeyDown_wysiwyg","keyCode","shift","shiftKey","ctrl","ctrlKey","metaKey","altKey","shortcutCommand","currentNode","cells","idx","prevIdx","nextIdx","moveCell","lines","tabText","Array","onKeyDown","onKeyUp_wysiwyg","oFormatTag","onKeyUp","onScroll_wysiwyg","onScroll","onDrop_wysiwyg","dataTransfer","onDrop","onMouseDown_resizingBar","closureFunc","resizeBackground","_resize_editor","clientY","resizeInterval","onResize_window","editorHeight","editorTop","y","_offStickyToolbar","_onStickyToolbar","_stickyDummy","marginTop","_codeViewAutoScroll","onPaste_wysiwyg","clipboardData","getData","cleanData","cleanHTML","resizingBar","Object","keys","map","plugin","noticeOpen","notice","noticeClose","save","originElement","getContext","getImagesInfo","insertHTML","template","content","setContents","appendContents","enabled","removeAttribute","show","topAreaStyle","hide","lib_core","_Constructor","options","_plugins","toString","popupDisplay","clientWidth","clientHeight","minHeight","maxHeight","colorList","videoResizing","videoWidth","videoHeight","buttonList","doc","top_div","tool_bar","_createToolBar","arrow","sticky_dummy","editor_div","wysiwyg_div","textarea","resizing_bar","loading_box","resize_back","constructed","_top","_relative","_toolBar","_editorArea","_wysiwygArea","_codeArea","_resizingBar","_navigation","_loading","_resizeBack","_defaultButtons","outdent","fullScreen","showBlocks","codeView","undo","redo","formatBlock","formats","hiliteColor","list","horizontalRule","_createModuleGroup","oneModule","oDiv","oUl","div","ul","_createButton","buttonClass","dataCommand","dataDisplay","oLi","oButton","li","button","separator_vertical","defaultButtonList","pluginsValues","module","moduleElement","vertical","buttonGroup","j","displayOption","enterDiv","tool_cover","lib_constructor","_Context","cons","lib_context","en","orderList","unorderList","hr_solid","hr_dotted","hr_dashed","tag_p","tag_div","tag_h","tag_quote","pre","videoBox","insertRowAbove","insertRowBelow","deleteRow","insertColumnBefore","insertColumnAfter","deleteColumn","resize100","resize75","resize50","resize25","mirrorHorizontal","mirrorVertical","rotateLeft","rotateRight","suneditor","init_options","self","create","idOrElement","_init_options","reduce","forEach","getElementById","src_plugins","submenu_table","dialog_link","dialog_image","editorvue_type_script_lang_js_","props","type","String","default","buttons","mounted","initEditor","$emit","beforeDestroy","destroyEditor","methods","lol","components_editorvue_type_script_lang_js_","component","componentNormalizer","__file","fontList","ActiveXObject","XMLHttpRequest","e1","obj","copy","attr","elementName","nameArray","extension","path","pathList","fileName","extRegExp","c","editorTag","slice","location","tag","baseHtml","createContextualFragment","textArray","tLen","ec","&"," ","'","<",">","m","_insertIndent","_insertLineBreak","matchTag","firstFormatElement","array","query","check","childList","tableOffsetLeft","tableOffsetTop","tableElement","txt","classList","contains","tagsAllowed","domTree","horizontalRulePick","appendHr","oHr","_tdElement","_trElement","_trElements","_tdIndex","_trIndex","_tdCnt","_trCnt","_tableXY","tablePicker","tableHighlight","tableUnHighlight","tableDisplay","resizeDiv","setController_tableEditor","onMouseMove_tablePicker","appendTable","onClick_resizeDiv","tableResize","oTable","x","tableHTML","tdCnt","reset_table_picker","ceil","offsetX","offsetY","x_u","y_u","highlight","unHighlight","contextTable","tdElement","setPositionControllerDiv","reset","rows","cellIndex","rowIndex","insertRowCell","newRow","insertRow","trArray","cell","insertCell","deleteRowCell","deleteCell","_resizeClientX","_resizeClientY","_resize_w","_resize_h","_resize_direction","resize_div_container","setController_resize","resizeContainer","resizeDot","resizeDisplay","resize_button","setController_button","resizeButton","resize_handles","resizeHandles","resizeButtonGroup","onMouseDown_resize_handle","onClick_resizeButton","resize_container","contextResizing","isVertical","abs","originSize","cancel_controller_resize","contextEl","contextPlugin","r","_setTransForm","slope","deg","transform","transformOrigin","offsetW","offsetH","transOrigin","transW","transH","_setCaptionPosition","translate","direction","clientX","float","closureFunc_bind","resizing_element_bind","resizing_element","resultW","resultH","wh","backgroundColor","notice_div","notice_span","notice_button","onClick_cancel","_resizingDiv","video_dialog","contextVideo","resizingDiv","oIframe","DOMParser","parseFromString","frameBorder","allowFullscreen","contentDocument","origin","dialog_div","dialog_back","dialog_area","modalArea","back","onClick_dialog","kind","modalForm","createColorList","fillColor","getColorInNode","isHexColor","rgb2hex","setInputText","hexColorStr","borderColor","findedColor","styleProperty","str","rgb","parseInt","formatElement","cancel","formatElementList","fTag","sizeList","pickUp","rangeElement"],"mappings":"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","file":"vuestic/js/chunk-a21024e2.e6660cef.js","sourcesContent":["/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport util from '../../lib/util';\nimport dialog from '../modules/dialog';\nimport resizing from '../modules/resizing';\nimport notice from '../modules/notice';\n\nexport default {\n    name: 'image',\n    add: function (core) {\n        core.addModule([dialog, resizing, notice]);\n        \n        const context = core.context;\n        context.image = {\n            _linkElement: null,\n            _container: null,\n            _cover: null,\n            _element: null,\n            _element_w: 1,\n            _element_h: 1,\n            _element_l: 0,\n            _element_t: 0,\n            _origin_w: context.option.imageWidth === 'auto' ? '' : context.option.imageWidth,\n            _origin_h: '',\n            _altText: '',\n            _caption: null,\n            captionCheckEl: null,\n            _linkValue: '',\n            _align: 'none',\n            _captionChecked: false,\n            _proportionChecked: true,\n            _floatClassRegExp: 'float\\\\-[a-z]+',\n            _xmlHttp: null,\n            _resizing: context.option.imageResizing,\n            _defaultAuto: context.option.imageWidth === 'auto' ? true : false\n        };\n\n        /** image dialog */\n        let image_dialog = eval(this.setDialog(core.context.option, core.lang));\n        context.image.modal = image_dialog;\n        context.image.imgUrlFile = image_dialog.getElementsByClassName('sun-editor-id-image-url')[0];\n        context.image.imgInputFile = context.image.focusElement = image_dialog.getElementsByClassName('sun-editor-id-image-file')[0];\n        context.image.altText = image_dialog.getElementsByClassName('sun-editor-id-image-alt')[0];\n        context.image.imgLink = image_dialog.getElementsByClassName('sun-editor-id-image-link')[0];\n        context.image.imgLinkNewWindowCheck = image_dialog.getElementsByClassName('sun-editor-id-linkCheck')[0];\n        context.image.captionCheckEl = image_dialog.getElementsByClassName('suneditor-id-image-check-caption')[0];\n\n        /** add event listeners */\n        context.image.modal.getElementsByClassName('sun-editor-tab-button')[0].addEventListener('click', this.openTab.bind(core));\n        context.image.modal.getElementsByClassName('btn-primary')[0].addEventListener('click', this.submit.bind(core));\n        \n        context.image.imageX = {};\n        context.image.imageY = {};\n        if (context.option.imageResizing) {\n            context.image.proportion = image_dialog.getElementsByClassName('suneditor-id-image-check-proportion')[0];\n            context.image.imageX = image_dialog.getElementsByClassName('sun-editor-id-image-x')[0];\n            context.image.imageY = image_dialog.getElementsByClassName('sun-editor-id-image-y')[0];\n            context.image.imageX.value = context.option.imageWidth;\n            \n            context.image.imageX.addEventListener('change', this.setInputSize.bind(core, 'x'));\n            context.image.imageY.addEventListener('change', this.setInputSize.bind(core, 'y'));\n            image_dialog.getElementsByClassName('sun-editor-id-image-revert-button')[0].addEventListener('click', this.sizeRevert.bind(core));\n        }\n\n        /** append html */\n        context.dialog.modal.appendChild(image_dialog);\n\n        /** empty memory */\n        image_dialog = null;\n    },\n\n    /** dialog */\n    setDialog: function (option, lang) {\n        const dialog = util.createElement('DIV');\n        dialog.className = 'modal-content sun-editor-id-dialog-image';\n        dialog.style.display = 'none';\n\n        let html = '' +\n            '<div class=\"modal-header\">' +\n            '   <button type=\"button\" data-command=\"close\" class=\"close\" aria-label=\"Close\" title=\"' + lang.dialogBox.close + '\">' +\n            '       <div aria-hidden=\"true\" data-command=\"close\" class=\"icon-cancel\"></div>' +\n            '   </button>' +\n            '   <h5 class=\"modal-title\">' + lang.dialogBox.imageBox.title + '</h5>' +\n            '</div>' +\n            '<div class=\"sun-editor-tab-button\">' +\n            '   <button type=\"button\" class=\"sun-editor-id-tab-link active\" data-tab-link=\"image\">' + lang.toolbar.image + '</button>' +\n            '   <button type=\"button\" class=\"sun-editor-id-tab-link\" data-tab-link=\"url\">' + lang.toolbar.link + '</button>' +\n            '</div>' +\n            '<form class=\"editor_image\" method=\"post\" enctype=\"multipart/form-data\">' +\n            '   <div class=\"sun-editor-id-tab-content sun-editor-id-tab-content-image\">' +\n            '       <div class=\"modal-body\">';\n\n            if (option.imageFileInput) {\n                html += '' +\n                    '   <div class=\"form-group\">' +\n                    '       <label>' + lang.dialogBox.imageBox.file + '</label>' +\n                    '       <input class=\"form-control sun-editor-id-image-file\" type=\"file\" accept=\"image/*\" multiple=\"multiple\" />' +\n                    '   </div>' ;\n            }\n\n            if (option.imageUrlInput) {\n                html += '' +\n                    '   <div class=\"form-group\">' +\n                    '       <label>' + lang.dialogBox.imageBox.url + '</label>' +\n                    '       <input class=\"form-control sun-editor-id-image-url\" type=\"text\" />' +\n                    '   </div>';\n            }\n\n            html += '' +\n            '           <div class=\"form-group\">' +\n            '               <label>' + lang.dialogBox.imageBox.altText + '</label><input class=\"form-control sun-editor-id-image-alt\" type=\"text\" />' +\n            '           </div>';\n\n            if (option.imageResizing) {\n                html += '' +\n                '       <div class=\"form-group\">' +\n                '           <div class=\"size-text\"><label class=\"size-w\">' + lang.dialogBox.width + '</label><label class=\"size-x\">&nbsp;</label><label class=\"size-h\">' + lang.dialogBox.height + '</label></div>' +\n                '           <input class=\"form-size-control sun-editor-id-image-x\" type=\"number\" min=\"1\" ' + (option.imageWidth === 'auto' ? 'disabled' : '') + ' /><label class=\"size-x\">x</label><input class=\"form-size-control sun-editor-id-image-y\" type=\"number\" min=\"1\" disabled />' +\n                '           <label><input type=\"checkbox\" class=\"suneditor-id-image-check-proportion\" style=\"margin-left: 20px;\" checked disabled/>&nbsp;' + lang.dialogBox.proportion + '</label>' +\n                '           <button type=\"button\" title=\"' + lang.dialogBox.revertButton + '\" class=\"btn_editor sun-editor-id-image-revert-button\" style=\"float: right;\"><div class=\"icon-revert\"></div></button>' +\n                '       </div>' ;\n            }\n\n            html += '' +\n            '           <div class=\"form-group-footer\">' +\n            '               <label><input type=\"checkbox\" class=\"suneditor-id-image-check-caption\" />&nbsp;' + lang.dialogBox.caption + '</label>' +\n            '           </div>' +\n            '       </div>' +\n            '   </div>' +\n            '   <div class=\"sun-editor-id-tab-content sun-editor-id-tab-content-url\" style=\"display: none\">' +\n            '       <div class=\"modal-body\">' +\n            '           <div class=\"form-group\">' +\n            '               <label>' + lang.dialogBox.linkBox.url + '</label><input class=\"form-control sun-editor-id-image-link\" type=\"text\" />' +\n            '           </div>' +\n            '           <label><input type=\"checkbox\" class=\"sun-editor-id-linkCheck\"/>&nbsp;' + lang.dialogBox.linkBox.newWindowCheck + '</label>' +\n            '       </div>' +\n            '   </div>' +\n            '   <div class=\"modal-footer\">' +\n            '       <div style=\"float: left;\">' +\n            '           <label><input type=\"radio\" name=\"suneditor_image_radio\" class=\"modal-radio\" value=\"none\" checked>' + lang.dialogBox.basic + '</label>' +\n            '           <label><input type=\"radio\" name=\"suneditor_image_radio\" class=\"modal-radio\" value=\"left\">' + lang.dialogBox.left + '</label>' +\n            '           <label><input type=\"radio\" name=\"suneditor_image_radio\" class=\"modal-radio\" value=\"center\">' + lang.dialogBox.center + '</label>' +\n            '           <label><input type=\"radio\" name=\"suneditor_image_radio\" class=\"modal-radio\" value=\"right\">' + lang.dialogBox.right + '</label>' +\n            '       </div>' +\n            '       <button type=\"submit\" class=\"btn btn-primary sun-editor-id-submit-image\" title=\"' + lang.dialogBox.submitButton + '\"><span>' + lang.dialogBox.submitButton + '</span></button>' +\n            '   </div>' +\n            '</form>';\n\n        dialog.innerHTML = html;\n\n        return dialog;\n    },\n\n    openTab: function (e) {\n        const modal = this.context.image.modal;\n        const targetElement = (e === 'init' ? modal.getElementsByClassName('sun-editor-id-tab-link')[0] : e.target);\n\n        if (!/^BUTTON$/i.test(targetElement.tagName)) {\n            return false;\n        }\n\n        // Declare all variables\n        const tabName = targetElement.getAttribute('data-tab-link');\n        const contentClassName = 'sun-editor-id-tab-content';\n        let i, tabContent, tabLinks;\n\n        // Get all elements with class=\"tabcontent\" and hide them\n        tabContent = modal.getElementsByClassName(contentClassName);\n        for (i = 0; i < tabContent.length; i++) {\n            tabContent[i].style.display = 'none';\n        }\n\n        // Get all elements with class=\"tablinks\" and remove the class \"active\"\n        tabLinks = modal.getElementsByClassName('sun-editor-id-tab-link');\n        for (i = 0; i < tabLinks.length; i++) {\n            util.removeClass(tabLinks[i], 'active');\n        }\n\n        // Show the current tab, and add an \"active\" class to the button that opened the tab\n        modal.getElementsByClassName(contentClassName + '-' + tabName)[0].style.display = 'block';\n        util.addClass(targetElement, 'active');\n\n        // focus\n        if (tabName === 'image') {\n            this.context.image.imgInputFile.focus();\n        } else if (tabName === 'url') {\n            this.context.image.imgLink.focus();\n        }\n\n        return false;\n    },\n\n    onRender_imgInput: function () {\n        const submitAction = function (files) {\n            if (files.length > 0) {\n                const imageUploadUrl = this.context.option.imageUploadUrl;\n                const filesLen = this.context.dialog.updateModal ? 1 : files.length;\n\n                if (imageUploadUrl !== null && imageUploadUrl.length > 0) {\n                    const formData = new FormData();\n\n                    for (let i = 0; i < filesLen; i++) {\n                        formData.append('file-' + i, files[i]);\n                    }\n\n                    this.context.image._xmlHttp = util.getXMLHttpRequest();\n                    this.context.image._xmlHttp.onreadystatechange = this.plugins.image.callBack_imgUpload.bind(this, this.context.image._linkValue, this.context.image.imgLinkNewWindowCheck.checked, this.context.image.imageX.value + 'px', this.context.image._align, this.context.dialog.updateModal, this.context.image._element);\n                    this.context.image._xmlHttp.open('post', imageUploadUrl, true);\n                    this.context.image._xmlHttp.send(formData);\n                }\n                else {\n                    for (let i = 0; i < filesLen; i++) {\n                        this.plugins.image.setup_reader.call(this, files[i], this.context.image._linkValue, this.context.image.imgLinkNewWindowCheck.checked, this.context.image.imageX.value + 'px', this.context.image._align, i, filesLen - 1);\n                    }\n                }\n            }\n        }.bind(this);\n\n        try {\n            submitAction(this.context.image.imgInputFile.files);\n        } catch (e) {\n            this.closeLoading();\n            notice.open.call(this, '[SUNEDITOR.imageUpload.fail] cause : \"' + e.message + '\"');\n            throw Error('[SUNEDITOR.imageUpload.fail] cause : \"' + e.message + '\"');\n        }\n    },\n\n    setup_reader: function (file, imgLinkValue, newWindowCheck, width, align, index, filesLen) {\n        const reader = new FileReader();\n        \n        if (this.context.dialog.updateModal) {\n            this.context.image._element.setAttribute('data-file-name', file.name);\n            this.context.image._element.setAttribute('data-file-size', file.size);\n        }\n\n        reader.onload = function (update, updateElement, file) {\n            try {\n                this.plugins.image.create_image.call(this, reader.result, imgLinkValue, newWindowCheck, width, align, update, updateElement, file);\n                if (index === filesLen) this.closeLoading();\n            } catch (e) {\n                this.closeLoading();\n                notice.open.call(this, '[SUNEDITOR.imageFileRendering.fail] cause : \"' + e.message + '\"');\n                throw Error('[SUNEDITOR.imageFileRendering.fail] cause : \"' + e.message + '\"');\n            }\n        }.bind(this, this.context.dialog.updateModal, this.context.image._element, file);\n\n        reader.readAsDataURL(file);\n    },\n\n    callBack_imgUpload: function (linkValue, linkNewWindow, width, align, update, updateElement) {\n        if (this.context.image._xmlHttp.readyState === 4) {\n            if (this.context.image._xmlHttp.status === 200) {\n                const response = JSON.parse(this.context.image._xmlHttp.responseText);\n\n                if (response.errorMessage) {\n                    this.closeLoading();\n                    notice.open.call(this, response.errorMessage);\n                } else {\n                    const fileList = response.result;\n                    for (let i = 0, len = (update && fileList.length > 0 ? 1 : fileList.length); i < len; i++) {\n                        this.plugins.image.create_image.call(this, fileList[i].url, linkValue, linkNewWindow, width, align, update, updateElement, {name: fileList[i].name, size: fileList[i].size});\n                    }\n                }\n\n                this.closeLoading();\n            }\n            // error\n            else {\n                notice.open.call(this, '[SUNEDITOR.imageUpload.fail] status: ' + this.context.image._xmlHttp.status + ', responseURL: ' + this.context.image._xmlHttp.responseURL);\n                this.closeLoading();\n                throw Error('[SUNEDITOR.imageUpload.fail] status: ' + this.context.image._xmlHttp.status + ', responseURL: ' + this.context.image._xmlHttp.responseURL);\n            }\n        }\n    },\n\n    onRender_imgUrl: function () {\n        if (this.context.image.imgUrlFile.value.trim().length === 0) return false;\n\n        try {\n            this.plugins.image.create_image.call(this, this.context.image.imgUrlFile.value, this.context.image._linkValue, this.context.image.imgLinkNewWindowCheck.checked, this.context.image.imageX.value + 'px', this.context.image._align, this.context.dialog.updateModal, this.context.image._element);\n        } catch (e) {\n            notice.open.call(this, '[SUNEDITOR.imageURLRendering.fail] cause : \"' + e.message + '\"');\n            throw Error('[SUNEDITOR.imageURLRendering.fail] cause : \"' + e.message + '\"');\n        } finally {\n            this.closeLoading();\n        }\n    },\n\n    onRender_link: function (imgTag, imgLinkValue, newWindowCheck) {\n        if (imgLinkValue.trim().length > 0) {\n            const link = util.createElement('A');\n            link.href = /^https?:\\/\\//.test(imgLinkValue) ? imgLinkValue : 'http://' + imgLinkValue;\n            link.target = (newWindowCheck ? '_blank' : '');\n            link.setAttribute('data-image-link', 'image');\n            imgTag.setAttribute('data-image-link', imgLinkValue);\n\n            link.appendChild(imgTag);\n            return link;\n        }\n\n        return imgTag;\n    },\n\n    setInputSize: function (xy) {\n        if (!this.context.dialog.updateModal) return;\n\n        if (this.context.image.proportion.checked) {\n            if (xy === 'x') {\n                this.context.image.imageY.value = Math.round((this.context.image._element_h / this.context.image._element_w) * this.context.image.imageX.value);\n            } else {\n                this.context.image.imageX.value = Math.round((this.context.image._element_w / this.context.image._element_h) * this.context.image.imageY.value);\n            }\n        }\n    },\n\n    submit: function (e) {\n        this.showLoading();\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.context.image._linkValue = this.context.image.imgLink.value;\n        this.context.image._altText = this.context.image.altText.value;\n        this.context.image._align = this.context.image.modal.querySelector('input[name=\"suneditor_image_radio\"]:checked').value;\n        this.context.image._captionChecked = this.context.image.captionCheckEl.checked;\n        if (this.context.image._resizing) this.context.image._proportionChecked = this.context.image.proportion.checked;\n\n        try {\n            if (this.context.dialog.updateModal) {\n                this.plugins.image.update_image.call(this);\n            }\n            \n            if (this.context.image.imgInputFile && this.context.image.imgInputFile.files.length > 0) {\n                this.plugins.image.onRender_imgInput.call(this);\n            } else if (this.context.image.imgUrlFile && this.context.image.imgUrlFile.value.trim().length > 0) {\n                this.plugins.image.onRender_imgUrl.call(this);\n            } else {\n                this.closeLoading();\n            }\n        } catch (error) {\n            this.closeLoading();\n            notice.open.call(this, '[SUNEDITOR.image.submit.fail] cause : \"' + error.message + '\"');\n            throw Error('[SUNEDITOR.image.submit.fail] cause : \"' + error.message + '\"');\n        } finally {\n            this.plugins.dialog.close.call(this);\n        }\n\n        return false;\n    },\n\n    _onload_image: function (oImg, file) {\n        if (/\\d+/.test(oImg.style.width)) oImg.style.height = oImg.offsetHeight + 'px';\n        oImg.setAttribute('origin-size', oImg.naturalWidth + ',' + oImg.naturalHeight);\n        oImg.setAttribute('data-origin', oImg.offsetWidth + ',' + oImg.offsetHeight);\n\n        if (!file) return;\n\n        let dataIndex = oImg.getAttribute('data-index');\n        if (!dataIndex) {\n            dataIndex = this._variable._imageIndex;\n            oImg.setAttribute('data-index', dataIndex);\n\n            this._variable._imagesInfo[dataIndex] = {\n                index: dataIndex,\n                name: file.name,\n                size: file.size,\n                select: function () {\n                    const size = this.plugins.resizing.call_controller_resize.call(this, oImg, 'image');\n                    this.plugins.image.onModifyMode.call(this, oImg, size);\n                    oImg.scrollIntoView();\n                }.bind(this),\n                delete: this.plugins.image.destroy.bind(this, oImg)\n            };\n\n            this._variable._imageIndex++;\n\n            oImg.setAttribute('data-file-name', file.name);\n            oImg.setAttribute('data-file-size', file.size);\n        }\n        else {\n            const imgInfo = this._variable._imagesInfo[dataIndex];\n\n            imgInfo.name = oImg.getAttribute(\"data-file-name\");\n            imgInfo.size = oImg.getAttribute(\"data-file-size\") * 1;\n        }\n\n        this._imageUpload(oImg, dataIndex, false);\n    },\n\n    create_image: function (src, linkValue, linkNewWindow, width, align, update, updateElement, file) {\n        if (update) {\n            updateElement.src = src;\n            return;\n        }\n\n        const contextImage = this.context.image;\n\n        let oImg = util.createElement('IMG');\n        oImg.addEventListener('load', this.plugins.image._onload_image.bind(this, oImg, file));\n\n        oImg.src = src;\n        oImg.setAttribute('data-align', align);\n        oImg.alt = contextImage._altText;\n        oImg = this.plugins.image.onRender_link(oImg, linkValue, linkNewWindow);\n        oImg.setAttribute('data-rotate', '0');\n\n        if (contextImage._resizing) {\n            if (/\\d+/.test(width)) oImg.style.width = width;\n            oImg.setAttribute('data-proportion', contextImage._proportionChecked);\n        }\n\n        const cover = this.plugins.resizing.set_cover.call(this, oImg);\n        const container = this.plugins.resizing.set_container.call(this, cover, 'sun-editor-id-image-container');\n\n        // caption\n        if (contextImage._captionChecked) {\n            contextImage._caption = this.plugins.resizing.create_caption.call(this);\n            contextImage._caption.setAttribute('contenteditable', false);\n            cover.appendChild(contextImage._caption);\n        }\n\n        // align\n        if ('none' !== align) {\n            cover.style.margin = 'auto';\n        } else {\n            cover.style.margin = '0';\n        }\n        \n        util.removeClass(container, contextImage._floatClassRegExp);\n        util.addClass(container, 'float-' + align);\n\n        if (!contextImage._resizing || !/\\d+/.test(width)) {\n            this.context.resizing._resize_plugin = 'image';\n            contextImage._element = oImg;\n            contextImage._cover = cover;\n            contextImage._container = container;\n            this.plugins.image.setAutoSize.call(this);\n        }\n\n        this.insertNode(container, util.getFormatElement(this.getSelectionNode()));\n        this.appendFormatTag(container);\n    },\n\n    update_image: function () {\n        const contextImage = this.context.image;\n        const linkValue = contextImage._linkValue;\n        let imageEl = contextImage._element;\n        let cover = contextImage._cover;\n        let container = contextImage._container;\n        let isNewContainer = false;\n        const changeSize = contextImage.imageX.value * 1 !== imageEl.offsetWidth || contextImage.imageY.value * 1 !== imageEl.offsetHeight;\n\n        if (cover === null) {\n            isNewContainer = true;\n            imageEl = contextImage._element.cloneNode(true);\n            cover = this.plugins.resizing.set_cover.call(this, imageEl);\n        }\n\n        if (container === null) {\n            cover = cover.cloneNode(true);\n            isNewContainer = true;\n            container = this.plugins.resizing.set_container.call(this, cover, 'sun-editor-id-image-container');\n        }\n        \n        if (isNewContainer) {\n            container.innerHTML = '';\n            container.appendChild(cover);\n        }\n\n        // size\n        imageEl.alt = contextImage._altText;\n\n        if (contextImage._resizing) {\n            imageEl.setAttribute('data-proportion', contextImage._proportionChecked);\n            if (changeSize) this.plugins.image.setSize.call(this, contextImage.imageX.value, contextImage.imageY.value);\n        }\n\n        // caption\n        if (contextImage._captionChecked) {\n            if (!contextImage._caption) {\n                contextImage._caption = this.plugins.resizing.create_caption.call(this);\n                cover.appendChild(contextImage._caption);\n            }\n        } else {\n            if (contextImage._caption) {\n                util.removeItem(contextImage._caption);\n                contextImage._caption = null;\n            }\n        }\n\n        // align\n        if (contextImage._align && 'none' !== contextImage._align) {\n            cover.style.margin = 'auto';\n        } else {\n            cover.style.margin = '0';\n        }\n\n        util.removeClass(container, this.context.image._floatClassRegExp);\n        util.addClass(container, 'float-' + contextImage._align);\n        imageEl.setAttribute('data-align', contextImage._align);\n\n        // link\n        if (linkValue.trim().length > 0) {\n            if (contextImage._linkElement !== null) {\n                contextImage._linkElement.href = linkValue;\n                contextImage._linkElement.target = (contextImage.imgLinkNewWindowCheck.checked ? '_blank' : '');\n                imageEl.setAttribute('data-image-link', linkValue);\n            } else {\n                let newEl = this.plugins.image.onRender_link(imageEl, linkValue, this.context.image.imgLinkNewWindowCheck.checked);\n                cover.insertBefore(newEl, contextImage._caption);\n            }\n        }\n        else if (contextImage._linkElement !== null) {\n            const imageElement = imageEl;\n\n            imageElement.setAttribute('data-image-link', '');\n            let newEl = imageElement.cloneNode(true);\n            cover.removeChild(contextImage._linkElement);\n            cover.insertBefore(newEl, contextImage._caption);\n            imageEl = newEl;\n        }\n\n        if (isNewContainer) {\n            const existElement = util.getFormatElement(contextImage._element);\n            existElement.parentNode.insertBefore(container, existElement);\n            util.removeItem(existElement);\n        }\n\n        // transform\n        if ((contextImage._resizing && changeSize) || (this.context.resizing._rotateVertical && contextImage._captionChecked)) {\n            this.plugins.resizing.setTransformSize.call(this, imageEl);\n        }\n    },\n\n    sizeRevert: function () {\n        const contextImage = this.context.image;\n        if (contextImage._origin_w) {\n            contextImage.imageX.value = contextImage._element_w = contextImage._origin_w;\n            contextImage.imageY.value = contextImage._element_h = contextImage._origin_h;\n        }\n    },\n\n    onModifyMode: function (element, size) {\n        const contextImage = this.context.image;\n        contextImage._linkElement = /^A$/i.test(element.parentNode.nodeName) ? element.parentNode : null;\n        contextImage._element = element;\n        contextImage._cover = util.getParentElement(element, '.sun-editor-figure-cover');\n        contextImage._container = util.getParentElement(element, '.sun-editor-id-image-container');\n        contextImage._caption = util.getChildElement(contextImage._cover, 'FIGCAPTION');\n        contextImage._align = element.getAttribute('data-align') || 'none';\n\n        contextImage._element_w = size.w;\n        contextImage._element_h = size.h;\n        contextImage._element_t = size.t;\n        contextImage._element_l = size.l;\n\n        let userSize = contextImage._element.getAttribute('data-origin');\n        if (userSize) {\n            userSize = userSize.split(',');\n            contextImage._origin_w = userSize[0] * 1;\n            contextImage._origin_h = userSize[1] * 1;\n        } else {\n            contextImage._origin_w = size.w;\n            contextImage._origin_h = size.h;\n            contextImage._element.setAttribute('data-origin', size.w + ',' + size.h);\n        }\n    },\n\n    openModify: function (notOpen) {\n        const contextImage = this.context.image;\n        contextImage.imgUrlFile.value = contextImage._element.src;\n        contextImage.altText.value = contextImage._element.alt;\n        contextImage.imgLink.value = contextImage._linkElement === null ? '' : contextImage._linkElement.href;\n        contextImage.imgLinkNewWindowCheck.checked = contextImage._linkElement && contextImage._linkElement.target === '_blank';\n        contextImage.modal.querySelector('input[name=\"suneditor_image_radio\"][value=\"' + contextImage._align + '\"]').checked = true;\n        contextImage._captionChecked = contextImage.captionCheckEl.checked = !!contextImage._caption;\n\n        if (contextImage._resizing) {\n            contextImage.proportion.checked = contextImage._proportionChecked = contextImage._element.getAttribute('data-proportion') === 'true';\n            contextImage.imageX.value = contextImage._element.offsetWidth;\n            contextImage.imageY.value = contextImage._element.offsetHeight;\n            contextImage.imageX.disabled = false;\n            contextImage.imageY.disabled = false;\n            contextImage.proportion.disabled = false;\n        }\n\n        if (!notOpen) this.plugins.dialog.open.call(this, 'image', true);\n    },\n\n    setSize: function (w, h) {\n        const contextImage = this.context.image;\n        contextImage._element.style.width = w + 'px';\n        contextImage._element.style.height = h + 'px';\n    },\n    \n    setAutoSize: function () {\n        const contextImage = this.context.image;\n\n        this.plugins.resizing.resetTransform.call(this, contextImage._element);\n        this.plugins.image.cancelPercentAttr.call(this);\n\n        contextImage._element.style.maxWidth = '100%';\n        contextImage._element.style.width = '100%';\n        contextImage._element.style.height = '';\n        contextImage._cover.style.width = '';\n        contextImage._cover.style.height = '';\n    },\n\n    setPercentSize: function (w) {\n        const contextImage = this.context.image;\n\n        contextImage._container.style.width = w;\n        contextImage._container.style.height = '';\n        contextImage._cover.style.width = '100%';\n        contextImage._cover.style.height = '';\n        contextImage._element.style.width = '100%';\n        contextImage._element.style.height = '';\n\n        if (/100/.test(w)) {\n            util.removeClass(contextImage._container, this.context.image._floatClassRegExp);\n            util.addClass(contextImage._container, 'float-center');\n        }\n    },\n\n    cancelPercentAttr: function () {\n        const contextImage = this.context.image;\n        \n        contextImage._element.style.maxWidth = 'none';\n        contextImage._cover.style.width = '';\n        contextImage._cover.style.height = '';\n        contextImage._container.style.width = '';\n        contextImage._container.style.height = '';\n\n        util.removeClass(contextImage._container, this.context.image._floatClassRegExp);\n        util.addClass(contextImage._container, 'float-' + contextImage._align);\n    },\n\n    resetAlign: function () {\n        const contextImage = this.context.image;\n\n        contextImage._element.setAttribute('data-align', '');\n        contextImage._align = 'none';\n        contextImage._cover.style.margin = '0';\n        util.removeClass(contextImage._container, contextImage._floatClassRegExp);\n    },\n\n    destroy: function (element) {\n        const imageEl = element || this.context.image._element;\n        const imageContainer = util.getParentElement(imageEl, '.sun-editor-id-image-container') || imageEl;\n\n        const dataIndex = imageEl.getAttribute('data-index');\n        \n        util.removeItem(imageContainer);\n        this.plugins.image.init.call(this);\n\n        this.controllersOff();\n\n        if (dataIndex) {\n            delete this._variable._imagesInfo[dataIndex];\n            this._imageUpload(imageEl, dataIndex, true);\n        }\n    },\n\n    init: function () {\n        const contextImage = this.context.image;\n        if (contextImage.imgInputFile) contextImage.imgInputFile.value = '';\n        if (contextImage.imgUrlFile) contextImage.imgUrlFile.value = '';\n        contextImage.altText.value = '';\n        contextImage.imgLink.value = '';\n        contextImage.imgLinkNewWindowCheck.checked = false;\n        contextImage.modal.querySelector('input[name=\"suneditor_image_radio\"][value=\"none\"]').checked = true;\n        contextImage.captionCheckEl.checked = false;\n        contextImage._element = null;\n        this.plugins.image.openTab.call(this, 'init');\n\n        if (contextImage._resizing) {\n            const autoWidth = this.context.option.imageWidth === 'auto';\n\n            contextImage.proportion.checked = false;\n            contextImage.imageX.value = autoWidth ? '' : this.context.option.imageWidth;\n            contextImage.imageY.value = '';\n            contextImage.imageX.disabled = autoWidth;\n            contextImage.imageY.disabled = true;\n            contextImage.proportion.disabled = true;\n        }\n    }\n};\n","/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport util from '../../lib/util';\nimport dialog from '../modules/dialog';\n\nexport default {\n    name: 'link',\n    add: function (core) {\n        core.addModule([dialog]);\n\n        const context = core.context;\n        context.link = {};\n\n        /** link dialog */\n        let link_dialog = eval(this.setDialog(core.lang));\n        context.link.modal = link_dialog;\n        context.link.focusElement = link_dialog.getElementsByClassName('sun-editor-id-link-url')[0];\n        context.link.linkAnchorText = link_dialog.getElementsByClassName('sun-editor-id-link-text')[0];\n        context.link.linkNewWindowCheck = link_dialog.getElementsByClassName('sun-editor-id-link-check')[0];\n\n        /** link button */\n        let link_button = eval(this.setController_LinkButton(core.lang));\n        context.link.linkBtn = link_button;\n        context.link._linkAnchor = null;\n        link_button.addEventListener('mousedown', function (e) { e.stopPropagation(); }, false);\n\n        /** add event listeners */\n        link_dialog.getElementsByClassName('btn-primary')[0].addEventListener('click', this.submit.bind(core));\n        link_button.addEventListener('click', this.onClick_linkBtn.bind(core));\n\n        /** append html */\n        context.dialog.modal.appendChild(link_dialog);\n        context.element.relative.appendChild(link_button);\n\n        /** empty memory */\n        link_dialog = null, link_button = null;\n    },\n\n    /** dialog */\n    setDialog: function (lang) {\n        const dialog = util.createElement('DIV');\n\n        dialog.className = 'modal-content sun-editor-id-dialog-link';\n        dialog.style.display = 'none';\n        dialog.innerHTML = '' +\n            '<form class=\"editor_link\">' +\n            '   <div class=\"modal-header\">' +\n            '       <button type=\"button\" data-command=\"close\" class=\"close\" aria-label=\"Close\" title=\"' + lang.dialogBox.close + '\">' +\n            '           <div aria-hidden=\"true\" data-command=\"close\" class=\"icon-cancel\"></div>' +\n            '       </button>' +\n            '       <h5 class=\"modal-title\">' + lang.dialogBox.linkBox.title + '</h5>' +\n            '   </div>' +\n            '   <div class=\"modal-body\">' +\n            '       <div class=\"form-group\">' +\n            '           <label>' + lang.dialogBox.linkBox.url + '</label>' +\n            '           <input class=\"form-control sun-editor-id-link-url\" type=\"text\" />' +\n            '       </div>' +\n            '       <div class=\"form-group\">' +\n            '           <label>' + lang.dialogBox.linkBox.text + '</label><input class=\"form-control sun-editor-id-link-text\" type=\"text\" />' +\n            '       </div>' +\n            '       <label><input type=\"checkbox\" class=\"sun-editor-id-link-check\" />&nbsp;' + lang.dialogBox.linkBox.newWindowCheck + '</label>' +\n            '   </div>' +\n            '   <div class=\"modal-footer\">' +\n            '       <button type=\"submit\" class=\"btn btn-primary sun-editor-id-submit-link\" title=\"' + lang.dialogBox.submitButton + '\"><span>' + lang.dialogBox.submitButton + '</span></button>' +\n            '   </div>' +\n            '</form>';\n\n        return dialog;\n    },\n\n    /** modify controller button */\n    setController_LinkButton: function (lang) {\n        const link_btn = util.createElement('DIV');\n\n        link_btn.className = 'sun-editor-id-link-btn';\n        link_btn.style.display = 'none';\n        link_btn.innerHTML = '' +\n            '<div class=\"arrow arrow-up\"></div>' +\n            '<div class=\"link-content\"><span><a target=\"_blank\" href=\"\"></a>&nbsp;</span>' +\n            '   <div class=\"btn-group\">' +\n            '     <button type=\"button\" data-command=\"update\" tabindex=\"-1\" title=\"' + lang.controller.edit + '\"><div class=\"icon-link\"></div></button>' +\n            '     <button type=\"button\" data-command=\"delete\" tabindex=\"-1\" title=\"' + lang.controller.remove + '\"><div class=\"icon-delete\"></div></button>' +\n            '   </div>' +\n            '</div>';\n\n        return link_btn;\n    },\n\n    submit: function (e) {\n        this.showLoading();\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        const submitAction = function () {\n            if (this.context.link.focusElement.value.trim().length === 0) return false;\n\n            const url = this.context.link.focusElement.value;\n            const anchor = this.context.link.linkAnchorText;\n            const anchorText = anchor.value.length === 0 ? url : anchor.value;\n\n            if (!this.context.dialog.updateModal) {\n                const oA = util.createElement('A');\n                oA.href = url;\n                oA.textContent = anchorText;\n                oA.target = (this.context.link.linkNewWindowCheck.checked ? '_blank' : '');\n\n                this.insertNode(oA);\n                this.setRange(oA.childNodes[0], 0, oA.childNodes[0], oA.textContent.length);\n            } else {\n                this.context.link._linkAnchor.href = url;\n                this.context.link._linkAnchor.textContent = anchorText;\n                this.context.link._linkAnchor.target = (this.context.link.linkNewWindowCheck.checked ? '_blank' : '');\n                this.setRange(this.context.link._linkAnchor.childNodes[0], 0, this.context.link._linkAnchor.childNodes[0], this.context.link._linkAnchor.textContent.length);\n            }\n\n            this.context.link.focusElement.value = '';\n            this.context.link.linkAnchorText.value = '';\n        }.bind(this);\n\n        try {\n            submitAction();\n        } finally {\n            this.plugins.dialog.close.call(this);\n            this.closeLoading();\n            this.focus();\n        }\n\n        return false;\n    },\n\n    call_controller_linkButton: function (selectionATag) {\n        this.editLink = this.context.link._linkAnchor = selectionATag;\n        const linkBtn = this.context.link.linkBtn;\n\n        linkBtn.getElementsByTagName('A')[0].href = selectionATag.href;\n        linkBtn.getElementsByTagName('A')[0].textContent = selectionATag.textContent;\n\n        const offset = util.getOffset(selectionATag);\n        linkBtn.style.left = (offset.left - this.context.element.wysiwyg.scrollLeft) + 'px';\n        linkBtn.style.top = (offset.top + selectionATag.offsetHeight + 10) + 'px';\n        \n        linkBtn.style.display = 'block';\n\n        this.controllersOn(linkBtn);\n    },\n\n    onClick_linkBtn: function (e) {\n        e.stopPropagation();\n\n        const command = e.target.getAttribute('data-command') || e.target.parentNode.getAttribute('data-command');\n        if (!command) return;\n\n        e.preventDefault();\n\n        if (/update/.test(command)) {\n            this.context.link.focusElement.value = this.context.link._linkAnchor.href;\n            this.context.link.linkAnchorText.value = this.context.link._linkAnchor.textContent;\n            this.context.link.linkNewWindowCheck.checked = (/_blank/i.test(this.context.link._linkAnchor.target) ? true : false);\n            this.plugins.dialog.open.call(this, 'link', true);\n        }\n        else {\n            /** delete */\n            util.removeItem(this.context.link._linkAnchor);\n            this.context.link._linkAnchor = null;\n            this.focus();\n        }\n\n        this.controllersOff();\n    },\n\n    init: function () {\n        const contextLink = this.context.link;\n        contextLink.linkBtn.style.display = 'none';\n        contextLink._linkAnchor = null;\n        contextLink.focusElement.value = '';\n        contextLink.linkAnchorText.value = '';\n        contextLink.linkNewWindowCheck.checked = false;\n    }\n};\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=style&index=0&lang=scss&\"","/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport util from '../../lib/util';\n\nexport default {\n    name: 'align',\n    add: function (core, targetElement) {\n        /** set submenu */\n        let listDiv = eval(this.setSubmenu(core.lang));\n\n        /** add event listeners */\n        listDiv.getElementsByTagName('UL')[0].addEventListener('click', this.pickup.bind(core));\n\n        /** append html */\n        targetElement.parentNode.appendChild(listDiv);\n\n        /** empty memory */\n        listDiv = null;\n    },\n\n    setSubmenu: function (lang) {\n        const listDiv = util.createElement('DIV');\n\n        listDiv.className = 'layer_editor layer_align';\n        listDiv.style.display = 'none';\n        listDiv.innerHTML = '' +\n            '<div class=\"sun-editor-submenu inner_layer\">' +\n            '   <ul class=\"list_editor\">' +\n            '       <li><button type=\"button\" class=\"btn_edit btn_align\" data-command=\"justifyleft\" title=\"' + lang.toolbar.alignLeft + '\"><span class=\"img_editor icon-align-left\"></span>' + lang.toolbar.alignLeft + '</button></li>' +\n            '       <li><button type=\"button\" class=\"btn_edit btn_align\" data-command=\"justifycenter\" title=\"' + lang.toolbar.alignCenter + '\"><span class=\"img_editor icon-align-center\"></span>' + lang.toolbar.alignCenter + '</button></li>' +\n            '       <li><button type=\"button\" class=\"btn_edit btn_align\" data-command=\"justifyright\" title=\"' + lang.toolbar.alignRight + '\"><span class=\"img_editor icon-align-right\"></span>' + lang.toolbar.alignRight + '</button></li>' +\n            '       <li><button type=\"button\" class=\"btn_edit btn_align\" data-command=\"justifyfull\" title=\"' + lang.toolbar.justifyFull + '\"><span class=\"img_editor icon-align-just\"></span>' + lang.toolbar.justifyFull + '</button></li>' +\n            '   </ul>' +\n            '</div>';\n\n        return listDiv;\n    },\n\n    pickup: function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        let target = e.target;\n        let command = null;\n        \n        while (!command && !/UL/i.test(target.tagName)) {\n            command = target.getAttribute('data-command');\n            target = target.parentNode;\n        }\n\n        this.focus();\n        this.execCommand(command, false, null);\n        this.submenuOff();\n    }\n};\n","/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\r\n'use strict';\r\n\r\nimport util from '../../lib/util';\r\nimport colorPicker from '../modules/colorPicker';\r\n\r\nexport default {\r\n    name: 'fontColor',\r\n    add: function (core, targetElement) {\r\n        core.addModule([colorPicker]);\r\n\r\n        const context = core.context;\r\n        context.fontColor = {\r\n            previewEl: null,\r\n            colorInput: null\r\n        };\r\n\r\n        /** set submenu */\r\n        let listDiv = eval(this.setSubmenu(context.colorPicker.colorListHTML));\r\n        context.fontColor.colorInput = listDiv.getElementsByClassName('sun-editor-id-submenu-color-input')[0];\r\n\r\n        /** add event listeners */\r\n        context.fontColor.colorInput.addEventListener('keyup', this.onChangeInput.bind(core));\r\n        listDiv.getElementsByClassName('sun-editor-id-submenu-color-submit')[0].addEventListener('click', this.submit.bind(core));\r\n        listDiv.getElementsByTagName('UL')[0].addEventListener('click', this.pickup.bind(core));\r\n\r\n        /** append html */\r\n        targetElement.parentNode.appendChild(listDiv);\r\n\r\n        /** empty memory */\r\n        listDiv = null;\r\n    },\r\n\r\n    setSubmenu: function (colorArea) {\r\n        const listDiv = util.createElement('DIV');\r\n\r\n        listDiv.className = 'sun-editor-submenu layer_editor';\r\n        listDiv.style.display = 'none';\r\n        listDiv.innerHTML = colorArea;\r\n\r\n        return listDiv;\r\n    },\r\n\r\n    on: function () {\r\n        const contextPicker = this.context.colorPicker;\r\n\r\n        contextPicker._colorInput = this.context.fontColor.colorInput;\r\n        contextPicker._defaultColor = '#000000';\r\n        contextPicker._styleProperty = 'color';\r\n\r\n        this.plugins.colorPicker.init.call(this, this.getSelectionNode(), null);\r\n    },\r\n\r\n    onChangeInput: function (e) {\r\n        this.plugins.colorPicker.setCurrentColor.call(this, '#' + e.target.value);\r\n    },\r\n\r\n    submit: function () {\r\n        this.plugins.fontColor.applyColor.call(this, this.context.colorPicker._currentColor);\r\n    },\r\n\r\n    pickup: function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        if (!/^BUTTON$/i.test(e.target.tagName)) {\r\n            return false;\r\n        }\r\n\r\n        this.plugins.fontColor.applyColor.call(this, e.target.getAttribute('data-value'));\r\n    },\r\n\r\n    applyColor: function (color) {\r\n        const newNode = util.createElement('SPAN');\r\n        newNode.style.color = color;\r\n\r\n        this.nodeChange(newNode, ['color']);\r\n\r\n        this.submenuOff();\r\n        this.focus();\r\n    }\r\n};\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('textarea',{staticStyle:{\"display\":\"none\"},attrs:{\"id\":_vm.editor_id}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\r\n'use strict';\r\n\r\nimport util from './util';\r\nimport notice from '../plugins/modules/notice';\r\n\r\n/**\r\n * @description SunEditor core closure\r\n * @param context\r\n * @param plugins\r\n * @param lang\r\n * @returns {{save: save, getContext: getContext, getContent: getContent, setContent: setContent, appendContent: appendContent, disabled: disabled, enabled: enabled, show: show, hide: hide, destroy: destroy}}\r\n */\r\nconst core = function (context, plugins, lang) {\r\n    const _d = document;\r\n    const _w = window;\r\n    /**\r\n     * @description editor core object\r\n     * should always bind this object when registering an event in the plug-in.\r\n     */\r\n    const editor = {\r\n        /**\r\n         * @description Elements and user options parameters of the suneditor\r\n         */\r\n        context: context,\r\n\r\n        /**\r\n         * @description loaded plugins\r\n         */\r\n        plugins: {},\r\n\r\n        /**\r\n         * @description Whether the plugin is initialized\r\n         */\r\n        initPlugins: {},\r\n\r\n        /**\r\n         * @description loaded language\r\n         */\r\n        lang: lang,\r\n\r\n        /**\r\n         * @description dialog element\r\n         */\r\n        dialogForm: null,\r\n\r\n        /**\r\n         * @description current subment name\r\n         * @private\r\n         */\r\n        _submenuName: '',\r\n\r\n        /**\r\n         * @description submenu element\r\n         */\r\n        submenu: null,\r\n\r\n        /**\r\n         * @description binded submenuOff method\r\n         * @private\r\n         */\r\n        _bindedSubmenuOff: null,\r\n\r\n        /**\r\n         * @description active button element in submenu\r\n         */\r\n        submenuActiveButton: null,\r\n\r\n        /**\r\n         * @description The elements array to be processed unvisible when the controllersOff function is executed (resizing, link modified button, table controller)\r\n         */\r\n        controllerArray: [],\r\n\r\n        /**\r\n         * @description binded controllersOff method\r\n         * @private\r\n         */\r\n        _bindControllersOff: null,\r\n\r\n        /**\r\n         * @description An array of buttons whose class name is not \"code-view-enabled\"\r\n         */\r\n        codeViewDisabledButtons: context.element.toolbar.querySelectorAll('.sun-editor-id-toolbar button:not([class~=\"code-view-enabled\"])'),\r\n\r\n        /**\r\n         * @description Is inline mode?\r\n         * @private\r\n         */\r\n        _isInline: /inline/i.test(context.option.mode),\r\n\r\n        /**\r\n         * @description Is balloon mode?\r\n         * @private\r\n         */\r\n        _isBalloon: /balloon/i.test(context.option.mode),\r\n\r\n        /**\r\n         * @description Required value when using inline mode to sticky toolbar\r\n         * @private\r\n         */\r\n        _inlineToolbarAttr: {width: 0, height: 0, isShow: false},\r\n\r\n        /**\r\n         * @description An user event function when image uploaded success or remove image\r\n         * @private\r\n         */\r\n        _imageUpload: function (targetImgElement, index, isDelete) {\r\n            if (userFunction.onImageUpload) userFunction.onImageUpload(targetImgElement, index, isDelete);\r\n        },\r\n\r\n        /**\r\n         * @description Elements that need to change text or className for each selection change\r\n         * @property {Element} FORMAT - format button\r\n         * @property {Element} FONT - font family button\r\n         * @property {Element} SIZE - font size button\r\n         * @property {Element} B - bold button\r\n         * @property {Element} U - underline button\r\n         * @property {Element} I - italic button\r\n         * @property {Element} STRIKE - strike button\r\n         * @property {Element} SUB - subscript button\r\n         * @property {Element} SUP - superscript button\r\n         */\r\n        commandMap: {\r\n            FORMAT: context.tool.format,\r\n            FONT: context.tool.font,\r\n            SIZE: context.tool.fontSize,\r\n            B: context.tool.bold,\r\n            U: context.tool.underline,\r\n            I: context.tool.italic,\r\n            STRIKE: context.tool.strike,\r\n            SUB: context.tool.subscript,\r\n            SUP: context.tool.superscript\r\n        },\r\n\r\n        /**\r\n         * @description Variables used internally in editor operation\r\n         * @property {Boolean} wysiwygActive - The wysiwyg frame or code view state\r\n         * @property {Boolean} isFullScreen - State of full screen\r\n         * @property {Number} innerHeight_fullScreen - InnerHeight in editor when in full screen\r\n         * @property {Number} resizeClientY - Remember the vertical size of the editor before resizing the editor (Used when calculating during resize operation)\r\n         * @property {Number} tabSize - Indented size when tab button clicked (4)\r\n         * @property {Number} minResizingSize - Minimum size of editing area when resized (65)\r\n         * @property {Array} currentNodes -  An array of the current cursor's node structure\r\n         * @private\r\n         */\r\n        _variable: {\r\n            wysiwygActive: true,\r\n            isFullScreen: false,\r\n            innerHeight_fullScreen: 0,\r\n            resizeClientY: 0,\r\n            tabSize: 4,\r\n            minResizingSize: 65,\r\n            currentNodes: [],\r\n            _range: null,\r\n            _selectionNode: null,\r\n            _originCssText: context.element.topArea.style.cssText,\r\n            _bodyOverflow: '',\r\n            _editorAreaOriginCssText: '',\r\n            _wysiwygOriginCssText: '',\r\n            _codeOriginCssText: '',\r\n            _sticky: false,\r\n            _imagesInfo: [],\r\n            _imageIndex: 0\r\n        },\r\n\r\n        /**\r\n         * @description If the plugin is not added, add the plugin and call the 'add' function.\r\n         * If the plugin is added call callBack function.\r\n         * @param {String} pluginName - The name of the plugin to call\r\n         * @param {function} callBackFunction - Function to be executed immediately after module call\r\n         */\r\n        callPlugin: function (pluginName, callBackFunction) {\r\n            if (!this.plugins[pluginName]) {\r\n                throw Error('[SUNEDITOR.core.callPlugin.fail] The called plugin does not exist or is in an invalid format. (pluginName:\"' + pluginName + '\")');\r\n            } else if (!this.initPlugins[pluginName]){\r\n                this.plugins[pluginName].add(this, this.plugins[pluginName].buttonElement);\r\n                this.initPlugins[pluginName] = true;\r\n            }\r\n                \r\n            callBackFunction();\r\n        },\r\n\r\n        /**\r\n         * @description If the module is not added, add the module and call the 'add' function\r\n         * @param {Array} moduleArray - module object's Array [dialog, resizing]\r\n         */\r\n        addModule: function (moduleArray) {\r\n            let moduleName = '';\r\n            for (let i = 0, len = moduleArray.length; i < len; i++) {\r\n                moduleName = moduleArray[i].name;\r\n                if (!this.plugins[moduleName]) {\r\n                    this.plugins[moduleName] = util.copyObj(moduleArray[i]);\r\n                    this.plugins[moduleName].add(this);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Enabled submenu\r\n         * @param {Element} element - Submenu element to call\r\n         */\r\n        submenuOn: function (element) {\r\n            const submenuName = this._submenuName = element.getAttribute('data-command');\r\n            if (this.plugins[submenuName].on) this.plugins[submenuName].on.call(this);\r\n\r\n            this.submenu = element.nextElementSibling;\r\n            this.submenu.style.display = 'block';\r\n            util.addClass(element, 'on');\r\n            this.submenuActiveButton = element;\r\n\r\n            const overLeft = this.context.element.toolbar.offsetWidth - (element.parentElement.offsetLeft + this.submenu.offsetWidth);\r\n            if (overLeft < 0) this.submenu.style.left = overLeft + 'px';\r\n            else this.submenu.style.left = '1px';\r\n\r\n            this._bindedSubmenuOff = this.submenuOff.bind(this);\r\n            _d.addEventListener('mousedown', this._bindedSubmenuOff, false);\r\n        },\r\n\r\n        /**\r\n         * @description Disable submenu\r\n         */\r\n        submenuOff: function () {\r\n            if (this.submenu) {\r\n                this._submenuName = '';\r\n                this.submenu.style.display = 'none';\r\n                this.submenu = null;\r\n                util.removeClass(this.submenuActiveButton, 'on');\r\n                this.submenuActiveButton = null;\r\n                _d.removeEventListener('mousedown', this._bindedSubmenuOff);\r\n            }\r\n\r\n            this.controllersOff();\r\n        },\r\n\r\n        /**\r\n         * @description Disable controller in editor area (link button, image resize button)\r\n         */\r\n        controllersOn: function () {\r\n            for (let i = 0; i < arguments.length; i++) {\r\n                arguments[i].style.display = 'block';\r\n                this.controllerArray[i] = arguments[i];\r\n            }\r\n\r\n            this._bindControllersOff = this.controllersOff.bind(this);\r\n            _d.addEventListener('mousedown', this._bindControllersOff, false);\r\n        },\r\n\r\n        /**\r\n         * @description Disable controller in editor area (link button, image resize button)\r\n         */\r\n        controllersOff: function () {\r\n            const len = this.controllerArray.length;\r\n\r\n            if (len > 0) {\r\n                for (let i = 0; i < len; i++) {\r\n                    this.controllerArray[i].style.display = 'none';\r\n                }\r\n\r\n                this.controllerArray = [];\r\n                _d.removeEventListener('mousedown', this._bindControllersOff);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description javascript execCommand\r\n         * @param {String} command - javascript execCommand function property\r\n         * @param {Boolean} showDefaultUI - javascript execCommand function property\r\n         * @param {String} value - javascript execCommand function property\r\n         */\r\n        execCommand: function (command, showDefaultUI, value) {\r\n            _d.execCommand(command, showDefaultUI, (command === 'formatBlock' ? '<' + value + '>' : value));\r\n        },\r\n\r\n        /**\r\n         * @description Focus to wysiwyg area\r\n         */\r\n        focus: function () {\r\n            if (context.element.wysiwyg.style.display === 'none') return;\r\n\r\n            const caption = util.getParentElement(this.getSelectionNode(), 'figcaption');\r\n            if (caption) {\r\n                caption.focus();\r\n            } else {\r\n                context.element.wysiwyg.focus();\r\n            }\r\n\r\n            event._findButtonEffectTag();\r\n        },\r\n\r\n        /**\r\n         * @description Set current editor's range object\r\n         * @param {Element} startCon - The startContainer property of the selection object.\r\n         * @param {Number} startOff - The startOffset property of the selection object.\r\n         * @param {Element} endCon - The endContainer property of the selection object.\r\n         * @param {Element} endOff - The endOffset property of the selection object.\r\n         */\r\n        setRange: function (startCon, startOff, endCon, endOff) {\r\n            const range = _d.createRange();\r\n            range.setStart(startCon, startOff);\r\n            range.setEnd(endCon, endOff);\r\n\r\n            const selection = _w.getSelection();\r\n\r\n            if (selection.removeAllRanges) {\r\n                selection.removeAllRanges();\r\n            }\r\n\r\n            selection.addRange(range);\r\n            this._editorRange();\r\n        },\r\n\r\n        /**\r\n         * @description Get current editor's range object\r\n         * @returns {Object}\r\n         */\r\n        getRange: function () {\r\n            return this._variable._range || this._createDefaultRange();\r\n        },\r\n\r\n        /**\r\n         * @description Get current select node\r\n         * @returns {Node}\r\n         */\r\n        getSelectionNode: function () {\r\n            return this._variable._selectionNode || context.element.wysiwyg.firstChild;\r\n        },\r\n\r\n        /**\r\n         * @description Saving the range object and the currently selected node of editor\r\n         * @private\r\n         */\r\n        _editorRange: function () {\r\n            const selection = _w.getSelection();\r\n            if (!util.getParentElement(selection.focusNode, '.sun-editor-id-wysiwyg')) return;\r\n            \r\n            let range = null;\r\n            let selectionNode = null;\r\n\r\n            if (selection.rangeCount > 0) {\r\n                range = selection.getRangeAt(0);\r\n            }\r\n            else {\r\n                range = this._createDefaultRange();\r\n            }\r\n\r\n            this._variable._range = range;\r\n\r\n            if (range.collapsed) {\r\n                selectionNode = range.commonAncestorContainer;\r\n            } else {\r\n                selectionNode = selection.extentNode || selection.anchorNode;\r\n            }\r\n\r\n            this._variable._selectionNode = selectionNode;\r\n        },\r\n\r\n        /**\r\n         * @description Return the range object of editor's first child node\r\n         * @returns {Object}\r\n         * @private\r\n         */\r\n        _createDefaultRange: function () {\r\n            const range = _d.createRange();\r\n            range.setStart(context.element.wysiwyg.firstChild, 0);\r\n            range.setEnd(context.element.wysiwyg.firstChild, 0);\r\n            return range;\r\n        },\r\n\r\n        /**\r\n         * @description Returns a \"formatElement\"(P, DIV, H[1-6], LI) array from the currently selected range.\r\n         * @returns {Array}\r\n         */\r\n        getSelectedFormatElements: function () {\r\n            let range = this.getRange();\r\n\r\n            if (util.isWysiwygDiv(range.startContainer)) {\r\n                const children = context.element.wysiwyg.children;\r\n                this.setRange(children[0], 0, children[children.length - 1], children[children.length - 1].textContent.length);\r\n                range = this.getRange();\r\n            }\r\n\r\n            const startCon = range.startContainer;\r\n            const endCon = range.endContainer;\r\n            const commonCon = range.commonAncestorContainer;\r\n            const rangeFormatElements = [];\r\n\r\n            if (!util.isWysiwygDiv(commonCon) && !util.isRangeFormatElement(commonCon)) return [util.getFormatElement(commonCon)];\r\n\r\n            // get line nodes\r\n            const lineNodes = util.getListChildren(commonCon, function (current) {\r\n                return util.isFormatElement(current);\r\n            });\r\n\r\n            if (startCon === endCon) return lineNodes[0];\r\n\r\n            let startLine = util.getFormatElement(startCon);\r\n            let endLine = util.getFormatElement(endCon);\r\n            let startIdx = 0;\r\n            let endIdx = 0;\r\n\r\n            for (let i = 0, len = lineNodes.length; i < len; i++) {\r\n                if (startLine === lineNodes[i]) {\r\n                    startIdx = i;\r\n                    continue;\r\n                }\r\n                if (endLine === lineNodes[i]) {\r\n                    endIdx = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            for (let i = startIdx; i <= endIdx; i++) {\r\n                rangeFormatElements.push(lineNodes[i]);\r\n            }\r\n\r\n            return rangeFormatElements;\r\n        },\r\n\r\n        /**\r\n         * @description Returns a \"rangeFormatElement\"(blockquote, TABLE, TR, TD, OL, UL, PRE) array from the currently selected range.\r\n         * @returns {Array}\r\n         */\r\n        getSelectedRangeFormatElements: function () {\r\n            let range = this.getRange();\r\n\r\n            if (util.isWysiwygDiv(range.startContainer)) {\r\n                const children = context.element.wysiwyg.children;\r\n                this.setRange(children[0], 0, children[children.length - 1], children[children.length - 1].textContent.length);\r\n                range = this.getRange();\r\n            }\r\n\r\n            const startCon = range.startContainer;\r\n            const endCon = range.endContainer;\r\n            const commonCon = range.commonAncestorContainer;\r\n            const rangeFormatElements = [];\r\n\r\n            if (util.isRangeFormatElement(commonCon)) return [commonCon];\r\n            if (!util.isWysiwygDiv(commonCon)) {\r\n                const el = util.getRangeFormatElement(commonCon);\r\n                return el ? [el] : [];\r\n            }\r\n\r\n            // get range Elements\r\n            const rangeElements = util.getListChildren(commonCon, function (current) {\r\n                return util.isRangeFormatElement(current);\r\n            });\r\n\r\n            if (startCon === endCon) return rangeElements[0];\r\n\r\n            let startLine = util.getRangeFormatElement(startCon);\r\n            let endLine = util.getRangeFormatElement(endCon);\r\n            let startIdx = 0;\r\n            let endIdx = 0;\r\n\r\n            for (let i = 0, len = rangeElements.length; i < len; i++) {\r\n                if (startLine === rangeElements[i]) {\r\n                    startIdx = i;\r\n                    continue;\r\n                }\r\n                if (endLine === rangeElements[i]) {\r\n                    endIdx = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            for (let i = startIdx; i <= endIdx; i++) {\r\n                if (rangeElements[i]) rangeFormatElements.push(rangeElements[i]);\r\n            }\r\n\r\n            return rangeFormatElements;\r\n        },\r\n\r\n        /**\r\n         * @description Determine if this offset is the edge offset of container\r\n         * @param {Object} container - The container property of the selection object.\r\n         * @param {Number} offset - The offset property of the selection object.\r\n         * @returns {Boolean}\r\n         */\r\n        isEdgePoint: function (container, offset) {\r\n            return (offset === 0) || (offset === container.nodeValue.length);\r\n        },\r\n\r\n        /**\r\n         * @description Show loading box\r\n         */\r\n        showLoading: function () {\r\n            context.element.loading.style.display = 'block';\r\n        },\r\n\r\n        /**\r\n         * @description Close loading box\r\n         */\r\n        closeLoading: function () {\r\n            context.element.loading.style.display = 'none';\r\n        },\r\n\r\n        /**\r\n         * @description Append format element to sibling node of argument element.\r\n         * If the \"formatNodeName\" argument value is present, the tag of that argument value is inserted,\r\n         * If not, the currently selected format tag is inserted.\r\n         * @param {Element} element - Insert as siblings of that element\r\n         * @param {String|null} formatNodeName - Node name to be inserted\r\n         * @returns {Element}\r\n         */\r\n        appendFormatTag: function (element, formatNodeName) {\r\n            const formatEl = util.getRangeFormatElement(element) || util.getFormatElement(element);\r\n            const currentFormatEl = util.getFormatElement(this.getSelectionNode());\r\n            const oFormatName = formatNodeName ? formatNodeName : util.isFormatElement(currentFormatEl) ? currentFormatEl.nodeName : 'P';\r\n            const oFormat = util.createElement(oFormatName);\r\n            oFormat.innerHTML = util.zeroWidthSpace;\r\n\r\n            if (util.isCell(formatEl)) formatEl.insertBefore(oFormat, element.nextElementSibling);\r\n            else formatEl.parentNode.insertBefore(oFormat, formatEl.nextElementSibling);\r\n\r\n            return oFormat;\r\n        },\r\n\r\n        /**\r\n         * @description Delete selected node and insert argument value node\r\n         * @param {Element} oNode - Node to be inserted\r\n         * @param {(Element|null)} rightNode - If the node exists, it is inserted after the node\r\n         */\r\n        insertNode: function (oNode, rightNode) {\r\n            const range = this.getRange();\r\n            let parentNode = null;\r\n\r\n            if (!rightNode) {\r\n                const startCon = range.startContainer;\r\n                const startOff = range.startOffset;\r\n                const endCon = range.endContainer;\r\n                const endOff = range.endOffset;\r\n                const commonCon = range.commonAncestorContainer;\r\n\r\n                parentNode = startCon;\r\n                if (startCon.nodeType === 3) {\r\n                    parentNode = startCon.parentNode;\r\n                }\r\n\r\n                /** No Select range node */\r\n                if (range.collapsed) {\r\n                    if (commonCon.nodeType === 3) {\r\n                        rightNode = commonCon.splitText(endOff);\r\n                    }\r\n                    else {\r\n                        if (parentNode.lastChild !== null && util.isBreak(parentNode.lastChild)) {\r\n                            parentNode.removeChild(parentNode.lastChild);\r\n                        }\r\n                        rightNode = null;\r\n                    }\r\n                }\r\n                /** Select range nodes */\r\n                else {\r\n                    const isSameContainer = startCon === endCon;\r\n\r\n                    if (isSameContainer) {\r\n                        if (this.isEdgePoint(endCon, endOff)) rightNode = endCon.nextSibling;\r\n                        else rightNode = endCon.splitText(endOff);\r\n\r\n                        let removeNode = startCon;\r\n                        if (!this.isEdgePoint(startCon, startOff)) removeNode = startCon.splitText(startOff);\r\n\r\n                        parentNode.removeChild(removeNode);\r\n                    }\r\n                    else {\r\n                        this.removeNode();\r\n                        parentNode = commonCon;\r\n                        rightNode = endCon;\r\n\r\n                        while (rightNode.parentNode !== commonCon) {\r\n                            rightNode = rightNode.parentNode;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                parentNode = rightNode.parentNode;\r\n                rightNode = rightNode.nextSibling;\r\n            }\r\n\r\n            try {\r\n                parentNode.insertBefore(oNode, rightNode);\r\n            } catch (e) {\r\n                parentNode.appendChild(oNode);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Delete the currently selected node\r\n         */\r\n        removeNode: function () {\r\n            const range = this.getRange();\r\n\r\n            if (range.deleteContents) {\r\n                range.deleteContents();\r\n                return;\r\n            }\r\n\r\n            const startCon = range.startContainer;\r\n            const startOff = range.startOffset;\r\n            const endCon = range.endContainer;\r\n            const endOff = range.endOffset;\r\n            const commonCon = range.commonAncestorContainer;\r\n\r\n            let beforeNode = null;\r\n            let afterNode = null;\r\n\r\n            const childNodes = util.getListChildNodes(commonCon);\r\n            let startIndex = util.getArrayIndex(childNodes, startCon);\r\n            let endIndex = util.getArrayIndex(childNodes, endCon);\r\n\r\n            for (let i = startIndex + 1, startNode = startCon; i >= 0; i--) {\r\n                if (childNodes[i] === startNode.parentNode && childNodes[i].firstChild === startNode && startOff === 0) {\r\n                    startIndex = i;\r\n                    startNode = startNode.parentNode;\r\n                }\r\n            }\r\n\r\n            for (let i = endIndex - 1, endNode = endCon; i > startIndex; i--) {\r\n                if (childNodes[i] === endNode.parentNode && childNodes[i].nodeType === 1) {\r\n                    childNodes.splice(i, 1);\r\n                    endNode = endNode.parentNode;\r\n                    --endIndex;\r\n                }\r\n            }\r\n\r\n            for (let i = startIndex; i <= endIndex; i++) {\r\n                const item = childNodes[i];\r\n\r\n                if (item.length === 0 || (item.nodeType === 3 && item.data === undefined)) {\r\n                    util.removeItem(item);\r\n                    continue;\r\n                }\r\n\r\n                if (item === startCon) {\r\n                    if (startCon.nodeType === 1) {\r\n                        beforeNode = util.createTextNode(startCon.textContent);\r\n                    } else {\r\n                        beforeNode = util.createTextNode(startCon.substringData(0, startOff));\r\n                    }\r\n\r\n                    if (beforeNode.length > 0) {\r\n                        startCon.data = beforeNode.data;\r\n                    } else {\r\n                        util.removeItem(startCon);\r\n                    }\r\n\r\n                    continue;\r\n                }\r\n\r\n                if (item === endCon) {\r\n                    if (endCon.nodeType === 1) {\r\n                        afterNode = util.createTextNode(endCon.textContent);\r\n                    } else {\r\n                        afterNode = util.createTextNode(endCon.substringData(endOff, (endCon.length - endOff)));\r\n                    }\r\n\r\n                    if (afterNode.length > 0) {\r\n                        endCon.data = afterNode.data;\r\n                    } else {\r\n                        util.removeItem(endCon);\r\n                    }\r\n\r\n                    continue;\r\n                }\r\n\r\n                util.removeItem(item);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description appended all selected format Element to the argument element and insert\r\n         * @param {Element} wrapTag - Element of wrap the arguments\r\n         */\r\n        wrapToTags: function (wrapTag) {\r\n            const range = this.getRange();\r\n            const rangeLines = this.getSelectedFormatElements();\r\n\r\n            if (!rangeLines) {\r\n                const inner = util.createElement(util.isCell(this.getSelectionNode()) ? 'DIV' : 'P');\r\n                inner.innerHTML = util.zeroWidthSpace;\r\n                wrapTag.appendChild(inner);\r\n                this.getSelectionNode().appendChild(wrapTag);\r\n                return;\r\n            }\r\n\r\n            let last  = rangeLines[rangeLines.length - 1];\r\n            let standTag, beforeTag, pElement;\r\n\r\n            if (util.isRangeFormatElement(last) || util.isFormatElement(last)) {\r\n                standTag = last;\r\n            } else {\r\n                standTag = util.getRangeFormatElement(last) || util.getFormatElement(last);\r\n            }\r\n\r\n            if (util.isCell(standTag)) {\r\n                beforeTag = null;\r\n                pElement = standTag;\r\n            } else {\r\n                beforeTag = standTag.nextSibling;\r\n                pElement = standTag.parentNode;\r\n            }\r\n\r\n            let listParent = null;\r\n            let line = null;\r\n            let prevNodeName = '';\r\n            \r\n            for (let i = 0, len = rangeLines.length; i < len; i++) {\r\n                line = rangeLines[i];\r\n\r\n                if (/^LI$/i.test(line.nodeName)) {\r\n                    if (listParent === null || !/^LI$/i.test(prevNodeName)) {\r\n                        listParent = util.createElement(line.parentNode.nodeName);\r\n                    }\r\n\r\n                    listParent.appendChild(line);\r\n                    if (i === len - 1 || !/^LI$/i.test(rangeLines[i + 1].nodeName)) wrapTag.appendChild(listParent);\r\n                }\r\n                else {\r\n                    wrapTag.appendChild(line);\r\n                }\r\n\r\n                prevNodeName = line.nodeName;\r\n            }\r\n\r\n            pElement.insertBefore(wrapTag, beforeTag);\r\n            if (!range.collapsed && (util.isRangeFormatElement(range.startContainer) || util.isRangeFormatElement(range.endContainer))) util.removeEmptyNode(pElement);\r\n        },\r\n\r\n        /**\r\n         * @description Add the node received as an argument value to the selected area.\r\n         * 1. When there is the same css value node in the selection area, the tag is stripped.\r\n         * 2. If there is another css value other thanCss attribute values received as arguments on the node, removed only Css attribute values received as arguments\r\n         * 3. If you pass an element whose node name is \"removenode\" as an argument value, it performs a type removal operation. ex) nodeChange(document.createElement('removenode'))\r\n         * @param {Element} appendNode - The dom that will wrap the selected text area\r\n         * @param {Array} checkCSSPropertyArray - The css attribute name Array to check (['font-size'], ['font-family', 'background-color', 'border']...])\r\n         */\r\n        nodeChange: function (appendNode, checkCSSPropertyArray) {\r\n            const range = this.getRange();\r\n            const isRemoveFormat = /removenode/i.test(appendNode.nodeName);\r\n            let tempCon, tempOffset, tempChild, tempArray;\r\n\r\n            /* checked same style property */\r\n            if (range.startContainer === range.endContainer) {\r\n                let sNode = range.startContainer;\r\n                if (isRemoveFormat) {\r\n                    if (util.getFormatElement(sNode) === sNode.parentNode) return;\r\n                } else {\r\n                    let checkCnt = 0;\r\n\r\n                    for (let i = 0; i < checkCSSPropertyArray.length; i++) {\r\n                        while(!util.isFormatElement(sNode) && !util.isWysiwygDiv(sNode)) {\r\n                            if (sNode.nodeType === 1 && sNode.style[checkCSSPropertyArray[i]] === appendNode.style[checkCSSPropertyArray[i]]) {\r\n                                checkCnt++;\r\n                            }\r\n                            sNode = sNode.parentNode;\r\n                        }\r\n                    }\r\n    \r\n                    if (checkCnt >= checkCSSPropertyArray.length) return;\r\n                }\r\n            }\r\n\r\n            /* find text node */\r\n            // startContainer\r\n            tempCon = util.isWysiwygDiv(range.startContainer) ? context.element.wysiwyg.firstChild : range.startContainer;\r\n            tempOffset = range.startOffset;\r\n\r\n            if (tempCon.nodeType === 1 && tempCon.childNodes.length > 0) {\r\n                while (tempCon && !util.isBreak(tempCon) && tempCon.nodeType === 1) {\r\n                    tempArray = [];\r\n                    tempChild = tempCon.childNodes;\r\n                    for (let i = 0, len = tempChild.length; i < len; i++) {\r\n                        tempArray.push(tempChild[i]);\r\n                    }\r\n                    tempCon = tempArray[tempOffset] || tempCon.nextElementSibling || tempCon.nextSibling;\r\n                    tempOffset = 0;\r\n                }\r\n\r\n                if (util.isBreak(tempCon)) {\r\n                    const emptyText = util.createTextNode(util.zeroWidthSpace);\r\n                    tempCon.parentNode.insertBefore(emptyText, tempCon);\r\n                    tempCon = emptyText;\r\n                }\r\n            }\r\n\r\n            const startCon = tempCon;\r\n            const startOff = tempOffset;\r\n\r\n            // endContainer\r\n            tempCon = util.isWysiwygDiv(range.endContainer) ? context.element.wysiwyg.lastChild : range.endContainer;\r\n            tempOffset = range.endOffset;\r\n\r\n            if (tempCon.nodeType === 1 && tempCon.childNodes.length > 0) {\r\n                while (tempCon && !util.isBreak(tempCon) && tempCon.nodeType === 1) {\r\n                    tempArray = [];\r\n                    tempChild = tempCon.childNodes;\r\n                    for (let i = 0, len = tempChild.length; i < len; i++) {\r\n                        tempArray.push(tempChild[i]);\r\n                    }\r\n                    tempCon = tempArray[tempOffset - 1] || !/FIGURE/i.test(tempArray[0].nodeName) ? tempArray[0] : (tempCon.previousElementSibling || tempCon.previousSibling || startCon);\r\n                }\r\n                tempOffset = tempCon.textContent.length;\r\n\r\n                if (util.isBreak(tempCon)) {\r\n                    const emptyText = util.createTextNode(util.zeroWidthSpace);\r\n                    tempCon.parentNode.insertBefore(emptyText, tempCon);\r\n                    tempCon = emptyText;\r\n                    tempOffset = 0;\r\n                }\r\n            }\r\n\r\n            const endCon = tempCon;\r\n            const endOff = tempOffset;\r\n            const commonCon = range.commonAncestorContainer;\r\n            const newNodeName = appendNode.nodeName;\r\n            this.setRange(startCon, startOff, endCon, endOff);\r\n\r\n            let start = {}, end = {};\r\n            let newNode, regExp;\r\n\r\n            if (checkCSSPropertyArray) {\r\n                regExp = '(?:;|^|\\\\s)(?:' + checkCSSPropertyArray[0];\r\n                for (let i = 1; i < checkCSSPropertyArray.length; i++) {\r\n                    regExp += '|' + checkCSSPropertyArray[i];\r\n                }\r\n                regExp += ')\\\\s*:[^;]*\\\\s*(?:;|$)';\r\n                regExp = new RegExp(regExp, 'ig');\r\n            }\r\n\r\n            /** tag check function*/\r\n            const checkCss = function (vNode) {\r\n                if (isRemoveFormat || vNode.nodeType === 3 || util.isBreak(vNode)) return true;\r\n\r\n                let style = '';\r\n                if (regExp && vNode.style.cssText.length > 0) {\r\n                    style = vNode.style.cssText.replace(regExp, '').trim();\r\n                }\r\n\r\n                if (style.length > 0 || vNode.nodeName !== newNodeName) {\r\n                    if (vNode.style.cssText.length > 0) vNode.style.cssText = style;\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            };\r\n\r\n            /** one line */\r\n            if (!util.isWysiwygDiv(commonCon) && !util.isRangeFormatElement(commonCon)) {\r\n                newNode = appendNode.cloneNode(false);\r\n                const newRange = this._nodeChange_oneLine(util.getFormatElement(commonCon), newNode, checkCss, startCon, startOff, endCon, endOff, isRemoveFormat, range.collapsed);\r\n\r\n                start.container = newRange.startContainer;\r\n                start.offset = newRange.startOffset;\r\n                end.container = newRange.endContainer;\r\n                end.offset = newRange.endOffset;\r\n            }\r\n            /** multi line */\r\n            else {\r\n                // get line nodes\r\n                const lineNodes = this.getSelectedFormatElements();\r\n                const endLength = lineNodes.length - 1;\r\n\r\n                // startCon\r\n                newNode = appendNode.cloneNode(false);\r\n                start = this._nodeChange_startLine(lineNodes[0], newNode, checkCss, startCon, startOff, isRemoveFormat);\r\n\r\n                // mid\r\n                for (let i = 1; i < endLength; i++) {\r\n                    newNode = appendNode.cloneNode(false);\r\n                    this._nodeChange_middleLine(lineNodes[i], newNode, checkCss, isRemoveFormat);\r\n                }\r\n\r\n                // endCon\r\n                if (endLength > 0) {\r\n                    newNode = appendNode.cloneNode(false);\r\n                    end = this._nodeChange_endLine(lineNodes[endLength], newNode, checkCss, endCon, endOff, isRemoveFormat);\r\n                } else {\r\n                    end = start;\r\n                }\r\n            }\r\n\r\n            // set range\r\n            this.setRange(start.container, start.offset, end.container, end.offset);\r\n        },\r\n\r\n        /**\r\n         * @description wraps text nodes of line selected text.\r\n         * @param {Element} element - The node of the line that contains the selected text node.\r\n         * @param {Element} newInnerNode - The dom that will wrap the selected text area\r\n         * @param {function} validation - Check if the node should be stripped.\r\n         * @param {Element} startCon - The startContainer property of the selection object.\r\n         * @param {Number} startOff - The startOffset property of the selection object.\r\n         * @param {Element} endCon - The endContainer property of the selection object.\r\n         * @param {Number} endOff - The endOffset property of the selection object.\r\n         * @param {Boolean} isRemoveFormat - Is the remove format command ?\r\n         * @param {Boolean} collapsed - range.collapsed\r\n         * @returns {{startContainer: *, startOffset: *, endContainer: *, endOffset: *}}\r\n         * @private\r\n         */\r\n        _nodeChange_oneLine: function (element, newInnerNode, validation, startCon, startOff, endCon, endOff, isRemoveFormat, collapsed) {\r\n            const el = element;\r\n            const pNode = element.cloneNode(false);\r\n            const isSameNode = startCon === endCon;\r\n            let startContainer = startCon;\r\n            let startOffset = startOff;\r\n            let endContainer = endCon;\r\n            let endOffset = endOff;\r\n            let startPass = false;\r\n            let endPass = false;\r\n            let pCurrent, newNode, appendNode, cssText;\r\n\r\n            function checkCss (vNode) {\r\n                const regExp = new RegExp('(?:;|^|\\\\s)(?:' + cssText + 'null)\\\\s*:[^;]*\\\\s*(?:;|$)', 'ig');\r\n                let style = '';\r\n\r\n                if (regExp && vNode.style.cssText.length > 0) {\r\n                    style = regExp.test(vNode.style.cssText);\r\n                }\r\n            \r\n                return !style;\r\n            }\r\n\r\n            (function recursionFunc(current, node) {\r\n                const childNodes = current.childNodes;\r\n\r\n                for (let i = 0, len = childNodes.length; i < len; i++) {\r\n                    let child = childNodes[i];\r\n                    let coverNode = node;\r\n                    let cloneNode;\r\n\r\n                    // startContainer\r\n                    if (!startPass && child === startContainer) {\r\n                        const prevNode = util.createTextNode(startContainer.nodeType === 1 ? '' : startContainer.substringData(0, startOffset));\r\n                        const textNode = util.createTextNode(startContainer.nodeType === 1 ? '' : startContainer.substringData(startOffset, (endOffset > startOffset ? endOffset - startOffset : startOffset - endOffset)));\r\n\r\n                        if (prevNode.data.length > 0) {\r\n                            node.appendChild(prevNode);\r\n                        }\r\n\r\n                        newNode = child;\r\n                        pCurrent = [];\r\n                        cssText = '';\r\n                        while (newNode !== pNode && newNode !== el && newNode !== null) {\r\n                            if (validation(newNode) && newNode.nodeType === 1 && checkCss(newNode)) {\r\n                                pCurrent.push(newNode.cloneNode(false));\r\n                                cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n\r\n                        const childNode = pCurrent.pop() || textNode;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n\r\n                        newInnerNode.appendChild(childNode);\r\n                        pNode.appendChild(newInnerNode);\r\n\r\n                        startContainer = textNode;\r\n                        startOffset = 0;\r\n                        startPass = true;\r\n\r\n                        if (newNode !== textNode) newNode.appendChild(startContainer);\r\n                        if (!isSameNode) continue;\r\n                    }\r\n\r\n                    // endContainer\r\n                    if (!endPass && child === endContainer) {\r\n                        const afterNode = util.createTextNode(endContainer.nodeType === 1 ? '' : endContainer.substringData(endOffset, (endContainer.length - endOffset)));\r\n                        const textNode = util.createTextNode(isSameNode || endContainer.nodeType === 1 ? '' : endContainer.substringData(0, endOffset));\r\n\r\n                        if (afterNode.data.length > 0) {\r\n                            newNode = child;\r\n                            cssText = '';\r\n                            pCurrent = [];\r\n                            while (newNode !== pNode && newNode !== el && newNode !== null) {\r\n                                if (newNode.nodeType === 1 && checkCss(newNode)) {\r\n                                    pCurrent.push(newNode.cloneNode(false));\r\n                                    cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\r\n                                }\r\n                                newNode = newNode.parentNode;\r\n                            }\r\n\r\n                            cloneNode = appendNode = newNode = pCurrent.pop() || afterNode;\r\n                            while (pCurrent.length > 0) {\r\n                                newNode = pCurrent.pop();\r\n                                appendNode.appendChild(newNode);\r\n                                appendNode = newNode;\r\n                            }\r\n\r\n                            pNode.appendChild(cloneNode);\r\n                            newNode.textContent = afterNode.data;\r\n                        }\r\n\r\n                        newNode = child;\r\n                        pCurrent = [];\r\n                        cssText = '';\r\n                        while (newNode !== pNode && newNode !== el && newNode !== null) {\r\n                            if (validation(newNode) && newNode.nodeType === 1 && checkCss(newNode)) {\r\n                                pCurrent.push(newNode.cloneNode(false));\r\n                                cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n\r\n                        const childNode = pCurrent.pop() || textNode;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n\r\n                        newInnerNode.appendChild(childNode);\r\n\r\n                        endContainer = textNode;\r\n                        endOffset = textNode.data.length;\r\n                        endPass = true;\r\n\r\n                        if (!isRemoveFormat && collapsed) {\r\n                            newInnerNode = textNode;\r\n                            textNode.textContent = util.zeroWidthSpace;\r\n                        }\r\n\r\n                        if (newNode !== textNode) newNode.appendChild(endContainer);\r\n                        continue;\r\n                    }\r\n\r\n                    // other\r\n                    if (startPass) {\r\n                        if (child.nodeType === 1 && !util.isBreak(child)) {\r\n                            recursionFunc(child, child);\r\n                            continue;\r\n                        }\r\n\r\n                        newNode = child;\r\n                        pCurrent = [];\r\n                        cssText = '';\r\n                        while (newNode.parentNode !== null && newNode !== el && newNode !== newInnerNode) {\r\n                            if (newNode.nodeType === 1 && !util.isBreak(child) && (endPass || validation(newNode)) && checkCss(newNode)) {\r\n                                pCurrent.push(newNode.cloneNode(false));\r\n                                cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n\r\n                        const childNode = pCurrent.pop() || child;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n                        \r\n                        if (childNode === child) {\r\n                            if (!endPass) node = newInnerNode;\r\n                            else node = pNode;\r\n                        } else if (endPass) {\r\n                            pNode.appendChild(childNode);\r\n                            node = newNode;\r\n                        } else {\r\n                            newInnerNode.appendChild(childNode);\r\n                            node = newNode;\r\n                        }\r\n                    }\r\n\r\n                    cloneNode = child.cloneNode(false);\r\n                    node.appendChild(cloneNode);\r\n                    if (child.nodeType === 1 && !util.isBreak(child)) coverNode = cloneNode;\r\n\r\n                    recursionFunc(child, coverNode);\r\n                }\r\n            })(element, pNode);\r\n\r\n            if (isRemoveFormat) {\r\n                startContainer = util.createTextNode(collapsed ? util.zeroWidthSpace : newInnerNode.textContent);\r\n                pNode.insertBefore(startContainer, newInnerNode);\r\n                pNode.removeChild(newInnerNode);\r\n                if (collapsed) startOffset = 1;\r\n            } else if (collapsed) {\r\n                startContainer = endContainer = newInnerNode;\r\n                startOffset = 1;\r\n                endOffset = 1;\r\n            }\r\n\r\n            util.removeEmptyNode(pNode);\r\n            element.parentNode.insertBefore(pNode, element);\r\n            util.removeItem(element);\r\n\r\n            return {\r\n                startContainer: startContainer,\r\n                startOffset: startOffset,\r\n                endContainer: isRemoveFormat || !endContainer.textContent ? startContainer : endContainer,\r\n                endOffset: isRemoveFormat || !endContainer.textContent ? startContainer.textContent.length : endOffset\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @description wraps mid lines selected text.\r\n         * @param {Element} element - The node of the line that contains the selected text node.\r\n         * @param {Element} newInnerNode - The dom that will wrap the selected text area\r\n         * @param {function} validation - Check if the node should be stripped.\r\n         * @param {Boolean} isRemoveFormat - Is the remove format command ?\r\n         * @private\r\n         */\r\n        _nodeChange_middleLine: function (element, newInnerNode, validation, isRemoveFormat) {\r\n            if (isRemoveFormat) {\r\n                newInnerNode = util.createTextNode(element.textContent ? element.textContent : util.zeroWidthSpace);\r\n            } else {\r\n                (function recursionFunc(current, node) {\r\n                    const childNodes = current.childNodes;\r\n    \r\n                    for (let i = 0, len = childNodes.length; i < len; i++) {\r\n                        let child = childNodes[i];\r\n                        let coverNode = node;\r\n                        if (validation(child)) {\r\n                            let cloneNode = child.cloneNode(false);\r\n                            node.appendChild(cloneNode);\r\n                            if (child.nodeType === 1 && !util.isBreak(child)) coverNode = cloneNode;\r\n                        }\r\n                        recursionFunc(child, coverNode);\r\n                    }\r\n                })(element, newInnerNode);\r\n            }\r\n\r\n            element.innerHTML = '';\r\n            element.appendChild(newInnerNode);\r\n        },\r\n\r\n        /**\r\n         * @description wraps first line selected text.\r\n         * @param {Element} element - The node of the line that contains the selected text node.\r\n         * @param {Element} newInnerNode - The dom that will wrap the selected text area\r\n         * @param {function} validation - Check if the node should be stripped.\r\n         * @param {Element} startCon - The startContainer property of the selection object.\r\n         * @param {Number} startOff - The startOffset property of the selection object.\r\n         * @param {Boolean} isRemoveFormat - Is the remove format command ?\r\n         * @returns {{container: *, offset: *}}\r\n         * @private\r\n         */\r\n        _nodeChange_startLine: function (element, newInnerNode, validation, startCon, startOff, isRemoveFormat) {\r\n            const el = element;\r\n            const pNode = element.cloneNode(false);\r\n\r\n            let container = startCon;\r\n            let offset = startOff;\r\n            let passNode = false;\r\n            let pCurrent, newNode, appendNode;\r\n\r\n            (function recursionFunc(current, node) {\r\n                const childNodes = current.childNodes;\r\n                for (let i = 0, len = childNodes.length; i < len; i++) {\r\n                    const child = childNodes[i];\r\n                    let coverNode = node;\r\n\r\n                    if (passNode && !util.isBreak(child)) {\r\n                        if (child.nodeType === 1) {\r\n                            recursionFunc(child, child);\r\n                            continue;\r\n                        }\r\n\r\n                        newNode = child;\r\n                        pCurrent = [];\r\n                        while (newNode.parentNode !== null && newNode !== el && newNode !== newInnerNode) {\r\n                            if (newNode.nodeType === 1 && validation(newNode)) {\r\n                                pCurrent.push(newNode.cloneNode(false));\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n\r\n                        if (pCurrent.length > 0) {\r\n                            const childNode = pCurrent.pop();\r\n                            appendNode = newNode = childNode;\r\n                            while (pCurrent.length > 0) {\r\n                                newNode = pCurrent.pop();\r\n                                appendNode.appendChild(newNode);\r\n                                appendNode = newNode;\r\n                            }\r\n                            newInnerNode.appendChild(childNode);\r\n                            node = newNode;\r\n                        } else {\r\n                            node = newInnerNode;\r\n                        }\r\n                    }\r\n\r\n                    // startContainer\r\n                    if (!passNode && child === container) {\r\n                        const prevNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(0, offset));\r\n                        const textNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(offset, (container.length - offset)));\r\n\r\n                        if (prevNode.data.length > 0) {\r\n                            node.appendChild(prevNode);\r\n                        }\r\n\r\n                        newNode = node;\r\n                        pCurrent = [];\r\n                        while (newNode !== pNode && newNode !== null) {\r\n                            if (newNode.nodeType === 1 && validation(newNode)) {\r\n                                pCurrent.push(newNode.cloneNode(false));\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n\r\n                        const childNode = pCurrent.pop() || node;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n\r\n                        if (childNode !== node) {\r\n                            newInnerNode.appendChild(childNode);\r\n                            node = newNode;\r\n                        } else {\r\n                            node = newInnerNode;\r\n                        }\r\n\r\n                        if (util.isBreak(child)) newInnerNode.appendChild(child.cloneNode(false));\r\n\r\n                        pNode.appendChild(newInnerNode);\r\n                        container = textNode;\r\n                        offset = 0;\r\n                        passNode = true;\r\n\r\n                        node.appendChild(container);\r\n                        continue;\r\n                    }\r\n\r\n                    if (!passNode || validation(child)) {\r\n                        const cloneNode = child.cloneNode(false);\r\n                        node.appendChild(cloneNode);\r\n                        if (child.nodeType === 1 && !util.isBreak(child)) coverNode = cloneNode;\r\n                    }\r\n\r\n                    recursionFunc(child, coverNode);\r\n                }\r\n            })(element, pNode);\r\n\r\n            if (isRemoveFormat) {\r\n                container = util.createTextNode(newInnerNode.textContent);\r\n                pNode.insertBefore(container, newInnerNode);\r\n                pNode.removeChild(newInnerNode);\r\n            }\r\n\r\n            if (!isRemoveFormat && pNode.children.length === 0) {\r\n                if (element.childNodes) {\r\n                    container = element.childNodes[0];\r\n                } else {\r\n                    container = util.createTextNode(util.zeroWidthSpace);\r\n                    element.appendChild(container);\r\n                }\r\n            } else {\r\n                util.removeEmptyNode(pNode);\r\n                element.parentNode.insertBefore(pNode, element);\r\n                util.removeItem(element);\r\n            }\r\n\r\n            return {\r\n                container: container,\r\n                offset: offset\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @description wraps last line selected text.\r\n         * @param {Element} element - The node of the line that contains the selected text node.\r\n         * @param {Element} newInnerNode - The dom that will wrap the selected text area\r\n         * @param {function} validation - Check if the node should be stripped.\r\n         * @param {Element} endCon - The endContainer property of the selection object.\r\n         * @param {Number} endOff - The endOffset property of the selection object.\r\n         * @param {Boolean} isRemoveFormat - Is the remove format command ?\r\n         * @returns {{container: *, offset: *}}\r\n         * @private\r\n         */\r\n        _nodeChange_endLine: function (element, newInnerNode, validation, endCon, endOff, isRemoveFormat) {\r\n            const el = element;\r\n            const pNode = element.cloneNode(false);\r\n\r\n            let container = endCon;\r\n            let offset = endOff;\r\n            let passNode = false;\r\n            let pCurrent, newNode, appendNode;\r\n\r\n            (function recursionFunc(current, node) {\r\n                const childNodes = current.childNodes;\r\n                for (let i = childNodes.length -1; 0 <= i; i--) {\r\n                    const child = childNodes[i];\r\n                    let coverNode = node;\r\n\r\n                    if (passNode && !util.isBreak(child)) {\r\n                        if (child.nodeType === 1) {\r\n                            recursionFunc(child, child);\r\n                            continue;\r\n                        }\r\n\r\n                        newNode = child;\r\n                        pCurrent = [];\r\n                        while (newNode.parentNode !== null && newNode !== el && newNode !== newInnerNode) {\r\n                            if (validation(newNode) && newNode.nodeType === 1) {\r\n                                pCurrent.push(newNode.cloneNode(false));\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n\r\n                        if (pCurrent.length > 0) {\r\n                            const childNode = pCurrent.pop();\r\n                            appendNode = newNode = childNode;\r\n                            while (pCurrent.length > 0) {\r\n                                newNode = pCurrent.pop();\r\n                                appendNode.appendChild(newNode);\r\n                                appendNode = newNode;\r\n                            }\r\n                            newInnerNode.insertBefore(childNode, newInnerNode.firstChild);\r\n                            node = newNode;\r\n                        } else {\r\n                            node = newInnerNode;\r\n                        }\r\n                    }\r\n\r\n                    // endContainer\r\n                    if (!passNode && child === container) {\r\n                        const afterNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(offset, (container.length - offset)));\r\n                        const textNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(0, offset));\r\n\r\n                        if (afterNode.data.length > 0) {\r\n                            node.insertBefore(afterNode, node.firstChild);\r\n                        }\r\n\r\n                        newNode = node;\r\n                        pCurrent = [];\r\n                        while (newNode !== pNode && newNode !== null) {\r\n                            if (validation(newNode) && newNode.nodeType === 1) {\r\n                                pCurrent.push(newNode.cloneNode(false));\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n\r\n                        const childNode = pCurrent.pop() || node;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n\r\n                        if (childNode !== node) {\r\n                            newInnerNode.insertBefore(childNode, newInnerNode.firstChild);\r\n                            node = newNode;\r\n                        } else {\r\n                            node = newInnerNode;\r\n                        }\r\n\r\n                        if (util.isBreak(child)) newInnerNode.appendChild(child.cloneNode(false));\r\n\r\n                        pNode.insertBefore(newInnerNode, pNode.firstChild);\r\n                        container = textNode;\r\n                        offset = textNode.data.length;\r\n                        passNode = true;\r\n\r\n                        node.insertBefore(container, node.firstChild);\r\n                        continue;\r\n                    }\r\n\r\n                    if (!passNode || validation(child)) {\r\n                        const cloneNode = child.cloneNode(false);\r\n                        node.insertBefore(cloneNode, node.firstChild);\r\n                        if (child.nodeType === 1 && !util.isBreak(child)) coverNode = cloneNode;\r\n                    }\r\n\r\n                    recursionFunc(child, coverNode);\r\n                }\r\n            })(element, pNode);\r\n\r\n            if (isRemoveFormat) {\r\n                container = util.createTextNode(newInnerNode.textContent);\r\n                offset = container.textContent.length;\r\n                pNode.insertBefore(container, newInnerNode);\r\n                pNode.removeChild(newInnerNode);\r\n            }\r\n\r\n            if (!isRemoveFormat && pNode.childNodes.length === 0) {\r\n                if (element.childNodes) {\r\n                    container = element.childNodes[0];\r\n                } else {\r\n                    container = util.createTextNode(util.zeroWidthSpace);\r\n                    element.appendChild(container);\r\n                }\r\n            } else {\r\n                util.removeEmptyNode(pNode);\r\n                element.parentNode.insertBefore(pNode, element);\r\n                util.removeItem(element);\r\n            }\r\n\r\n            return {\r\n                container: container,\r\n                offset: offset\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @description Execute command of command button(All Buttons except submenu and dialog)\r\n         * (redo, undo, bold, underline, italic, strikethrough, subscript, superscript, removeFormat, indent, outdent, fullscreen, showBlocks, codeview, preview, print)\r\n         * @param {Element} target - The element of command button\r\n         * @param {String} command - Property of command button (data-value)\r\n         */\r\n        commandHandler: function (target, command) {\r\n            switch (command) {\r\n                case 'codeView':\r\n                    this.controllersOff();\r\n                    this.toggleCodeView();\r\n                    util.toggleClass(target, 'on');\r\n                    break;\r\n                case 'fullScreen':\r\n                    this.controllersOff();\r\n                    this.toggleFullScreen(target);\r\n                    util.toggleClass(target, 'on');\r\n                    break;\r\n                case 'indent':\r\n                case 'outdent':\r\n                    this.indent(command);\r\n                    break;\r\n                case 'redo':\r\n                case 'undo':\r\n                    this.execCommand(command, false, null);\r\n                    break;\r\n                case 'removeFormat':\r\n                    this.removeFormat();\r\n                    break;\r\n                case 'preview':\r\n                case 'print':\r\n                    this.openWindowContents(command);\r\n                    break;\r\n                case 'showBlocks':\r\n                    this.toggleDisplayBlocks();\r\n                    util.toggleClass(target, 'on');\r\n                    break;\r\n                case 'subscript':\r\n                    if (util.hasClass(context.tool.superscript, 'on')) {\r\n                        this.execCommand('superscript', false, null);\r\n                        util.removeClass(context.tool.superscript, 'on');\r\n                    }\r\n                    this.execCommand(command, false, null);\r\n                    util.toggleClass(target, 'on');\r\n                    break;\r\n                case 'superscript':\r\n                    if (util.hasClass(context.tool.subscript, 'on')) {\r\n                        this.execCommand('subscript', false, null);\r\n                        util.removeClass(context.tool.subscript, 'on');\r\n                    }\r\n                    this.execCommand(command, false, null);\r\n                    util.toggleClass(target, 'on');\r\n                    break;\r\n                default : // 'bold', 'underline', 'italic', 'strike'\r\n                    this.execCommand(command, false, target.getAttribute('data-value'));\r\n                    util.toggleClass(target, 'on');\r\n            }\r\n\r\n            this.focus();\r\n        },\r\n\r\n        /**\r\n         * @description Remove format of the currently selected range (IE, Edge not working)\r\n         */\r\n        removeFormat: function () {\r\n            this.nodeChange(util.createElement('REMOVENODE'));\r\n        },\r\n\r\n        /**\r\n         * @description This method implements indentation to selected range.\r\n         * Setted \"margin-left\" to \"25px\" in the top \"P\" tag of the parameter node.\r\n         * @param command {String} - Separator (\"indent\" or \"outdent\")\r\n         */\r\n        indent: function (command) {\r\n            const rangeLines = this.getSelectedFormatElements();\r\n            let p, margin;\r\n\r\n            for (let i = 0, len = rangeLines.length; i < len; i++) {\r\n                p = rangeLines[i];\r\n                margin = /\\d+/.test(p.style.marginLeft) ? p.style.marginLeft.match(/\\d+/)[0] * 1 : 0;\r\n\r\n                if ('indent' === command) {\r\n                    margin += 25;\r\n                } else {\r\n                    margin -= 25;\r\n                }\r\n    \r\n                p.style.marginLeft = (margin < 0 ? 0 : margin) + 'px';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Add or remove the class name of \"body\" so that the code block is visible\r\n         */\r\n        toggleDisplayBlocks: function () {\r\n            util.toggleClass(context.element.wysiwyg, 'sun-editor-show-block');\r\n        },\r\n\r\n        /**\r\n         * @description Changes to code view or wysiwyg view\r\n         */\r\n        toggleCodeView: function () {\r\n            const wysiwygActive = this._variable.wysiwygActive;\r\n            const disButtons = this.codeViewDisabledButtons;\r\n            for (let i = 0, len = disButtons.length; i < len; i++) {\r\n                disButtons[i].disabled = wysiwygActive;\r\n            }\r\n\r\n            if (!wysiwygActive) {\r\n                const code_html = context.element.code.value.trim();\r\n                context.element.wysiwyg.innerHTML = code_html.length > 0 ? util.convertContentsForEditor(code_html) : '<p>' + util.zeroWidthSpace + '</p>';\r\n                context.element.wysiwyg.scrollTop = 0;\r\n                context.element.code.style.display = 'none';\r\n                context.element.wysiwyg.style.display = 'block';\r\n                if (context.option.height === 'auto') context.element.code.style.height = '0px';\r\n                this._variable.wysiwygActive = true;\r\n                this.focus();\r\n            }\r\n            else {\r\n                context.element.code.value = util.convertHTMLForCodeView(context.element.wysiwyg.innerHTML.trim());\r\n                context.element.wysiwyg.style.display = 'none';\r\n                context.element.code.style.display = 'block';\r\n                if (context.option.height === 'auto') context.element.code.style.height = context.element.code.scrollHeight > 0 ? (context.element.code.scrollHeight + 'px') : 'auto';\r\n                this._variable.wysiwygActive = false;\r\n                context.element.code.focus();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Changes to full screen or default screen\r\n         * @param {Element} element - full screen button\r\n         */\r\n        toggleFullScreen: function (element) {\r\n            if (!this._variable.isFullScreen) {\r\n                this._variable.isFullScreen = true;\r\n\r\n                context.element.topArea.style.position = 'fixed';\r\n                context.element.topArea.style.top = '0';\r\n                context.element.topArea.style.left = '0';\r\n                context.element.topArea.style.width = '100%';\r\n                context.element.topArea.style.height = '100%';\r\n                context.element.topArea.style.zIndex = '2147483647';\r\n\r\n                this._variable._bodyOverflow = _d.body.style.overflow;\r\n                _d.body.style.overflow = 'hidden';\r\n\r\n                this._variable._editorAreaOriginCssText = context.element.editorArea.style.cssText;\r\n                this._variable._wysiwygOriginCssText = context.element.wysiwyg.style.cssText;\r\n                this._variable._codeOriginCssText = context.element.code.style.cssText;\r\n\r\n                context.element.editorArea.style.cssText = context.element.toolbar.style.cssText = context.element.wysiwyg.style.cssText = context.element.code.style.cssText = '';\r\n                context.element.toolbar.style.width = context.element.wysiwyg.style.height = context.element.code.style.height = '100%';\r\n                context.element.toolbar.style.position = 'relative';\r\n\r\n                this._variable.innerHeight_fullScreen = (_w.innerHeight - context.element.toolbar.offsetHeight);\r\n                context.element.editorArea.style.height = this._variable.innerHeight_fullScreen + 'px';\r\n\r\n                util.removeClass(element.firstElementChild, 'icon-expansion');\r\n                util.addClass(element.firstElementChild, 'icon-reduction');\r\n            }\r\n            else {\r\n                this._variable.isFullScreen = false;\r\n\r\n                context.element.code.style.cssText = this._variable._codeOriginCssText;\r\n                context.element.wysiwyg.style.cssText = this._variable._wysiwygOriginCssText;\r\n                context.element.toolbar.style.cssText = '';\r\n                context.element.editorArea.style.cssText = this._variable._editorAreaOriginCssText;\r\n                context.element.topArea.style.cssText = this._variable._originCssText;\r\n                _d.body.style.overflow = this._variable._bodyOverflow;\r\n\r\n                if (context.option.stickyToolbar > -1) {\r\n                    util.removeClass(context.element.toolbar, 'sun-editor-sticky');\r\n                    event.onScroll_window();\r\n                }\r\n\r\n                util.removeClass(element.firstElementChild, 'icon-reduction');\r\n                util.addClass(element.firstElementChild, 'icon-expansion');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Open the preview window or open the print window\r\n         * @param {String} mode - 'preview' or 'print'\r\n         */\r\n        openWindowContents: function (mode) {\r\n            const isPrint = mode === 'print';\r\n            const windowObject = _w.open('', '_blank');\r\n            windowObject.mimeType = 'text/html';\r\n            windowObject.document.write('' +\r\n                '<!doctype html><html>' +\r\n                '<head>' +\r\n                '<meta charset=\"utf-8\" />' +\r\n                '<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">' +\r\n                '<title>' + (isPrint ? lang.toolbar.print : lang.toolbar.preview) + '</title>' +\r\n                '<link rel=\"stylesheet\" type=\"text/css\" href=\"' + util.getIncludePath(['suneditor-contents', 'suneditor'], 'css') + '\">' +\r\n                '</head>' +\r\n                '<body>' +\r\n                '<div class=\"sun-editor-editable\" style=\"width:' + context.element.wysiwyg.offsetWidth + 'px; margin:auto;\">' +\r\n                this.getContents() + '</div>' +\r\n                (isPrint ? '<script>_w.print();</script>' : '') + '</body>' +\r\n                '</html>');\r\n        },\r\n\r\n        /**\r\n         * @description Gets the current contents\r\n         * @returns {Object}\r\n         */\r\n        getContents: function () {\r\n            let contents = '';\r\n\r\n            if (context.element.wysiwyg.innerText.trim().length === 0) return contents;\r\n\r\n            if (editor._variable.wysiwygActive) {\r\n                contents = context.element.wysiwyg.innerHTML;\r\n            } else {\r\n                contents = util.convertContentsForEditor(context.element.code.value);\r\n            }\r\n\r\n            const renderHTML = util.createElement('DIV');\r\n            renderHTML.innerHTML = contents;\r\n\r\n            const figcaptions = util.getListChildren(renderHTML, function (current) {\r\n                return /FIGCAPTION/i.test(current.nodeName);\r\n            });\r\n\r\n            for (let i = 0, len = figcaptions.length; i < len; i++) {\r\n                figcaptions[i].outerHTML = figcaptions[i].outerHTML.replace(/(?!^<figcaption\\s+)(contenteditable=\"([a-z]+|\\s*)\")\\s*(?=[^>]*>)/i, '');\r\n            }\r\n\r\n            return renderHTML.innerHTML;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @description event function\r\n     */\r\n    const event = {\r\n        _shortcutKeyCode: {\r\n            66: ['bold', 'B'],\r\n            83: ['strikethrough', 'STRIKE'],\r\n            85: ['underline', 'U'],\r\n            73: ['italic', 'I'],\r\n            89: ['redo'],\r\n            90: ['undo'],\r\n            219: ['outdent'],\r\n            221: ['indent']\r\n        },\r\n\r\n        _directionKeyKeyCode: new RegExp('^(?:8|13|32|46|33|34|35|36|37|38|39|40|98|100|102|104)$'),\r\n\r\n        _changeButtonClassTagCheck: new RegExp('^(?:B|U|I|STRIKE|SUB|SUP)$'),\r\n\r\n        _findButtonEffectTag: function () {\r\n            const commandMap = editor.commandMap;\r\n            const classOnCheck = this._changeButtonClassTagCheck;\r\n            const commandMapNodes = [];\r\n            const currentNodes = [];\r\n\r\n            let findFormat = true, findFont = true, findSize = true, findA = true;\r\n            let findB = true, findI = true, findU = true, findS = true;\r\n            let cssText = '', nodeName = '';\r\n\r\n            for (let selectionParent = editor.getSelectionNode(); !util.isWysiwygDiv(selectionParent); selectionParent = selectionParent.parentNode) {\r\n                if (!selectionParent) break;\r\n                if (selectionParent.nodeType !== 1) continue;\r\n                nodeName = selectionParent.nodeName.toUpperCase();\r\n                currentNodes.push(nodeName);\r\n\r\n                /** Format */\r\n                if (findFormat && util.isFormatElement(selectionParent)) {\r\n                    commandMapNodes.push('FORMAT');\r\n                    util.changeTxt(commandMap.FORMAT, nodeName);\r\n                    findFormat = false;\r\n                    continue;\r\n                }\r\n\r\n                /** Font */\r\n                if (findFont && (selectionParent.style.fontFamily.length > 0 || (selectionParent.face && selectionParent.face.length > 0))) {\r\n                    commandMapNodes.push('FONT');\r\n                    const selectFont = (selectionParent.style.fontFamily || selectionParent.face || lang.toolbar.font).replace(/[\"']/g,'');\r\n                    util.changeTxt(commandMap.FONT, selectFont);\r\n                    findFont = false;\r\n                }\r\n\r\n                /** A */\r\n                if (findA && /^A$/.test(nodeName) && selectionParent.getAttribute('data-image-link') === null) {\r\n                    if (!context.link || editor.controllerArray[0] !== context.link.linkBtn) {\r\n                        editor.callPlugin('link', function () {\r\n                            editor.plugins.link.call_controller_linkButton.call(editor, selectionParent);\r\n                        });\r\n                    }\r\n                    findA = false;\r\n                } else if (findA && context.link && editor.controllerArray[0] === context.link.linkBtn) {\r\n                    editor.controllersOff();\r\n                }\r\n\r\n                /** SPAN */\r\n                if (findSize && /^SPAN$/.test(nodeName)) {\r\n                    /** font size */\r\n                    if (selectionParent.style.fontSize.length > 0) {\r\n                        commandMapNodes.push('SIZE');\r\n                        util.changeTxt(commandMap.SIZE, selectionParent.style.fontSize);\r\n                        findSize = false;\r\n                    }\r\n                }\r\n\r\n                /** command map */\r\n                cssText = selectionParent.style.cssText;\r\n                if (findB && /font\\-weight\\s*:\\s*(?:\\d+|bold|bolder)(?:;|\\s|)/.test(cssText)) {\r\n                    commandMapNodes.push('B');\r\n                    findB = false;\r\n                }\r\n                if (findI && /font\\-style\\s*:\\s*(?:italic|oblique)(?:;|\\s)/.test(cssText)) {\r\n                    commandMapNodes.push('I');\r\n                    findI = false;\r\n                }\r\n                if (findU && /text\\-decoration(?:\\-line)?\\s*:\\s*underline(?:;|\\s|)/.test(cssText)) {\r\n                    commandMapNodes.push('U');\r\n                    findU = false;\r\n                }\r\n                if (findS && /text\\-decoration(?:\\-line)?\\s*:\\s*line-through(?:;|\\s|)/.test(cssText)) {\r\n                    commandMapNodes.push('STRIKE');\r\n                    findS = false;\r\n                }\r\n\r\n                commandMapNodes.push((/^STRONG$/.test(nodeName) ? 'B' : /^EM$/.test(nodeName) ? 'I' : nodeName));\r\n            }\r\n\r\n            /** A Tag edit controller off */\r\n            if (findA) editor.controllersOff();\r\n\r\n            /** toggle class on */\r\n            for (let i = 0; i < commandMapNodes.length; i++) {\r\n                nodeName = commandMapNodes[i];\r\n                if (classOnCheck.test(nodeName)) {\r\n                    util.addClass(commandMap[nodeName], 'on');\r\n                }\r\n            }\r\n\r\n            /** remove class, display text */\r\n            for (let key in commandMap) {\r\n                if (commandMapNodes.indexOf(key) > -1) continue;\r\n                if (/^FONT/i.test(key)) {\r\n                    util.changeTxt(commandMap[key], lang.toolbar.font);\r\n                }\r\n                else if (/^SIZE$/i.test(key)) {\r\n                    util.changeTxt(commandMap[key], lang.toolbar.fontSize);\r\n                }\r\n                else {\r\n                    util.removeClass(commandMap[key], 'on');\r\n                }\r\n            }\r\n\r\n            /** save current nodes */\r\n            editor._variable.currentNodes = currentNodes.reverse();\r\n\r\n            /**  Displays the current node structure to resizingBar */\r\n            if (context.option.showPathLabel) context.element.navigation.textContent = editor._variable.currentNodes.join(' > ');\r\n        },\r\n\r\n        _cancelCaptionEdit: function () {\r\n            this.setAttribute('contenteditable', false);\r\n            this.removeEventListener('blur', event._cancelCaptionEdit);\r\n        },\r\n\r\n        onMouseDown_toolbar: function (e) {\r\n            editor._editorRange();\r\n            e.preventDefault();\r\n\r\n            let target = e.target;\r\n\r\n            if (util.getParentElement(target, '.sun-editor-submenu')) {\r\n                e.stopPropagation();\r\n            } else {\r\n                let command = target.getAttribute('data-command');\r\n                let className = target.className;\r\n    \r\n                while (!command && !/editor_tool/.test(className) && !/sun-editor-id-toolbar/.test(className)) {\r\n                    target = target.parentNode;\r\n                    command = target.getAttribute('data-command');\r\n                    className = target.className;\r\n                }\r\n    \r\n                if (command === editor._submenuName) {\r\n                    e.stopPropagation();\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        onClick_toolbar: function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            let target = e.target;\r\n            let display = target.getAttribute('data-display');\r\n            let command = target.getAttribute('data-command');\r\n            let className = target.className;\r\n\r\n            while (!command && !/editor_tool/.test(className) && !/sun-editor-id-toolbar/.test(className)) {\r\n                target = target.parentNode;\r\n                command = target.getAttribute('data-command');\r\n                display = target.getAttribute('data-display');\r\n                className = target.className;\r\n            }\r\n\r\n            if (!command && !display) return;\r\n            if (target.disabled) return;\r\n            \r\n            editor.focus();\r\n            \r\n            /** Dialog, Submenu */\r\n            if (display) {\r\n                if (/submenu/.test(display) && (target.nextElementSibling === null || target !== editor.submenuActiveButton)) {\r\n                    editor.callPlugin(command, function () {\r\n                        editor.submenuOn(target);\r\n                    });\r\n                    return;\r\n                }\r\n                else if (/dialog/.test(display)) {\r\n                    editor.callPlugin(command, function () {\r\n                        editor.plugins.dialog.open.call(editor, command, false);\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                editor.submenuOff();\r\n                return;\r\n            }\r\n\r\n            /** default command */\r\n            if (command) {\r\n                editor.commandHandler(target, command);\r\n            }\r\n        },\r\n\r\n        onMouseUp_wysiwyg: function () {\r\n            editor._editorRange();\r\n            \r\n            if (editor._isBalloon) {\r\n                const range = editor.getRange();\r\n                if (range.collapsed) event._hideToolbar();\r\n                else event._showToolbarBalloon(range);\r\n            }\r\n        },\r\n\r\n        onClick_wysiwyg: function (e) {\r\n            e.stopPropagation();\r\n            const targetElement = e.target;\r\n\r\n            if (/^IMG$/i.test(targetElement.nodeName)) {\r\n                e.preventDefault();\r\n                editor.callPlugin('image', function () {\r\n                    const size = editor.plugins.resizing.call_controller_resize.call(editor, targetElement, 'image');\r\n                    editor.plugins.image.onModifyMode.call(editor, targetElement, size);\r\n                    \r\n                    if (!util.getParentElement(targetElement, '.sun-editor-id-image-container')) {\r\n                        editor.plugins.image.openModify.call(editor, true);\r\n                        editor.plugins.image.update_image.call(editor);\r\n                        editor.controllersOff();\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            if (/sun-editor-id-iframe-inner-resizing-cover/i.test(targetElement.className)) {\r\n                e.preventDefault();\r\n                editor.callPlugin('video', function () {\r\n                    const iframe = util.getChildElement(targetElement.parentNode, 'iframe');\r\n                    const size = editor.plugins.resizing.call_controller_resize.call(editor, iframe, 'video');\r\n                    editor.plugins.video.onModifyMode.call(editor, iframe, size);\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            event._findButtonEffectTag();\r\n\r\n            const figcaption = util.getParentElement(targetElement, 'FIGCAPTION');\r\n            if (figcaption && figcaption.getAttribute('contenteditable') !== 'ture') {\r\n                e.preventDefault();\r\n                figcaption.setAttribute('contenteditable', true);\r\n                figcaption.focus();\r\n\r\n                if (editor._isInline && !editor._inlineToolbarAttr.isShow) {\r\n                    event._showToolbarInline();\r\n\r\n                    const hideToolbar = function () {\r\n                        event._hideToolbar();\r\n                        _d.removeEventListener('click', hideToolbar);\r\n                    };\r\n\r\n                    _d.addEventListener('click', hideToolbar);\r\n                }\r\n            } else {\r\n                const td = util.getParentElement(targetElement, util.isCell);\r\n                if (td) {\r\n                    if (editor.controllerArray.length === 0) {\r\n                        editor.callPlugin('table', editor.plugins.table.call_controller_tableEdit.bind(editor, td));\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (userFunction.onClick) userFunction.onClick(e);\r\n        },\r\n\r\n        _showToolbarBalloon: function (rangeObj) {\r\n            const range = rangeObj || editor.getRange();\r\n            const padding = 20;\r\n            const toolbar = context.element.toolbar;\r\n            const selection = _w.getSelection();\r\n\r\n            let isDirTop;\r\n            if (selection.focusNode === selection.anchorNode) {\r\n                isDirTop = selection.focusOffset < selection.anchorOffset;\r\n            } else {\r\n                const childNodes = util.getListChildNodes(range.commonAncestorContainer);\r\n                isDirTop = util.getArrayIndex(childNodes, selection.focusNode) < util.getArrayIndex(childNodes, selection.anchorNode);\r\n            }\r\n\r\n            let rects = range.getClientRects();\r\n            rects = rects[isDirTop ? 0 : rects.length - 1];\r\n            \r\n            toolbar.style.display = 'block';\r\n\r\n            const toolbarWidth = toolbar.offsetWidth;\r\n            const toolbarHeight = toolbar.offsetHeight;\r\n\r\n            let l = (isDirTop ? rects.left : rects.right) - context.element.topArea.offsetLeft + (_w.scrollX || _d.documentElement.scrollLeft) - toolbarWidth / 2;\r\n            let t = (isDirTop ? rects.top - toolbarHeight - 11 : rects.bottom + 11) - context.element.topArea.offsetTop + (_w.scrollY || _d.documentElement.scrollTop);\r\n\r\n            const overRight = l + toolbarWidth - context.element.topArea.offsetWidth;\r\n            \r\n            toolbar.style.left = (l < 0 ? padding : overRight < 0 ? l : l - overRight - padding) + 'px';\r\n            toolbar.style.top = (t) + 'px';\r\n\r\n            if (isDirTop) {\r\n                util.removeClass(context.element._arrow, 'arrow-up');\r\n                util.addClass(context.element._arrow, 'arrow-down');\r\n                context.element._arrow.style.top = (toolbarHeight) + 'px';\r\n            } else {\r\n                util.removeClass(context.element._arrow, 'arrow-down');\r\n                util.addClass(context.element._arrow, 'arrow-up');\r\n                context.element._arrow.style.top = '-11px';\r\n            }\r\n\r\n            const arrow_width = context.element._arrow.offsetWidth;\r\n            const arrow_left = (toolbarWidth / 2 + (l < 0 ? l - arrow_width : overRight < 0 ? 0 : overRight + arrow_width));\r\n            const arrow_point_width = arrow_width / 2;\r\n            context.element._arrow.style.left = (arrow_left < arrow_point_width ? arrow_point_width : arrow_left + arrow_point_width >= toolbarWidth ? arrow_left - arrow_point_width : arrow_left) + 'px';\r\n        },\r\n\r\n        _showToolbarInline: function () {\r\n            const toolbar = context.element.toolbar;\r\n            toolbar.style.display = 'block';\r\n            editor._inlineToolbarAttr.width = toolbar.style.width = context.option.toolbarWidth;\r\n            editor._inlineToolbarAttr.top = toolbar.style.top = (-1 - toolbar.offsetHeight) + 'px';\r\n            event.onScroll_window();\r\n            editor._inlineToolbarAttr.isShow = true;\r\n        },\r\n\r\n        _hideToolbar: function () {\r\n            context.element.toolbar.style.display = 'none';\r\n            editor._inlineToolbarAttr.isShow = false;\r\n        },\r\n\r\n        onKeyDown_wysiwyg: function (e) {\r\n            const keyCode = e.keyCode;\r\n            const shift = e.shiftKey;\r\n            const ctrl = e.ctrlKey || e.metaKey;\r\n            const alt = e.altKey;\r\n\r\n            if (editor._isBalloon) {\r\n                event._hideToolbar();\r\n            }\r\n\r\n            function shortcutCommand(keyCode) {\r\n                const key = event._shortcutKeyCode[keyCode];\r\n                if (!key) return false;\r\n\r\n                editor.commandHandler(util.getFormatElement(editor.getSelectionNode()), key[0]);\r\n                util.toggleClass(editor.commandMap[key[1]], 'on');\r\n\r\n                return true;\r\n            }\r\n\r\n            /** Shortcuts */\r\n            if (ctrl && !/^(?:16|17|18)$/.test(keyCode)) {\r\n                if (!(!shift && keyCode === 83) && shortcutCommand(keyCode)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            /** default key action */\r\n            const selectionNode = editor.getSelectionNode();\r\n            switch (keyCode) {\r\n                case 8: /**backspace key*/\r\n                    if (util.isFormatElement(selectionNode) && util.isWysiwygDiv(selectionNode.parentNode) && selectionNode.previousSibling === null) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        selectionNode.innerHTML = util.zeroWidthSpace;\r\n                        return false;\r\n                    }\r\n                    \r\n                    break;\r\n                case 9:\r\n                    /**tab key*/\r\n                    e.preventDefault();\r\n                    if (ctrl || alt) break;\r\n\r\n                    editor.controllersOff();\r\n\r\n                    let currentNode = selectionNode || editor.getSelectionNode();\r\n                    while (!util.isCell(currentNode) && !util.isWysiwygDiv(currentNode)) {\r\n                        currentNode = currentNode.parentNode;\r\n                    }\r\n\r\n                    if (currentNode && util.isCell(currentNode)) {\r\n                        const table = util.getParentElement(currentNode, 'table');\r\n                        const cells = util.getListChildren(table, util.isCell);\r\n                        let idx = shift ? util.prevIdx(cells, currentNode) : util.nextIdx(cells, currentNode);\r\n\r\n                        if (idx === cells.length && !shift) idx = 0;\r\n                        if (idx === -1 && shift) idx = cells.length - 1;\r\n\r\n                        const moveCell = cells[idx];\r\n                        if (!moveCell) return false;\r\n\r\n                        editor.setRange(moveCell, 0, moveCell, 0);\r\n\r\n                        break;\r\n                    }\r\n\r\n                    /** format Tag */\r\n                    const lines = editor.getSelectedFormatElements();\r\n\r\n                    if (!shift) {\r\n                        const tabText = util.createTextNode(new Array(editor._variable.tabSize + 1).join('\\u00A0'));\r\n                        if (lines.length === 1) {\r\n                            editor.insertNode(tabText);\r\n                            editor.setRange(tabText, editor._variable.tabSize, tabText, editor._variable.tabSize);\r\n                        } else {\r\n                            for (let i = 0, len = lines.length; i < len; i++) {\r\n                                lines[i].insertBefore(tabText.cloneNode(false), lines[i].firstChild);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        for (let i = 0, len = lines.length, child; i < len; i++) {\r\n                            child = lines[i].firstChild;\r\n                            if (/^\\s{1,4}$/.test(child.textContent)) {\r\n                                util.removeItem(child);\r\n                            } else if (/^\\s{1,4}/.test(child.textContent)) {\r\n                                child.textContent = child.textContent.replace(/^\\s{1,4}/, '');\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n            }\r\n\r\n            if (userFunction.onKeyDown) userFunction.onKeyDown(e);\r\n        },\r\n\r\n        onKeyUp_wysiwyg: function (e) {\r\n            editor._editorRange();\r\n            editor.controllersOff();\r\n            const selectionNode = editor.getSelectionNode();\r\n\r\n            if (editor._isBalloon && !editor.getRange().collapsed) {\r\n                event._showToolbarBalloon();\r\n                return;\r\n            }\r\n\r\n            /** when format tag deleted */\r\n            if (e.keyCode === 8 && util.isWysiwygDiv(selectionNode) && context.element.wysiwyg.textContent.length === 0) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n\r\n                const oFormatTag = util.createElement(util.isFormatElement(editor._variable.currentNodes[0]) ? editor._variable.currentNodes[0] : 'P');\r\n                oFormatTag.innerHTML = util.zeroWidthSpace;\r\n\r\n                selectionNode.appendChild(oFormatTag);\r\n                editor.setRange(oFormatTag, 0, oFormatTag, 0);\r\n                return;\r\n            }\r\n\r\n            if ((util.isWysiwygDiv(selectionNode.parentElement) || util.isRangeFormatElement(selectionNode.parentElement)) && selectionNode.nodeType === 3) {\r\n                editor.execCommand('formatBlock', false, util.isWysiwygDiv(selectionNode.parentElement) ? 'P' : 'DIV');\r\n                event._findButtonEffectTag();\r\n                return;\r\n            }\r\n\r\n            if (event._directionKeyKeyCode.test(e.keyCode)) {\r\n                event._findButtonEffectTag();\r\n            }\r\n\r\n            if (userFunction.onKeyUp) userFunction.onKeyUp(e);\r\n        },\r\n\r\n        onScroll_wysiwyg: function (e) {\r\n            editor.controllersOff();\r\n            if (userFunction.onScroll) userFunction.onScroll(e);\r\n        },\r\n\r\n        onDrop_wysiwyg: function (e) {\r\n            const files = e.dataTransfer.files;\r\n\r\n            if (files.length > 0) {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n                \r\n                editor.focus();\r\n    \r\n                editor.callPlugin('image', function () {\r\n                    context.image.imgInputFile.files = files;\r\n                    editor.plugins.image.onRender_imgInput.call(editor);\r\n                    context.image.imgInputFile.files = null;\r\n                });\r\n            }\r\n\r\n            if (userFunction.onDrop) userFunction.onDrop(e);\r\n        },\r\n\r\n        onMouseDown_resizingBar: function (e) {\r\n            e.stopPropagation();\r\n\r\n            editor._variable.resizeClientY = e.clientY;\r\n            context.element.resizeBackground.style.display = 'block';\r\n\r\n            function closureFunc() {\r\n                context.element.resizeBackground.style.display = 'none';\r\n                _d.removeEventListener('mousemove', event._resize_editor);\r\n                _d.removeEventListener('mouseup', closureFunc);\r\n            }\r\n\r\n            _d.addEventListener('mousemove', event._resize_editor);\r\n            _d.addEventListener('mouseup', closureFunc);\r\n        },\r\n\r\n        _resize_editor: function (e) {\r\n            const resizeInterval = context.element.editorArea.offsetHeight + (e.clientY - editor._variable.resizeClientY);\r\n            context.element.wysiwyg.style.height = context.element.code.style.height = (resizeInterval < editor._variable.minResizingSize ? editor._variable.minResizingSize : resizeInterval) + 'px';\r\n            editor._variable.resizeClientY = e.clientY;\r\n        },\r\n\r\n        onResize_window: function () {\r\n            if (context.element.toolbar.offsetWidth === 0) return;\r\n\r\n            if (editor._variable.isFullScreen) {\r\n                editor._variable.innerHeight_fullScreen += (_w.innerHeight - context.element.toolbar.offsetHeight) - editor._variable.innerHeight_fullScreen;\r\n                context.element.editorArea.style.height = editor._variable.innerHeight_fullScreen + 'px';\r\n            }\r\n            else if (editor._variable._sticky) {\r\n                context.element.toolbar.style.width = (context.element.topArea.offsetWidth - 2) + 'px';\r\n                event.onScroll_window();\r\n            }\r\n\r\n            editor.controllersOff();\r\n        },\r\n\r\n        onScroll_window: function () {\r\n            if (editor._variable.isFullScreen || context.element.toolbar.offsetWidth === 0) return;\r\n\r\n            const element = context.element;\r\n            const editorHeight = element.editorArea.offsetHeight;\r\n            const editorTop = element.topArea.offsetTop - (editor._isInline ? element.toolbar.offsetHeight : 0);\r\n            const y = (this.scrollY || _d.documentElement.scrollTop) + context.option.stickyToolbar;\r\n            \r\n            if (y < editorTop) {\r\n                event._offStickyToolbar(element);\r\n            }\r\n            else if (y + editor._variable.minResizingSize >= editorHeight + editorTop) {\r\n                if (!editor._variable._sticky) event._onStickyToolbar(element);\r\n                element.toolbar.style.top = (editorHeight + editorTop + context.option.stickyToolbar -y - editor._variable.minResizingSize) + 'px';\r\n            }\r\n            else if (y >= editorTop) {\r\n                event._onStickyToolbar(element);\r\n            }\r\n        },\r\n\r\n        _onStickyToolbar: function (element) {\r\n            if (!editor._isInline) {\r\n                element._stickyDummy.style.height = element.toolbar.offsetHeight + 'px';\r\n                element._stickyDummy.style.display = 'block';\r\n            }\r\n\r\n            element.toolbar.style.top = context.option.stickyToolbar + 'px';\r\n            element.toolbar.style.width = editor._isInline ? editor._inlineToolbarAttr.width : element.toolbar.offsetWidth + 'px';\r\n            util.addClass(element.toolbar, 'sun-editor-sticky');\r\n            editor._variable._sticky = true;\r\n        },\r\n\r\n        _offStickyToolbar: function (element) {\r\n            element._stickyDummy.style.display = 'none';\r\n            element.toolbar.style.top = editor._isInline ? editor._inlineToolbarAttr.top : '';\r\n            element.toolbar.style.width = editor._isInline ? editor._inlineToolbarAttr.width : '';\r\n            element.editorArea.style.marginTop = '';\r\n            util.removeClass(element.toolbar, 'sun-editor-sticky');\r\n            editor._variable._sticky = false;\r\n        },\r\n\r\n        _codeViewAutoScroll: function () {\r\n            context.element.code.style.height = context.element.code.scrollHeight + 'px';\r\n        },\r\n\r\n        onPaste_wysiwyg: function (e) {\r\n            if (!e.clipboardData.getData) return true;\r\n\r\n            const cleanData = util.cleanHTML(e.clipboardData.getData('text/html'));\r\n            \r\n            if (cleanData) {\r\n                editor.execCommand('insertHTML', false, cleanData);\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    };\r\n\r\n    /** add event listeners */\r\n    /** toolbar event */\r\n    context.element.toolbar.addEventListener('mousedown', event.onMouseDown_toolbar, false);\r\n    context.element.toolbar.addEventListener('click', event.onClick_toolbar, false);\r\n    /** editor area */\r\n    context.element.relative.addEventListener('click', editor.focus.bind(editor), false);\r\n    context.element.wysiwyg.addEventListener('mouseup', event.onMouseUp_wysiwyg, false);\r\n    context.element.wysiwyg.addEventListener('click', event.onClick_wysiwyg, false);\r\n    context.element.wysiwyg.addEventListener('scroll', event.onScroll_wysiwyg, false);\r\n    context.element.wysiwyg.addEventListener('keydown', event.onKeyDown_wysiwyg, false);\r\n    context.element.wysiwyg.addEventListener('keyup', event.onKeyUp_wysiwyg, false);\r\n    context.element.wysiwyg.addEventListener('drop', event.onDrop_wysiwyg, false);\r\n    context.element.wysiwyg.addEventListener('paste', event.onPaste_wysiwyg, false);\r\n    \r\n    /** code view area auto line */\r\n    if (context.option.height === 'auto') context.element.code.addEventListener('keyup', event._codeViewAutoScroll, false);\r\n\r\n    /** resizingBar */\r\n    if (context.element.resizingBar) {\r\n        if (/\\d+/.test(context.option.height)) {\r\n            context.element.resizingBar.addEventListener('mousedown', event.onMouseDown_resizingBar, false);\r\n        } else {\r\n            util.addClass(context.element.resizingBar, 'none-resize');\r\n        }\r\n    }\r\n\r\n    /** inline editor */\r\n    if (editor._isInline) {\r\n        context.element.wysiwyg.addEventListener('focus', event._showToolbarInline, false);\r\n    }\r\n\r\n    if (editor._isInline || editor._isBalloon) {\r\n        context.element.wysiwyg.addEventListener('blur', event._hideToolbar, false);\r\n    }\r\n    \r\n    /** window event */\r\n    _w.addEventListener('resize', event.onResize_window, false);\r\n    if (context.option.stickyToolbar > -1) _w.addEventListener('scroll', event.onScroll_window, false);\r\n\r\n    /** add plugin to plugins object */\r\n    if (plugins) {\r\n        Object.keys(plugins).map(function(key) {\r\n            let plugin = plugins[key];\r\n            editor.plugins[plugin.name] = util.copyObj(plugin);\r\n        });\r\n    }\r\n\r\n    /** User function */\r\n    const userFunction = {\r\n        /**\r\n         * @description Event functions\r\n         * @param {Object} event - Event Object\r\n         */\r\n        onScroll: null,\r\n        onClick: null,\r\n        onKeyDown: null,\r\n        onKeyUp: null,\r\n        onDrop: null,\r\n\r\n        /**\r\n         * @description Called when the image is uploaded or the uploaded image is deleted\r\n         * @param {Element} targetImgElement - Current img element\r\n         * @param {Number} index - Uploaded index\r\n         * @param {Boolean} isDelete - Whether or not it was called after the delete operation\r\n         */\r\n        onImageUpload: null,\r\n\r\n        /**\r\n         * @description Open a notice area\r\n         * @param {String} message - Notice message\r\n         */\r\n        noticeOpen: function (message) {\r\n            editor.addModule([notice]);\r\n            notice.open.call(editor, message);\r\n        },\r\n\r\n        /**\r\n         * @description Close a notice area\r\n         */\r\n        noticeClose: function () {\r\n            editor.addModule([notice]);\r\n            notice.close.call(editor);\r\n        },\r\n\r\n        /**\r\n         * @description Copying the contents of the editor to the original textarea\r\n         */\r\n        save: function () {\r\n            context.element.originElement.value = editor.getContents();\r\n        },\r\n\r\n        /**\r\n         * @description Gets the suneditor's context object. Contains settings, plugins, and cached element objects\r\n         * @returns {Object}\r\n         */\r\n        getContext: function () {\r\n            return context;\r\n        },\r\n\r\n        /**\r\n         * @description Gets the contents of the suneditor\r\n         * @returns {String}\r\n         */\r\n        getContents: function () {\r\n            return editor.getContents();\r\n        },\r\n\r\n        /**\r\n         * @description Gets uploaded images informations\r\n         * @returns {Array}\r\n         */\r\n        getImagesInfo: function () {\r\n            return editor._variable._imagesInfo;\r\n        },\r\n\r\n        /**\r\n         * @description Inserts an HTML element or HTML string or plain string at the current cursor position\r\n         * @param {Element|String} html - HTML Element or HTML string or plain string\r\n         */\r\n        insertHTML: function (html) {\r\n            if (!html.nodeType || html.nodeType !== 1) {\r\n                const template = util.createElement('template');\r\n                template.innerHTML = html;\r\n                html = template.firstChild || template.content.firstChild;\r\n            }\r\n\r\n            editor.insertNode(html);\r\n            editor.focus();\r\n        },\r\n\r\n        /**\r\n         * @description Change the contents of the suneditor\r\n         * @param {String} contents - Contents to Input\r\n         */\r\n        setContents: function (contents) {\r\n            if (editor._variable.wysiwygActive) {\r\n                context.element.wysiwyg.innerHTML = util.convertContentsForEditor(contents);\r\n            } else {\r\n                context.element.code.value = contents;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Add contents to the suneditor\r\n         * @param {String} contents - Contents to Input\r\n         */\r\n        appendContents: function (contents) {\r\n            if (editor._variable.wysiwygActive) {\r\n                context.element.wysiwyg.innerHTML += util.convertContentsForEditor(contents);\r\n            } else {\r\n                context.element.code.value += contents;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Disable the suneditor\r\n         */\r\n        disabled: function () {\r\n            context.tool.cover.style.display = 'block';\r\n            context.element.wysiwyg.setAttribute('contenteditable', false);\r\n            context.element.code.setAttribute('disabled', 'disabled');\r\n        },\r\n\r\n        /**\r\n         * @description Enabled the suneditor\r\n         */\r\n        enabled: function () {\r\n            context.tool.cover.style.display = 'none';\r\n            context.element.wysiwyg.setAttribute('contenteditable', true);\r\n            context.element.code.removeAttribute('disabled');\r\n        },\r\n\r\n        /**\r\n         * @description Show the suneditor\r\n         */\r\n        show: function () {\r\n            const topAreaStyle = context.element.topArea.style;\r\n            if (topAreaStyle.display === 'none') topAreaStyle.display = context.option.display;\r\n        },\r\n\r\n        /**\r\n         * @description Hide the suneditor\r\n         */\r\n        hide: function () {\r\n            context.element.topArea.style.display = 'none';\r\n        },\r\n\r\n        /**\r\n         * @description Destroy the suneditor\r\n         */\r\n        destroy: function () {\r\n            /** remove window event listeners */\r\n            _w.removeEventListener('resize', event.onResize_window);\r\n            _w.removeEventListener('scroll', event.onScroll_window);\r\n            \r\n            /** remove element */\r\n            util.removeItem(context.element.topArea);\r\n\r\n            this.onScroll = null;\r\n            this.onClick = null;\r\n            this.onKeyDown = null;\r\n            this.onKeyUp = null;\r\n            this.onDrop = null;\r\n            this.save = null;\r\n            this.onImageUpload = null;\r\n            this.noticeOpen = null;\r\n            this.noticeClose = null;\r\n            this.getContext = null;\r\n            this.getContents = null;\r\n            this.getImagesInfo = null;\r\n            this.insertHTML = null;\r\n            this.setContents = null;\r\n            this.appendContents = null;\r\n            this.disabled = null;\r\n            this.enabled = null;\r\n            this.show = null;\r\n            this.hide = null;\r\n            this.destroy = null;\r\n\r\n            context = null;\r\n            plugins = null;\r\n            lang = null;\r\n        }\r\n    };\r\n\r\n    return userFunction;\r\n};\r\n\r\nexport default core;","/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\r\n'use strict';\r\n\r\nimport util from './util';\r\n\r\n/**\r\n * @description document create - call _createToolBar()\r\n * @param {element} element - textarea\r\n * @param {JSON} options - user options\r\n * @param {JSON} lang - user language\r\n * @param {JSON} _plugins - plugins object\r\n * @returns {JSON}\r\n * @private\r\n */\r\nconst _Constructor = {\r\n    init: function (element, options, lang, _plugins) {\r\n        if (typeof options !== 'object') options = {};\r\n    \r\n        /** user options */\r\n        options.lang = lang;\r\n        // toolbar\r\n        options.mode = options.mode || 'classic'; // classic, inline, balloon\r\n        options.toolbarWidth = options.toolbarWidth ? (/^\\d+$/.test(options.toolbarWidth) ? options.toolbarWidth + 'px' : options.toolbarWidth) : 'max-content';\r\n        options.stickyToolbar = /balloon/i.test(options.mode) ? -1 : options.stickyToolbar === undefined ? 0 : (/\\d+/.test(options.stickyToolbar) ? options.stickyToolbar.toString().match(/\\d+/)[0] * 1 : -1);\r\n        // bottom resizing bar\r\n        options.resizingBar = /inline|balloon/i.test(options.mode) ? false : options.resizingBar === undefined ? true : options.resizingBar;\r\n        options.showPathLabel = typeof options.showPathLabel === 'boolean' ? options.showPathLabel : true;\r\n        // popup, editor display\r\n        options.popupDisplay = options.popupDisplay || 'full';\r\n        options.display = options.display || (element.style.display === 'none' || !element.style.display ? 'block' : element.style.display);\r\n        // size\r\n        options.width = options.width ? (/^\\d+$/.test(options.width) ? options.width + 'px' : options.width) : (element.clientWidth ? element.clientWidth + 'px' : '100%');\r\n        options.height = options.height ? (/^\\d+$/.test(options.height) ? options.height + 'px' : options.height) : (element.clientHeight ? element.clientHeight + 'px' : 'auto');\r\n        options.minHeight = (/^\\d+$/.test(options.minHeight) ? options.height + 'px' : options.minHeight) || '';\r\n        options.maxHeight = (/^\\d+$/.test(options.maxHeight) ? options.maxHeight + 'px' : options.maxHeight) || '';\r\n        // font, size, color list\r\n        options.font = options.font || null;\r\n        options.fontSize = options.fontSize || null;\r\n        options.colorList = options.colorList || null;\r\n        // images\r\n        options.imageResizing = options.imageResizing === undefined ? true : options.imageResizing;\r\n        options.imageWidth = options.imageWidth || 'auto';\r\n        options.imageFileInput = options.imageFileInput === undefined ? true : options.imageFileInput;\r\n        options.imageUrlInput = (options.imageUrlInput === undefined || !options.imageFileInput) ? true : options.imageUrlInput;\r\n        options.imageUploadUrl = options.imageUploadUrl || null;\r\n        // video\r\n        options.videoResizing = options.videoResizing === undefined ? true : options.videoResizing;\r\n        options.videoWidth = options.videoWidth || 560;\r\n        options.videoHeight = options.videoHeight || 315;\r\n        // buttons\r\n        options.buttonList = options.buttonList || [\r\n            ['undo', 'redo'],\r\n            ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n            ['removeFormat'],\r\n            ['indent', 'outdent'],\r\n            ['fullScreen', 'showBlocks', 'codeView'],\r\n            ['preview', 'print']\r\n        ];\r\n    \r\n        const doc = document;\r\n    \r\n        /** suneditor div */\r\n        const top_div = doc.createElement('DIV');\r\n        top_div.className = 'sun-editor';\r\n        if (element.id) top_div.id = 'suneditor_' + element.id;\r\n        top_div.style.width = options.width;\r\n        top_div.style.display = options.display;\r\n    \r\n        /** relative div */\r\n        const relative = doc.createElement('DIV');\r\n        relative.className = 'sun-editor-container';\r\n    \r\n        /** toolbar */\r\n        const tool_bar = this._createToolBar(doc, options.buttonList, _plugins, lang);\r\n\r\n        let arrow = null;\r\n        if (/inline|balloon/i.test(options.mode)) {\r\n            tool_bar.element.className += ' sun-inline-toolbar';\r\n            tool_bar.element.style.width = options.toolbarWidth;\r\n            if (/balloon/i.test(options.mode)) {\r\n                arrow = doc.createElement('DIV');\r\n                arrow.className = 'arrow';\r\n                tool_bar.element.appendChild(arrow);\r\n            }\r\n        }\r\n\r\n        /** sticky toolbar dummy */\r\n        const sticky_dummy = doc.createElement('DIV');\r\n        sticky_dummy.className = 'sun-editor-sticky-dummy';\r\n    \r\n        /** inner editor div */\r\n        const editor_div = doc.createElement('DIV');\r\n        editor_div.className = 'sun-editor-id-editorArea';\r\n    \r\n        /** wysiwyg div */\r\n        const wysiwyg_div = doc.createElement('DIV');\r\n        wysiwyg_div.setAttribute('contenteditable', true);\r\n        wysiwyg_div.setAttribute('scrolling', 'auto');\r\n        wysiwyg_div.className = 'input_editor sun-editor-id-wysiwyg sun-editor-editable';\r\n        wysiwyg_div.style.display = 'block';\r\n        wysiwyg_div.innerHTML = util.convertContentsForEditor(element.value);\r\n        wysiwyg_div.style.height = options.height;\r\n        wysiwyg_div.style.minHeight = options.minHeight;\r\n        wysiwyg_div.style.maxHeight = options.maxHeight;\r\n    \r\n        /** textarea for code view */\r\n        const textarea = doc.createElement('TEXTAREA');\r\n        textarea.className = 'input_editor sun-editor-id-code';\r\n        textarea.style.display = 'none';\r\n        textarea.style.height = options.height;\r\n        textarea.style.minHeight = options.minHeight;\r\n        textarea.style.maxHeight = options.maxHeight;\r\n    \r\n        /** resize bar */\r\n        let resizing_bar = null;\r\n        if (options.resizingBar) {\r\n            resizing_bar = doc.createElement('DIV');\r\n            resizing_bar.className = 'sun-editor-id-resizingBar sun-editor-common';\r\n        }\r\n    \r\n        /** navigation */\r\n        const navigation = doc.createElement('SPAN');\r\n        navigation.className = 'sun-editor-id-navigation sun-editor-common';\r\n    \r\n        /** loading box */\r\n        const loading_box = doc.createElement('DIV');\r\n        loading_box.className = 'sun-editor-id-loading sun-editor-common';\r\n        loading_box.innerHTML = '<div class=\"loading-effect\"></div>';\r\n    \r\n        /** resize operation background */\r\n        const resize_back = doc.createElement('DIV');\r\n        resize_back.className = 'sun-editor-id-resize-background';\r\n    \r\n        /** append html */\r\n        editor_div.appendChild(wysiwyg_div);\r\n        editor_div.appendChild(textarea);\r\n        relative.appendChild(tool_bar.element);\r\n        relative.appendChild(sticky_dummy);\r\n        relative.appendChild(editor_div);\r\n        relative.appendChild(resize_back);\r\n        relative.appendChild(loading_box);\r\n\r\n        if (resizing_bar) {\r\n            resizing_bar.appendChild(navigation);\r\n            relative.appendChild(resizing_bar);\r\n        }\r\n        \r\n        top_div.appendChild(relative);\r\n    \r\n        return {\r\n            constructed: {\r\n                _top: top_div,\r\n                _relative: relative,\r\n                _toolBar: tool_bar.element,\r\n                _editorArea: editor_div,\r\n                _wysiwygArea: wysiwyg_div,\r\n                _codeArea: textarea,\r\n                _resizingBar: resizing_bar,\r\n                _navigation: navigation,\r\n                _loading: loading_box,\r\n                _resizeBack: resize_back,\r\n                _stickyDummy: sticky_dummy,\r\n                _arrow: arrow\r\n            },\r\n            options: options,\r\n            plugins: tool_bar.plugins\r\n        };\r\n    },\r\n\r\n    /**\r\n     * @description Suneditor's Default button list\r\n     * @private\r\n     */\r\n    _defaultButtons: function (lang) {\r\n        return {\r\n            /** command */\r\n            bold: ['sun-editor-id-bold', lang.toolbar.bold + '(Ctrl+B)', 'bold', '',\r\n                '<div class=\"icon-bold\"></div>'\r\n            ],\r\n\r\n            underline: ['sun-editor-id-underline', lang.toolbar.underline + '(Ctrl+U)', 'underline', '',\r\n                '<div class=\"icon-underline\"></div>'\r\n            ],\r\n\r\n            italic: ['sun-editor-id-italic', lang.toolbar.italic + '(Ctrl+I)', 'italic', '',\r\n                '<div class=\"icon-italic\"></div>'\r\n            ],\r\n\r\n            strike: ['sun-editor-id-strike', lang.toolbar.strike + '(Ctrl+SHIFT+S)', 'strikethrough', '',\r\n                '<div class=\"icon-strokethrough\"></div>'\r\n            ],\r\n\r\n            subscript: ['sun-editor-id-subscript', lang.toolbar.subscript, 'subscript', '',\r\n                '<div class=\"icon-subscript\"></div>'\r\n            ],\r\n\r\n            superscript: ['sun-editor-id-superscript', lang.toolbar.superscript, 'superscript', '',\r\n                '<div class=\"icon-superscript\"></div>'\r\n            ],\r\n\r\n            removeFormat: ['', lang.toolbar.removeFormat, 'removeFormat', '',\r\n                '<div class=\"icon-erase\"></div>'\r\n            ],\r\n\r\n            indent: ['', lang.toolbar.indent + '(Ctrl + ])', 'indent', '',\r\n                '<div class=\"icon-indent-right\"></div>'\r\n            ],\r\n\r\n            outdent: ['', lang.toolbar.outdent + '(Ctrl + [)', 'outdent', '',\r\n                '<div class=\"icon-indent-left\"></div>'\r\n            ],\r\n\r\n            fullScreen: ['code-view-enabled', lang.toolbar.fullScreen, 'fullScreen', '',\r\n                '<div class=\"icon-expansion\"></div>'\r\n            ],\r\n\r\n            showBlocks: ['', lang.toolbar.showBlocks, 'showBlocks', '',\r\n                '<div class=\"icon-showBlocks\"></div>'\r\n            ],\r\n\r\n            codeView: ['code-view-enabled', lang.toolbar.codeView, 'codeView', '',\r\n                '<div class=\"icon-code-view\"></div>'\r\n            ],\r\n\r\n            undo: ['code-view-enabled', lang.toolbar.undo + ' (Ctrl+Z)', 'undo', '',\r\n                '<div class=\"icon-undo\"></div>'\r\n            ],\r\n\r\n            redo: ['code-view-enabled', lang.toolbar.redo + ' (Ctrl+Y)', 'redo', '',\r\n                '<div class=\"icon-redo\"></div>'\r\n            ],\r\n\r\n            preview: ['', lang.toolbar.preview, 'preview', '',\r\n                '<div class=\"icon-preview\"></div>'\r\n            ],\r\n\r\n            print: ['', lang.toolbar.print, 'print', '',\r\n                '<div class=\"icon-print\"></div>'\r\n            ],\r\n\r\n            /** plugins - submenu */\r\n            font: ['btn_font', lang.toolbar.font, 'font', 'submenu',\r\n                '<span class=\"txt sun-editor-font-family\">' + lang.toolbar.font + '</span><span class=\"icon-arrow-down\"></span>'\r\n            ],\r\n            formatBlock: ['btn_format', lang.toolbar.formats, 'formatBlock', 'submenu',\r\n                '<span class=\"txt sun-editor-font-format\">' + lang.toolbar.formats + '</span><span class=\"icon-arrow-down\"></span>'\r\n            ],\r\n\r\n            fontSize: ['btn_size', lang.toolbar.fontSize, 'fontSize', 'submenu',\r\n                '<span class=\"txt sun-editor-font-size\">' + lang.toolbar.fontSize + '</span><span class=\"icon-arrow-down\"></span>'\r\n            ],\r\n\r\n            fontColor: ['', lang.toolbar.fontColor, 'fontColor', 'submenu',\r\n                '<div class=\"icon-fontColor\"></div>'\r\n            ],\r\n\r\n            hiliteColor: ['', lang.toolbar.hiliteColor, 'hiliteColor', 'submenu',\r\n                '<div class=\"icon-hiliteColor\"></div>'\r\n            ],\r\n\r\n            align: ['btn_align', lang.toolbar.align, 'align', 'submenu',\r\n                '<div class=\"icon-align-left\"></div>'\r\n            ],\r\n\r\n            list: ['', lang.toolbar.list, 'list', 'submenu',\r\n                '<div class=\"icon-list-number\"></div>'\r\n            ],\r\n\r\n            horizontalRule: ['btn_line', lang.toolbar.horizontalRule, 'horizontalRule', 'submenu',\r\n                '<div class=\"icon-hr\"></div>'\r\n            ],\r\n\r\n            table: ['', lang.toolbar.table, 'table', 'submenu',\r\n                '<div class=\"icon-grid\"></div>'\r\n            ],\r\n\r\n            /** plugins - dialog */\r\n            link: ['', lang.toolbar.link, 'link', 'dialog',\r\n                '<div class=\"icon-link\"></div>'\r\n            ],\r\n\r\n            image: ['', lang.toolbar.image, 'image', 'dialog',\r\n                '<div class=\"icon-image\"></div>'\r\n            ],\r\n\r\n            video: ['', lang.toolbar.video, 'video', 'dialog',\r\n                '<div class=\"icon-video\"></div>'\r\n            ]\r\n        };\r\n    },\r\n\r\n    /**\r\n     * @description Create a group div containing each module\r\n     * @returns {Element}\r\n     * @private\r\n     */\r\n    _createModuleGroup: function (oneModule) {\r\n        const oDiv = util.createElement('DIV');\r\n        oDiv.className = 'tool_module' + (oneModule ? '' : ' sun-editor-module-border');\r\n\r\n        const oUl = util.createElement('UL');\r\n        oUl.className = 'editor_tool';\r\n        oDiv.appendChild(oUl);\r\n\r\n        return {\r\n            'div': oDiv,\r\n            'ul': oUl\r\n        };\r\n    },\r\n\r\n    /**\r\n     * @description Create a button element\r\n     * @param {string} buttonClass - className in button\r\n     * @param {string} title - Title in button\r\n     * @param {string} dataCommand - The data-command property of the button\r\n     * @param {string} dataDisplay - The data-display property of the button ('dialog', 'submenu')\r\n     * @param {string} innerHTML - Html in button\r\n     * @returns {Element}\r\n     * @private\r\n     */\r\n    _createButton: function (buttonClass, title, dataCommand, dataDisplay, innerHTML) {\r\n        const oLi = util.createElement('LI');\r\n        const oButton = util.createElement('BUTTON');\r\n\r\n        oButton.setAttribute('type', 'button');\r\n        oButton.setAttribute('class', 'btn_editor ' + buttonClass);\r\n        oButton.setAttribute('title', title);\r\n        oButton.setAttribute('data-command', dataCommand);\r\n        oButton.setAttribute('data-display', dataDisplay);\r\n        oButton.innerHTML = innerHTML;\r\n        oLi.appendChild(oButton);\r\n\r\n        return {\r\n            'li': oLi,\r\n            'button': oButton\r\n        };\r\n    },\r\n\r\n    /**\r\n     * @description Create editor HTML\r\n     * @param {Array} doc - document object\r\n     * @param {Array} buttonList - option.buttonList\r\n     * @param {Array} lang - option.lang\r\n     * @private\r\n     */\r\n    _createToolBar: function (doc, buttonList, _plugins, lang) {\r\n        const separator_vertical = doc.createElement('DIV');\r\n        separator_vertical.className = 'sun-editor-toolbar-separator-vertical';\r\n\r\n        const tool_bar = doc.createElement('DIV');\r\n        tool_bar.className = 'sun-editor-id-toolbar sun-editor-common';\r\n\r\n        /** create button list */\r\n        const defaultButtonList = this._defaultButtons(lang);\r\n        const plugins = {};\r\n        if (_plugins) {\r\n            const pluginsValues = _plugins.length ? _plugins : Object.keys(_plugins).map(function(e) { return _plugins[e]; });\r\n            for (let i = 0, len = pluginsValues.length; i < len; i++) {\r\n                plugins[pluginsValues[i].name] = pluginsValues[i];\r\n            }\r\n        }\r\n\r\n        let module = null;\r\n        let button = null;\r\n        let moduleElement = null;\r\n        let buttonElement = null;\r\n        let pluginName = '';\r\n        let vertical = false;\r\n        const oneModule = buttonList.length === 1;\r\n\r\n        for (let i = 0; i < buttonList.length; i++) {\r\n\r\n            const buttonGroup = buttonList[i];\r\n            moduleElement = this._createModuleGroup(oneModule);\r\n\r\n            /** button object */\r\n            if (typeof buttonGroup === 'object') {\r\n                for (let j = 0; j < buttonGroup.length; j++) {\r\n\r\n                    button = buttonGroup[j];\r\n                    if (typeof button === 'object') {\r\n                        if (typeof button.add === 'function') {\r\n                            pluginName = button.name;\r\n                            module = defaultButtonList[pluginName];\r\n                            plugins[pluginName] = button;\r\n                        } else {\r\n                            pluginName = button.name;\r\n                            module = [button.className, button.title, button.dataCommand, button.dataDisplay, button.displayOption, button.innerHTML];\r\n                        }\r\n                    } else {\r\n                        module = defaultButtonList[button];\r\n                        pluginName = button;\r\n                    }\r\n\r\n                    buttonElement = this._createButton(module[0], module[1], module[2], module[3], module[4]);\r\n                    moduleElement.ul.appendChild(buttonElement.li);\r\n\r\n                    if (plugins[pluginName]) {\r\n                        plugins[pluginName].buttonElement = buttonElement.button;\r\n                    }\r\n                }\r\n\r\n                if (vertical) tool_bar.appendChild(separator_vertical.cloneNode(false));\r\n                tool_bar.appendChild(moduleElement.div);\r\n                vertical = true;\r\n            }\r\n            /** line break  */\r\n            else if (/^\\/$/.test(buttonGroup)) {\r\n                const enterDiv = doc.createElement('DIV');\r\n                enterDiv.className = 'tool_module_enter';\r\n                tool_bar.appendChild(enterDiv);\r\n                vertical = false;\r\n            }\r\n        }\r\n\r\n        const tool_cover = doc.createElement('DIV');\r\n        tool_cover.className = 'sun-editor-id-toolbar-cover';\r\n        tool_bar.appendChild(tool_cover);\r\n\r\n        return {\r\n            'element': tool_bar,\r\n            'plugins': plugins\r\n        };\r\n    }\r\n};\r\n\r\nexport default _Constructor;","/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\r\n'use strict';\r\n\r\n/**\r\n * @description Elements and variables you should have\r\n * @param {HTMLElement} element - textarea element\r\n * @param {object} cons - Toolbar element you created\r\n * @param {json} options - Inserted options\r\n * @returns Elements, variables of the editor\r\n * @private\r\n */\r\nconst _Context = function (element, cons, options) {\r\n    return {\r\n        element: {\r\n            originElement: element,\r\n            topArea: cons._top,\r\n            relative: cons._relative,\r\n            toolbar: cons._toolBar,\r\n            resizingBar: cons._resizingBar,\r\n            navigation: cons._navigation,\r\n            editorArea: cons._editorArea,\r\n            wysiwyg: cons._wysiwygArea,\r\n            code: cons._codeArea,\r\n            loading: cons._loading,\r\n            resizeBackground: cons._resizeBack,\r\n            _stickyDummy: cons._stickyDummy,\r\n            _arrow: cons._arrow\r\n        },\r\n        tool: {\r\n            cover: cons._toolBar.getElementsByClassName('sun-editor-id-toolbar-cover')[0],\r\n            bold: cons._toolBar.getElementsByClassName('sun-editor-id-bold')[0],\r\n            underline: cons._toolBar.getElementsByClassName('sun-editor-id-underline')[0],\r\n            italic: cons._toolBar.getElementsByClassName('sun-editor-id-italic')[0],\r\n            strike: cons._toolBar.getElementsByClassName('sun-editor-id-strike')[0],\r\n            subscript: cons._toolBar.getElementsByClassName('sun-editor-id-subscript')[0],\r\n            superscript: cons._toolBar.getElementsByClassName('sun-editor-id-superscript')[0],\r\n            font: cons._toolBar.getElementsByClassName('sun-editor-font-family')[0],\r\n            format: cons._toolBar.getElementsByClassName('sun-editor-font-format')[0],\r\n            fontSize: cons._toolBar.getElementsByClassName('sun-editor-font-size')[0]\r\n        },\r\n        option: {\r\n            mode: options.mode,\r\n            toolbarWidth: options.toolbarWidth,\r\n            stickyToolbar: options.stickyToolbar,\r\n            resizingBar: options.resizingBar,\r\n            showPathLabel: options.showPathLabel,\r\n            popupDisplay: options.popupDisplay,\r\n            display: options.display,\r\n            height: options.height,\r\n            minHeight: options.minHeight,\r\n            maxHeight: options.maxHeight,\r\n            font: options.font,\r\n            fontSize: options.fontSize,\r\n            colorList: options.colorList,\r\n            imageResizing: options.imageResizing,\r\n            imageWidth: options.imageWidth,\r\n            imageFileInput: options.imageFileInput,\r\n            imageUrlInput: options.imageUrlInput,\r\n            imageUploadUrl: options.imageUploadUrl,\r\n            videoResizing: options.videoResizing,\r\n            videoWidth: options.videoWidth,\r\n            videoHeight: options.videoHeight\r\n        }\r\n    };\r\n};\r\n\r\nexport default _Context;","/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nexport default {\n    toolbar: {\n        font: 'Font',\n        formats: 'Formats',\n        fontSize: 'Size',\n        bold: 'Bold',\n        underline: 'Underline',\n        italic: 'Italic',\n        strike: 'Strike',\n        subscript: 'Subscript',\n        superscript: 'Superscript',\n        removeFormat: 'Remove Format',\n        fontColor: 'Font Color',\n        hiliteColor: 'Hilite Color',\n        indent: 'Indent',\n        outdent: 'Outdent',\n        align: 'Align',\n        alignLeft: 'Align left',\n        alignRight: 'Align right',\n        alignCenter: 'Align center',\n        justifyFull: 'Justify full',\n        list: 'list',\n        orderList: 'Ordered list',\n        unorderList: 'Unordered list',\n        horizontalRule: 'horizontal line',\n        hr_solid: 'solid',\n        hr_dotted: 'dotted',\n        hr_dashed: 'dashed',\n        table: 'Table',\n        link: 'Link',\n        image: 'Image',\n        video: 'Video',\n        fullScreen: 'Full screen',\n        showBlocks: 'Show blocks',\n        codeView: 'Code view',\n        undo: 'Undo',\n        redo: 'Redo',\n        preview: 'Preview',\n        print: 'print',\n        tag_p: 'Paragraph',\n        tag_div: 'Normal (DIV)',\n        tag_h: 'Header',\n        tag_quote: 'Quote',\n        pre: 'Code'\n    },\n    dialogBox: {\n        linkBox: {\n            title: 'Insert Link',\n            url: 'URL to link',\n            text: 'Text to display',\n            newWindowCheck: 'Open in new window'\n        },\n        imageBox: {\n            title: 'Insert image',\n            file: 'Select from files',\n            url: 'Image URL',\n            altText: 'Alternative text'\n        },\n        videoBox: {\n            title: 'Insert Video',\n            url: 'Media embed URL, YouTube'\n        },\n        caption: 'Insert description',\n        close: 'Close',\n        submitButton: 'Submit',\n        revertButton: 'Revert',\n        proportion: 'constrain proportions',\n        width: 'Width',\n        height: 'Height',\n        basic: 'Basic',\n        left: 'Left',\n        right: 'Right',\n        center: 'Center'\n    },\n    controller: {\n        edit: 'Edit',\n        remove: 'Remove',\n        insertRowAbove: 'Insert row above',\n        insertRowBelow: 'Insert row below',\n        deleteRow: 'Delete row',\n        insertColumnBefore: 'Insert column before',\n        insertColumnAfter: 'Insert column after',\n        deleteColumn: 'Delete column',\n        resize100: 'Resize 100%',\n        resize75: 'Resize 75%',\n        resize50: 'Resize 50%',\n        resize25: 'Resize 25%',\n        mirrorHorizontal: 'Mirror, Horizontal',\n        mirrorVertical: 'Mirror, Vertical',\n        rotateLeft: 'Rotate left',\n        rotateRight: 'Rotate right'\n    }\n};\n","/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport util from './lib/util';\nimport core from './lib/core';\nimport _Constructor from './lib/constructor';\nimport _Context from './lib/context';\nimport _defaultLang from './lang/en';\n\n\nexport default {\n    /**\n     * @description Returns the create function with preset options.\n     * If the options overlap, the options of the 'create' function take precedence.\n     * @param {Json} options - Initialization options\n     * @returns {function}\n     */\n    init: function (init_options) {\n        const self = this;\n\n        return {\n            create: function (idOrElement, options) {\n                return self.create(idOrElement, options, init_options);\n            }\n        };\n    },\n\n    /**\n     * @description Create the suneditor\n     * @param {String|Element} idOrElement - textarea Id or textarea element\n     * @param {Json} options - user options\n     * @returns {{save: save, getContext: getContext, getContent: getContent, setContent: setContent, appendContent: appendContent, disabled: disabled, enabled: enabled, show: show, hide: hide, destroy: destroy}}\n     */\n    create: function (idOrElement, options, _init_options) {\n        if (typeof options !== 'object') options = {};\n        if (_init_options) {\n            // options = Object.assign(util.copyObj(_init_options), options);\n            options =  [util.copyObj(_init_options), options].reduce(function (init, option) {\n                            Object.keys(option).forEach(function (key) {\n                                init[key] = option[key];\n                            });\n                            return init;\n                        }, {});\n        }\n        \n        const element = typeof idOrElement === 'string' ? document.getElementById(idOrElement) : idOrElement;\n\n        if (!element) {\n            if (typeof idOrElement === 'string') {\n                throw Error('[SUNEDITOR.create.fail] The element for that id was not found (ID:\"' + idOrElement + '\")');\n            }\n\n            throw Error('[SUNEDITOR.create.fail] suneditor requires textarea\\'s element or id value');\n        }\n\n        const cons = _Constructor.init(element, options, (options.lang ||  _defaultLang), options.plugins);\n\n        if (cons.constructed._top.id && document.getElementById(cons.constructed._top.id)) {\n            throw Error('[SUNEDITOR.create.fail] The ID of the suneditor you are trying to create already exists (ID:\"' + cons.constructed._top.id + '\")');\n        }\n\n        element.style.display = 'none';\n        cons.constructed._top.style.display = 'block';\n\n        /** Create to sibling node */\n        if (typeof element.nextElementSibling === 'object') {\n            element.parentNode.insertBefore(cons.constructed._top, element.nextElementSibling);\n        } else {\n            element.parentNode.appendChild(cons.constructed._top);\n        }\n\n        return core(_Context(element, cons.constructed, cons.options), cons.plugins, cons.options.lang);\n    }\n};\n","'use strict';\n\nimport align from './submenu/align';\nimport font from './submenu/font';\nimport fontSize from './submenu/fontSize';\nimport fontColor from './submenu/fontColor';\nimport hiliteColor from './submenu/hiliteColor';\nimport horizontalRule from './submenu/horizontalRule';\nimport list from './submenu/list';\nimport table from './submenu/table';\nimport formatBlock from './submenu/formatBlock';\n\nimport link from './dialog/link';\nimport image from './dialog/image';\nimport video from './dialog/video';\n\nexport { align, font, fontSize, fontColor, hiliteColor, horizontalRule, list, table, formatBlock, link, image, video };\nexport default { align, font, fontSize, fontColor, hiliteColor, horizontalRule, list, table, formatBlock, link, image, video };","<template>\n\t<textarea :id=\"editor_id\" style=\"display:none;\"></textarea>\n</template>\n\n<script>\n  import Vue from 'vue'\n  import suneditor from 'suneditor'\n\timport plugins from 'suneditor/src/plugins'\n\n  export default {\n    name: 'editor',\n    \n    data () {\n      return {\n        editor: {}\n      }\n    },\n\n    props: {\n\t    editor_id: {\n        type: String,\n        default: 'editor'\n      },\n      mode: {\n        type: String,\n        default: 'inline'\n      },\n\t    buttons: {\n\t      type: Array,\n\t      default: () => { return [] }\n\t    }\n\t  },\n\n    mounted () {\n      this.editor = this.initEditor()\n\n\t    this.$emit('editor', this.editor)\n    },\n\n    beforeDestroy () {\n\t    this.destroyEditor()\n\t  },\n\n    methods: {\n      initEditor () {\n      \tconst lol = this\n\t\t        \n      \tconst editor = suneditor.create(this.editor_id, {\n      \t\tmode: this.mode,\n\t\t\t    plugins: plugins,\n\t\t\t    minHeight: 200,\n\t\t\t    stickyToolbar: false,\n\t\t\t    // buttonList: [\n\t\t     //    [\n\t\t\t    //     'undo', 'redo',\n\t\t\t    //     'font', 'fontSize', 'formatBlock',\n\t\t\t    //     'bold', 'underline', 'italic', 'strike', 'subscript', 'superscript',\n\t\t\t    //     'removeFormat',\n\t\t\t    //     'fontColor', 'hiliteColor',\n\t\t\t    //     'indent', 'outdent',\n\t\t\t    //     'align', 'horizontalRule', 'list', 'table',\n\t\t\t    //     'link', 'image', 'video',\n\t\t\t    //     'fullScreen', 'showBlocks', 'codeView',\n\t\t\t    //     'preview', 'print'\n\t\t     //    ]\n\t\t\t    // ]\n\t      //   plugins: [\n\t\t     //    align,\n\t\t     //    font,\n\t\t     //    fontSize,\n\t\t     //    fontColor,\n\t\t     //    hiliteColor,\n\t\t     //    horizontalRule,\n\t\t     //    list,\n\t\t     //    table,\n\t\t     //    formatBlock,\n\t\t     //    link,\n\t\t     //    image,\n\t\t     //    video\n\t\t\t    // ],\n\t\t\t    buttonList: [\n\t\t\t    \t['undo', 'redo'],\n\t\t        ['font', 'fontSize', 'formatBlock'],\n\t\t        ['fontColor', 'hiliteColor'],\n\t\t        ['align', 'horizontalRule', 'list', 'table'],\n\t\t        ['link', 'image', 'showBlocks', 'codeView'],\n\t\t        lol.buttons\n\t\t\t    ],\n\t\t\t\t})\n\n\t\t\t\treturn editor\n\t    },\n\n\t    destroyEditor () {\n\t      this.editor.destroy()\n\t    }\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  @import '~suneditor/dist/css/suneditor.min.css';\n\t// or\n\t// import 'suneditor/src/assets/css/suneditor.css'\n\t// import 'suneditor/src/assets/css/suneditor-contents.css'\n\n\t.sun-editor .modal-dialog .editor_image .form-group:first-child {\n\t\tdisplay: none !important;\n\t}\n\n\t.sun-editor {\n\t  z-index: 9997;\n\t}\n\n\t.vuestic-simple-select .dropdown-menu {\n\t\tz-index: 9999;\n\t}\n\n\t.sun-editor .sun-editor-id-editorArea {\n\t\tmin-height: 400px;\n\t}\n\n  .sun-editor .sun-editor-id-editorArea,\n  .sun-editor .sun-editor-id-editorArea > div {\n    // color: black;\n  }\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./editor.vue?vue&type=template&id=98b646fe&\"\nimport script from \"./editor.vue?vue&type=script&lang=js&\"\nexport * from \"./editor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./editor.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"editor.vue\"\nexport default component.exports","/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport util from '../../lib/util';\n\nexport default {\n    name: 'font',\n    add: function (core, targetElement) {\n        /** set submenu */\n        let listDiv = eval(this.setSubmenu(core.context.option));\n\n        /** add event listeners */\n        listDiv.getElementsByClassName('list_family')[0].addEventListener('click', this.pickup.bind(core));\n\n        /** append html */\n        targetElement.parentNode.appendChild(listDiv);\n\n        /** empty memory */\n        listDiv = null;\n    },\n\n    setSubmenu: function (option) {\n        const listDiv = util.createElement('DIV');\n        listDiv.className = 'layer_editor';\n        listDiv.style.display = 'none';\n\n        let font, text, i, len;\n        let fontList = !option.font ?\n            [\n                'Arial',\n                'Comic Sans MS',\n                'Courier New,Courier',\n                'Impact,Charcoal,sans-serif',\n                'Georgia',\n                'tahoma',\n                'Trebuchet MS,Helvetica',\n                'Verdana'\n            ] : option.font;\n\n        let list = '<div class=\"sun-editor-submenu inner_layer list_family\">' +\n            '   <ul class=\"list_editor sun-editor-list-font-family\">';\n        for (i = 0, len = fontList.length; i < len; i++) {\n            font = fontList[i];\n            text = font.split(',')[0];\n            list += '<li><button type=\"button\" class=\"btn_edit\" data-value=\"' + font + '\" data-txt=\"' + text + '\" title=\"' + text + '\" style=\"font-family:' + font + ';\">' + text + '</button></li>';\n        }\n        list += '   </ul>';\n        list += '</div>';\n        listDiv.innerHTML = list;\n\n        return listDiv;\n    },\n\n    pickup: function (e) {\n        if (!/^BUTTON$/i.test(e.target.tagName)) {\n            return false;\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        const target = e.target;\n\n        util.changeTxt(this.context.tool.font, target.getAttribute('data-txt'));\n        const newNode = util.createElement('SPAN');\n        newNode.style.fontFamily = target.getAttribute('data-value');\n        this.nodeChange(newNode, ['font-family']);\n        \n        this.submenuOff();\n        this.focus();\n    }\n};\n","/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\r\n'use strict';\r\n\r\n/**\r\n * @description utility function\r\n */\r\nconst util = {\r\n    _d: document,\r\n    _w: window,\r\n\r\n    /**\r\n     * @description Unicode Character 'ZERO WIDTH SPACE'\r\n     */\r\n    zeroWidthSpace: '\\u200B',\r\n\r\n    /**\r\n     * @description Gets XMLHttpRequest object\r\n     * @returns {Object}\r\n     */\r\n    getXMLHttpRequest: function () {\r\n        /** IE */\r\n        if (this._w.ActiveXObject) {\r\n            try {\r\n                return new ActiveXObject('Msxml2.XMLHTTP');\r\n            } catch (e) {\r\n                try {\r\n                    return new ActiveXObject('Microsoft.XMLHTTP');\r\n                } catch (e1) {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        /** netscape */\r\n        else if (this._w.XMLHttpRequest) {\r\n            return new XMLHttpRequest();\r\n        }\r\n        /** fail */\r\n        else {\r\n            return null;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * @description Copies object\r\n     * @param {Object} obj - Object to be copy\r\n     * @returns {Object}\r\n     */\r\n    copyObj: function (obj) {\r\n        const copy = {};\r\n\r\n        for (let attr in obj) {\r\n            copy[attr] = obj[attr];\r\n        }\r\n\r\n        return copy;\r\n    },\r\n\r\n    /**\r\n     * @description Create Element node\r\n     * @param {String} elementName - Element name\r\n     * @returns {Element}\r\n     */\r\n    createElement: function (elementName) {\r\n        return this._d.createElement(elementName);\r\n    },\r\n\r\n    /**\r\n     * @description Create text node\r\n     * @param {String} text - text contents\r\n     * @returns {Node}\r\n     */\r\n    createTextNode: function (text) {\r\n        return this._d.createTextNode(text || '');\r\n    },\r\n\r\n    /**\r\n     * @description Get the the tag path of the arguments value\r\n     * If not found, return the first found value\r\n     * @param {Array} nameArray - File name array\r\n     * @param {String} extension - js, css\r\n     * @returns {String}\r\n     */\r\n    getIncludePath: function (nameArray, extension) {\r\n        let path = '';\r\n        const pathList = [];\r\n        const tagName = extension === 'js' ? 'script' : 'link';\r\n        const src = extension === 'js' ? 'src' : 'href';\r\n        \r\n        let fileName = '(?:';\r\n        for (let i = 0, len = nameArray.length; i < len; i++) {\r\n            fileName += nameArray[i] + (i < len - 1 ? '|' : ')');\r\n        }\r\n\r\n        const regExp = new RegExp('(^|.*[\\\\\\\\\\/])' + fileName + '(\\\\.[^\\\\\\\\/]+)?\\.' + extension + '(?:\\\\?.*|;.*)?$', 'i');\r\n        const extRegExp = new RegExp('.+\\\\.' + extension + '(?:\\\\?.*|;.*)?$', 'i');\r\n            \r\n        for (let c = this._d.getElementsByTagName(tagName), i = 0; i < c.length; i++) {\r\n            if (extRegExp.test(c[i][src])) {\r\n                pathList.push(c[i]);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < pathList.length; i++) {\r\n            let editorTag = pathList[i][src].match(regExp);\r\n            if (editorTag) {\r\n                path = editorTag[0];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (path === '') path = pathList.length > 0 ? pathList[0][src] : '';\r\n\r\n        -1 === path.indexOf(':/') && '//' !== path.slice(0, 2) && (path = 0 === path.indexOf('/') ? location.href.match(/^.*?:\\/\\/[^\\/]*/)[0] + path : location.href.match(/^[^\\?]*\\/(?:)/)[0] + path);\r\n\r\n        if (!path) throw '[SUNEDITOR.util.getIncludePath.fail] The SUNEDITOR installation path could not be automatically detected. (name: +' + name + ', extension: ' + extension + ')';\r\n\r\n        return path;\r\n    },\r\n\r\n    /**\r\n     * @description Converts contents into a format that can be placed in an editor\r\n     * @param {String} contents - contents\r\n     * @returns {String}\r\n     */\r\n    convertContentsForEditor: function (contents) {\r\n        let tag, baseHtml, innerHTML = '';\r\n        contents = contents.trim();\r\n\r\n        tag = this._d.createRange().createContextualFragment(contents).childNodes;\r\n\r\n        for (let i = 0, len = tag.length; i < len; i++) {\r\n            baseHtml = tag[i].outerHTML || tag[i].textContent;\r\n\r\n            if (tag[i].nodeType === 3) {\r\n                const textArray = baseHtml.split(/\\n/g);\r\n                let text = '';\r\n                for (let t = 0, tLen = textArray.length; t < tLen; t++) {\r\n                    text = textArray[t].trim();\r\n                    if (text.length > 0) innerHTML += '<P>' + text + '</p>';\r\n                }\r\n            } else {\r\n                innerHTML += baseHtml;\r\n            }\r\n        }\r\n\r\n        const ec = {'&': '&amp;', '\\u00A0': '&nbsp;', '\\'': '&quot;', '<': '&lt;', '>': '&gt;'};\r\n        contents = contents.replace(/&|\\u00A0|'|<|>/g, function (m) {\r\n            return (typeof ec[m] === 'string') ? ec[m] : m;\r\n        });\r\n\r\n        if (innerHTML.length === 0) innerHTML = '<p>' + (contents.length > 0 ? contents : this.zeroWidthSpace) + '</p>';\r\n\r\n        return innerHTML;\r\n    },\r\n\r\n    /**\r\n     * @description Converts HTML string into a format that can be placed in an editor of code view mode\r\n     * @param {String} html - HTML string\r\n     * @returns {String}\r\n     */\r\n    convertHTMLForCodeView: function (html) {\r\n        return html.replace(/\\s*<(?:li|td)\\s*(?:[a-z\\-]+)?\\s*(?:=\"?[^>]*\"?)?\\s*>/gi, this._insertIndent)\r\n                    .replace(/<\\/?(?:blockquote|hr|ol|ul|table|tbody|thead|th|tr)\\s*(?:[a-z\\-]+)?\\s*(?:=\"?[^>]*\"?)?\\s*>(?=[^\\n])/gi, this._insertLineBreak)\r\n                    .replace(/<\\/(?:p|div|h[1-6]|li|td|pre)>(?=[^\\n])/gi, this._insertLineBreak);\r\n    },\r\n\r\n    /**\r\n     * @description Add a line break to the open tag\r\n     * @param {String} matchTag - matched tag string\r\n     * @returns {String}\r\n     */\r\n    _insertIndent: function (matchTag) {\r\n        return '  ' + matchTag.trim();\r\n    },\r\n\r\n    /**\r\n     * @description Add a line breaks to the tags\r\n     * @param {String} matchTag - matched tag string\r\n     * @returns {String}\r\n     */\r\n    _insertLineBreak: function (matchTag) {\r\n        return matchTag + '\\n';\r\n    },\r\n\r\n    /**\r\n     * @description It is judged whether it is the edit region top div element.\r\n     * @param {Element} element - The element to check\r\n     * @returns {Boolean}\r\n     */\r\n    isWysiwygDiv: function (element) {\r\n        if (element && element.nodeType === 1 && this.hasClass(element, 'sun-editor-id-wysiwyg')) return true;\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * @description It is judged whether it is the format element (P, DIV, H1-6, LI, CODE)\r\n     * @param {Element} element - The element to check\r\n     * @returns {Boolean}\r\n     */\r\n    isFormatElement: function (element) {\r\n        if (element && element.nodeType === 1 && /^(?:P|DIV|H[1-6]|LI|CODE)$/i.test(element.nodeName) && !/sun-editor-id-comp/.test(element.className)) return true;\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * @description It is judged whether it is the range format element. (BLOCKQUOTE, TABLE, THEAD, TBODY, TH, TR, TD, OL, UL, PRE)\r\n     * * Range format element is wrap the format element  (P, DIV, H1-6, LI, CODE)\r\n     * @param {Element} element - The element to check\r\n     * @returns {Boolean}\r\n     */\r\n    isRangeFormatElement: function (element) {\r\n        if (element && element.nodeType === 1 && /^(?:BLOCKQUOTE|TABLE|THEAD|TBODY|TH|TR|TD|OL|UL|PRE|FIGCAPTION)$/i.test(element.nodeName)) return true;\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * @description Get format element of the argument value (P, DIV, H[1-6], LI)\r\n     * @param {Element} element - Reference element if null or no value, it is relative to the current focus node.\r\n     * @returns {Element}\r\n     */\r\n    getFormatElement: function (element) {\r\n        if (!element) return null;\r\n\r\n        while (!this.isFormatElement(element) && !this.isWysiwygDiv(element.parentNode)) {\r\n            element = element.parentNode;\r\n        }\r\n\r\n        if (this.isWysiwygDiv(element) || this.isRangeFormatElement(element)) {\r\n            const firstFormatElement = this.getListChildren(element, function (current) {\r\n                return this.isFormatElement(current);\r\n            }.bind(this))[0];\r\n\r\n            return firstFormatElement;\r\n        }\r\n\r\n        return element;\r\n    },\r\n\r\n    /**\r\n     * @description Get range format element of the argument value (blockquote, TABLE, TR, TD, OL, UL, PRE)\r\n     * @param {Element} element - Reference element if null or no value, it is relative to the current focus node.\r\n     * @returns {Element|null}\r\n     */\r\n    getRangeFormatElement: function (element) {\r\n        if (!element) return null;\r\n\r\n        while (!this.isRangeFormatElement(element) && !this.isWysiwygDiv(element)) {\r\n            element = element.parentNode;\r\n        }\r\n\r\n        return this.isWysiwygDiv(element) ? null : element;\r\n    },\r\n\r\n    /**\r\n     * @description Get the index of the argument value in the element array\r\n     * @param {array} array - element array\r\n     * @param {Element} element - Element to find index\r\n     * @returns {Number}\r\n     */\r\n    getArrayIndex: function (array, element) {\r\n        let idx = -1;\r\n        for (let i = 0, len = array.length; i < len; i++) {\r\n            if (array[i] === element) {\r\n                idx = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return idx;\r\n    },\r\n\r\n    /**\r\n     * @description Get the next index of the argument value in the element array\r\n     * @param {array} array - element array\r\n     * @param {Element} item - Element to find index\r\n     * @returns {Number}\r\n     */\r\n    nextIdx: function (array, item) {\r\n        let idx = this.getArrayIndex(array, item);\r\n        if (idx === -1) return -1;\r\n        return idx + 1;\r\n    },\r\n\r\n    /**\r\n     * @description Get the previous index of the argument value in the element array\r\n     * @param {array} array - element array\r\n     * @param {Element} item - Element to find index\r\n     * @returns {Number}\r\n     */\r\n    prevIdx: function (array, item) {\r\n        let idx = this.getArrayIndex(array, item);\r\n        if (idx === -1) return -1;\r\n        return idx - 1;\r\n    },\r\n\r\n    /**\r\n     * @description Check the node is a table cell\r\n     * @param {Element} node - Nodes to check\r\n     * @returns {Boolean}\r\n     */\r\n    isCell: function (node) {\r\n        return node && /^(?:TD|TH)$/i.test(node.nodeName);\r\n    },\r\n\r\n    /**\r\n     * @description Check the node is a break node (BR)\r\n     * @param {Element} node - Nodes to check\r\n     * @returns {Boolean}\r\n     */\r\n    isBreak: function (node) {\r\n        return node && /^BR$/i.test(node.nodeName);\r\n    },\r\n\r\n    /**\r\n     * @description Get all child nodes of the argument value element (Without text node)\r\n     * @param {Element} element - element to get child node\r\n     * @param {(function|null)} validation - Conditional function\r\n     * @returns {Array}\r\n     */\r\n    getListChildren: function (element, validation) {\r\n        const children = [];\r\n        if (!element || !element.children) return children;\r\n\r\n        validation = validation || function () { return true; };\r\n\r\n        (function recursionFunc(current) {\r\n            if (element !== current && validation(current)) {\r\n                children.push(current);\r\n            }\r\n\r\n            for (let i = 0, len = current.children.length; i < len; i++) {\r\n                recursionFunc(current.children[i]);\r\n            }\r\n        })(element);\r\n\r\n        return children;\r\n    },\r\n\r\n    /**\r\n     * @description Get all child nodes of the argument value element (Include text nodes)\r\n     * @param {Element} element - element to get child node\r\n     * @param {(function|null)} validation - Conditional function\r\n     * @returns {Array}\r\n     */\r\n    getListChildNodes: function (element, validation) {\r\n        const children = [];\r\n        if (!element || !element.childNodes) return children;\r\n\r\n        validation = validation || function () { return true; };\r\n\r\n        (function recursionFunc(current) {\r\n            if (element !== current && validation(current)) {\r\n                children.push(current);\r\n            }\r\n\r\n            for (let i = 0, len = current.childNodes.length; i < len; i++) {\r\n                recursionFunc(current.childNodes[i]);\r\n            }\r\n        })(element);\r\n\r\n        return children;\r\n    },\r\n\r\n    /**\r\n     * @description Get the parent element of the argument value.\r\n     * A tag that satisfies the query condition is imported.\r\n     * Returns null if not found.\r\n     * @param {Node} element - Reference element\r\n     * @param {String|Function} query - Query String (tagName, .className, #ID, :name) or validation function.\r\n     * Not use it like jquery.\r\n     * Only one condition can be entered at a time.\r\n     * @returns {Element|null}\r\n     */\r\n    getParentElement: function (element, query) {\r\n        let check;\r\n\r\n        if (typeof query === 'function') {\r\n            check = query;\r\n        } else {\r\n            let attr;\r\n            if (/\\./.test(query)) {\r\n                attr = 'className';\r\n                query = query.split('.')[1];\r\n            } else if (/#/.test(query)) {\r\n                attr = 'id';\r\n                query = '^' + query.split('#')[1] + '$';\r\n            } else if (/:/.test(query)) {\r\n                attr = 'name';\r\n                query = '^' + query.split(':')[1] + '$';\r\n            } else {\r\n                attr = 'tagName';\r\n                query = '^' + query + '$';\r\n            }\r\n\r\n            const regExp = new RegExp(query, 'i');\r\n            check = function (el) {\r\n                return regExp.test(el[attr]);\r\n            };\r\n        }\r\n\r\n        while (element && (element.nodeType === 3 || !check(element))) {\r\n            if (this.isWysiwygDiv(element)) {\r\n                return null;\r\n            }\r\n            element = element.parentNode;\r\n        }\r\n\r\n        return element;\r\n    },\r\n\r\n    /**\r\n     * @description Get the child element of the argument value.\r\n     * A tag that satisfies the query condition is imported.\r\n     * Returns null if not found.\r\n     * @param {Node} element - Reference element\r\n     * @param {String|Function} query - Query String (tagName, .className, #ID, :name) or validation function.\r\n     * Not use it like jquery.\r\n     * Only one condition can be entered at a time.\r\n     * @returns {Element|null}\r\n     */\r\n    getChildElement: function (element, query) {\r\n        let check;\r\n\r\n        if (typeof query === 'function') {\r\n            check = query;\r\n        } else {\r\n            let attr;\r\n            if (/\\./.test(query)) {\r\n                attr = 'className';\r\n                query = query.split('.')[1];\r\n            } else if (/#/.test(query)) {\r\n                attr = 'id';\r\n                query = '^' + query.split('#')[1] + '$';\r\n            } else if (/:/.test(query)) {\r\n                attr = 'name';\r\n                query = '^' + query.split(':')[1] + '$';\r\n            } else {\r\n                attr = 'tagName';\r\n                query = '^' + query + '$';\r\n            }\r\n\r\n            const regExp = new RegExp(query, 'i');\r\n            check = function (el) {\r\n                return regExp.test(el[attr]);\r\n            };\r\n        }\r\n\r\n        const childList = this.getListChildren(element, function (current) {\r\n            return check(current);\r\n        });\r\n\r\n        return childList[0];\r\n    },\r\n\r\n    /**\r\n     * @description Returns the position of the left and top of argument. {left:0, top:0}\r\n     * @param {Element} element - Element node\r\n     * @returns {Object}\r\n     */\r\n    getOffset: function (element) {\r\n        let tableOffsetLeft = 0;\r\n        let tableOffsetTop = 0;\r\n        let tableElement = element.nodeType === 3 ? element.parentElement : element;\r\n\r\n        while (!this.isWysiwygDiv(tableElement.parentNode)) {\r\n            if (/^(A|TD|TH|FIGURE|FIGCAPTION|IMG|IFRAME)$/i.test(tableElement.nodeName) || /relative/i.test(tableElement.style.position)) {\r\n                tableOffsetLeft += tableElement.offsetLeft;\r\n                tableOffsetTop += tableElement.offsetTop;\r\n            }\r\n            tableElement = tableElement.parentNode;\r\n        }\r\n\r\n        return {\r\n            left: tableOffsetLeft,\r\n            top: tableOffsetTop - tableElement.parentNode.scrollTop\r\n        };\r\n    },\r\n\r\n    /**\r\n     * @description Set the text content value of the argument value element\r\n     * @param {Element} element - Element to replace text content\r\n     * @param {String} txt - Text to be applied\r\n     */\r\n    changeTxt: function (element, txt) {\r\n        if (!element || !txt) return;\r\n        element.textContent = txt;\r\n    },\r\n\r\n    /**\r\n     * @description Determine whether any of the matched elements are assigned the given class\r\n     * @param {Element} element - Elements to search class name\r\n     * @param {String} className - Class name to search for\r\n     * @returns {Boolean}\r\n     */\r\n    hasClass: function (element, className) {\r\n        if (!element) return;\r\n\r\n        return element.classList.contains(className.trim());\r\n    },\r\n\r\n    /**\r\n     * @description Append the className value of the argument value element\r\n     * @param {Element} element - Elements to add class name\r\n     * @param {String} className - Class name to be add\r\n     */\r\n    addClass: function (element, className) {\r\n        if (!element) return;\r\n\r\n        const check = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\r\n        if (check.test(element.className)) return;\r\n\r\n        element.className += ' ' + className;\r\n    },\r\n\r\n    /**\r\n     * @description Delete the className value of the argument value element\r\n     * @param {Element} element - Elements to remove class name\r\n     * @param {String} className - Class name to be remove\r\n     */\r\n    removeClass: function (element, className) {\r\n        if (!element) return;\r\n\r\n        const check = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\r\n        element.className = element.className.replace(check, ' ').trim();\r\n    },\r\n\r\n    /**\r\n     * @description Argument value If there is no class name, insert it and delete the class name if it exists\r\n     * @param {Element} element - Elements to replace class name\r\n     * @param {String} className - Class name to be change\r\n     */\r\n    toggleClass: function (element, className) {\r\n        if (!element) return;\r\n\r\n        const check = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\r\n        if (check.test(element.className)) {\r\n            element.className = element.className.replace(check, ' ').trim();\r\n        }\r\n        else {\r\n            element.className += ' ' + className;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * @description Delete argumenu value element\r\n     * @param {Element} item - Element to be remove\r\n     */\r\n    removeItem: function (item) {\r\n        try {\r\n            item.remove();\r\n        } catch (e) {\r\n            item.parentNode.removeChild(item);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * @description Delete a empty child node of argument element\r\n     * @param {Element} element - Element node\r\n     */\r\n    removeEmptyNode: function (element) {\r\n        (function recursionFunc(current) {\r\n            if (current.textContent.trim().length === 0 && !/^BR$/i.test(current.nodeName) && (!current.firstChild || !/^BR$/i.test(current.firstChild.nodeName))) {\r\n                current.parentNode && current.parentNode.removeChild(current);\r\n            } else {\r\n                for (let i = 0, len = current.children.length; i < len; i++) {\r\n                    if (!current.children[i]) continue;\r\n                    recursionFunc(current.children[i]);\r\n                }\r\n            }\r\n        })(element);\r\n    },\r\n\r\n    /**\r\n     * @description Gets the clean HTML code for editor\r\n     * @param {String} html - HTML string\r\n     */\r\n    cleanHTML: function (html) {\r\n        const tagsAllowed = new RegExp('^(P|DIV|PRE|H1|H2|H3|H4|H5|H6|B|U|I|STRIKE|SUB|SUP|OL|UL|TABLE|BR|HR|A|IMG|IFRAME)$', 'i');\r\n        const domTree = this._d.createRange().createContextualFragment(html).children;\r\n        let cleanHTML = '';\r\n\r\n        for (let i = 0, len = domTree.length; i < len; i++) {\r\n            if (tagsAllowed.test(domTree[i].nodeName)) {\r\n                cleanHTML += domTree[i].outerHTML.replace(/<!--(.*?)-->/g, '').replace(/<[a-zA-Z]+\\:[a-zA-Z]+.*>(\\n|.)*<\\/[a-zA-Z]+\\:[a-zA-Z]+>/g, '').replace(/\\s(?:style|class|dir|xmlns|data-[a-z\\-]+)\\s*(?:[a-z\\-]+)?\\s*(?:=\"?[^>]*\"?)?\\s*/ig, '').replace(/<\\/?(?:span|font)\\s*(?:[a-z\\-]+)?\\s*(?:=\"?[^>]*\"?)?\\s*>/ig, '').replace(/<\\/?[a-z]+:[a-z]+\\s*(?:[a-z\\-]+)?\\s*(?:=\"?[^>]*\"?)?\\s*>/ig, '');\r\n            }\r\n        }\r\n\r\n        return cleanHTML || html;\r\n    }\r\n};\r\n\r\nexport default util;","/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport util from '../../lib/util';\n\nexport default {\n    name: 'horizontalRule',\n    add: function (core, targetElement) {\n        /** set submenu */\n        let listDiv = eval(this.setSubmenu(core.lang));\n\n        /** add event listeners */\n        listDiv.getElementsByTagName('UL')[0].addEventListener('click', this.horizontalRulePick.bind(core));\n\n        /** append html */\n        targetElement.parentNode.appendChild(listDiv);\n\n        /** empty memory */\n        listDiv = null;\n    },\n\n    setSubmenu: function (lang) {\n        const listDiv = util.createElement('DIV');\n\n        listDiv.className = 'sun-editor-submenu layer_editor layer_line';\n        listDiv.style.display = 'none';\n        listDiv.innerHTML = '' +\n            '<div class=\"inner_layer\">' +\n            '   <ul class=\"list_editor\">' +\n            '       <li>' +\n            '           <button type=\"button\" class=\"btn_edit btn_line\" data-command=\"horizontalRule\" data-value=\"solid\" title=\"' + lang.toolbar.hr_solid + '\">' +\n            '               <hr style=\"border-width: 1px 0 0; border-style: solid none none; border-color: black; border-image: initial; height: 1px;\" />' +\n            '           </button>' +\n            '       </li>' +\n            '       <li>' +\n            '           <button type=\"button\" class=\"btn_edit btn_line\" data-command=\"horizontalRule\" data-value=\"dotted\" title=\"' + lang.toolbar.hr_dotted + '\">' +\n            '               <hr style=\"border-width: 1px 0 0; border-style: dotted none none; border-color: black; border-image: initial; height: 1px;\" />' +\n            '           </button>' +\n            '       </li>' +\n            '       <li>' +\n            '           <button type=\"button\" class=\"btn_edit btn_line\" data-command=\"horizontalRule\" data-value=\"dashed\" title=\"' + lang.toolbar.hr_dashed + '\">' +\n            '               <hr style=\"border-width: 1px 0 0; border-style: dashed none none; border-color: black; border-image: initial; height: 1px;\" />' +\n            '           </button>' +\n            '       </li>' +\n            '   </ul>' +\n            '</div>';\n\n        return listDiv;\n    },\n\n    appendHr: function (className) {\n        const oHr = util.createElement('HR');\n        oHr.className = className;\n\n        this.focus();\n        this.insertNode(oHr, util.getFormatElement(this.getSelectionNode()));\n\n        const oNode = this.appendFormatTag(oHr);\n        this.setRange(oNode, 0, oNode, 0);\n    },\n\n    horizontalRulePick: function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        let target = e.target;\n        let value = null;\n        \n        while (!value && !/UL/i.test(target.tagName)) {\n            value = target.getAttribute('data-value');\n            target = target.parentNode;\n        }\n\n        this.plugins.horizontalRule.appendHr.call(this,value);\n\n        this.submenuOff();\n        this.focus();\n    }\n};\n","/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport util from '../../lib/util';\n\nexport default {\n    name: 'table',\n    add: function (core, targetElement) {\n        const context = core.context;\n        context.table = {\n            _element: null,\n            _tdElement: null,\n            _trElement: null,\n            _trElements: null,\n            _tdIndex: 0,\n            _trIndex: 0,\n            _tdCnt: 0,\n            _trCnt: 0,\n            _tableXY: []\n        };\n\n        /** set submenu */\n        let listDiv = eval(this.setSubmenu());\n        let tablePicker = listDiv.getElementsByClassName('sun-editor-id-table-picker')[0];\n\n        context.table.tableHighlight = listDiv.getElementsByClassName('sun-editor-id-table-highlighted')[0];\n        context.table.tableUnHighlight = listDiv.getElementsByClassName('sun-editor-id-table-unhighlighted')[0];\n        context.table.tableDisplay = listDiv.getElementsByClassName('sun-editor-table-display')[0];\n\n        /** set resizing */\n        let resizeDiv = eval(this.setController_tableEditor(core.lang));\n        context.table.resizeDiv = resizeDiv;\n        resizeDiv.addEventListener('mousedown', function (e) { e.stopPropagation(); }, false);\n        \n        /** add event listeners */\n        tablePicker.addEventListener('mousemove', this.onMouseMove_tablePicker.bind(core));\n        tablePicker.addEventListener('click', this.appendTable.bind(core));\n        resizeDiv.addEventListener('click', this.onClick_resizeDiv.bind(core));\n\n        /** append html */\n        targetElement.parentNode.appendChild(listDiv);\n        context.element.relative.appendChild(resizeDiv);\n\n        /** empty memory */\n        listDiv = null, tablePicker = null, resizeDiv = null;\n    },\n\n    setSubmenu: function () {\n        const listDiv = util.createElement('DIV');\n        listDiv.className = 'sun-editor-submenu table-content';\n        listDiv.style.display = 'none';\n\n        listDiv.innerHTML = '' +\n            '<div class=\"table-data-form\">' +\n            '   <div class=\"table-picker sun-editor-id-table-picker\"></div>' +\n            '   <div class=\"table-highlighted sun-editor-id-table-highlighted\"></div>' +\n            '   <div class=\"table-unhighlighted sun-editor-id-table-unhighlighted\"></div>' +\n            '</div>' +\n            '<div class=\"table-display sun-editor-table-display\">1 x 1</div>';\n\n        return listDiv;\n    },\n\n    setController_tableEditor: function (lang) {\n        const tableResize = util.createElement('DIV');\n\n        tableResize.className = 'sun-editor-id-table-edit';\n        tableResize.style.display = 'none';\n        tableResize.innerHTML = '' +\n            '<div class=\"arrow arrow-up\"></div>' +\n            '<div>' +\n            '   <div class=\"btn-group\">' +\n            '     <button type=\"button\" data-command=\"insert\" data-value=\"row\" data-option=\"up\" title=\"' + lang.controller.insertRowAbove + '\"><div class=\"icon-insert-row-above\"></div></button>' +\n            '     <button type=\"button\" data-command=\"insert\" data-value=\"row\" data-option=\"down\" title=\"' + lang.controller.insertRowBelow + '\"><div class=\"icon-insert-row-below\"></div></button>' +\n            '     <button type=\"button\" data-command=\"delete\" data-value=\"row\" title=\"' + lang.controller.deleteRow + '\"><div class=\"icon-delete-row\"></div></button>' +\n            '   </div>' +\n            '</div>' +\n            '<div>' +\n            '   <div class=\"btn-group\">' +\n            '     <button type=\"button\" data-command=\"insert\" data-value=\"cell\" data-option=\"left\" title=\"' + lang.controller.insertColumnBefore + '\"><div class=\"icon-insert-column-left\"></div></button>' +\n            '     <button type=\"button\" data-command=\"insert\" data-value=\"cell\" data-option=\"right\" title=\"' + lang.controller.insertColumnAfter + '\"><div class=\"icon-insert-column-right\"></div></button>' +\n            '     <button type=\"button\" data-command=\"delete\" data-value=\"cell\" title=\"' + lang.controller.deleteColumn + '\"><div class=\"icon-delete-column\"></div></button>' +\n            '     <button type=\"button\" data-command=\"remove\" title=\"' + lang.controller.remove + '\"><div class=\"icon-delete\"></div></button>' +\n            '   </div>' +\n            '</div>';\n\n        return tableResize;\n    },\n\n    appendTable: function () {\n        const oTable = util.createElement('TABLE');\n\n        let x = this.context.table._tableXY[0];\n        let y = this.context.table._tableXY[1];\n        let tableHTML = '<tbody>';\n\n        while (y > 0) {\n            tableHTML += '<tr>';\n            let tdCnt = x;\n            while (tdCnt > 0) {\n                tableHTML += '<td><div>' + util.zeroWidthSpace + '</div></td>';\n                --tdCnt;\n            }\n            tableHTML += '</tr>';\n            --y;\n        }\n        tableHTML += '</tbody>';\n\n        oTable.innerHTML = tableHTML;\n\n        const formatEl = util.getFormatElement(this.getSelectionNode());\n\n        this.insertNode(oTable, /^LI$/i.test(formatEl.nodeName) ? util.getRangeFormatElement(formatEl) : formatEl);\n        this.appendFormatTag(oTable);\n        this.focus();\n\n        this.plugins.table.reset_table_picker.call(this);\n    },\n\n    onMouseMove_tablePicker: function (e) {\n        e.stopPropagation();\n\n        let x = Math.ceil(e.offsetX / 18);\n        let y = Math.ceil(e.offsetY / 18);\n        x = x < 1 ? 1 : x;\n        y = y < 1 ? 1 : y;\n        this.context.table.tableHighlight.style.width = x + 'em';\n        this.context.table.tableHighlight.style.height = y + 'em';\n\n        let x_u = x < 5 ? 5 : (x > 9 ? 10 : x + 1);\n        let y_u = y < 5 ? 5 : (y > 9 ? 10 : y + 1);\n        this.context.table.tableUnHighlight.style.width = x_u + 'em';\n        this.context.table.tableUnHighlight.style.height = y_u + 'em';\n\n        util.changeTxt(this.context.table.tableDisplay, x + ' x ' + y);\n        this.context.table._tableXY = [x, y];\n    },\n\n    reset_table_picker: function () {\n        if (!this.context.table.tableHighlight) return;\n\n        const highlight = this.context.table.tableHighlight.style;\n        const unHighlight = this.context.table.tableUnHighlight.style;\n\n        highlight.width = '1em';\n        highlight.height = '1em';\n        unHighlight.width = '5em';\n        unHighlight.height = '5em';\n\n        util.changeTxt(this.context.table.tableDisplay, '1 x 1');\n        this.submenuOff();\n    },\n\n    init: function () {\n        const contextTable = this.context.table;\n        \n        if (contextTable._tdElement) util.removeClass(contextTable._tdElement, 'sun-editor-selected-cell');\n\n        contextTable._element = null;\n        contextTable._tdElement = null;\n        contextTable._trElement = null;\n        contextTable._trElements = 0;\n        contextTable._tdIndex = 0;\n        contextTable._trIndex = 0;\n        contextTable._trCnt = 0;\n        contextTable._tdCnt = 0;\n        contextTable._tableXY = [];\n    },\n\n    /** table edit controller */\n    call_controller_tableEdit: function (tdElement) {\n        this.plugins.table.init.call(this);\n        const contextTable = this.context.table;\n        const resizeDiv = contextTable.resizeDiv;\n        \n        this.plugins.table.setPositionControllerDiv.call(this, tdElement, false);\n        resizeDiv.style.display = 'block';\n\n        this.controllersOn(resizeDiv);\n    },\n\n    setPositionControllerDiv: function (tdElement, reset) {\n        const contextTable = this.context.table;\n        const resizeDiv = contextTable.resizeDiv;\n        let table = contextTable._element;\n\n        if (!table) {\n            table = tdElement;\n            while (!/^TABLE$/i.test(table.nodeName)) {\n                table = table.parentNode;\n            }\n            contextTable._element = table;\n        }\n\n        if (contextTable._tdElement !== tdElement) {\n            if (contextTable._tdElement) util.removeClass(contextTable._tdElement, 'sun-editor-selected-cell');\n            util.addClass(tdElement, 'sun-editor-selected-cell');\n            contextTable._tdElement = tdElement;\n            contextTable._trElement = tdElement.parentNode;\n        }\n\n        if (reset || contextTable._trCnt === 0) {\n            contextTable._trElements = table.rows;\n            contextTable._tdIndex = tdElement.cellIndex;\n            contextTable._trIndex = contextTable._trElement.rowIndex;\n            contextTable._trCnt = table.rows.length;\n            contextTable._tdCnt = contextTable._trElement.cells.length;\n        }\n\n        const offset = util.getOffset(tdElement);\n        resizeDiv.style.left = (offset.left - this.context.element.wysiwyg.scrollLeft) + 'px';\n        resizeDiv.style.top = (offset.top + tdElement.offsetHeight + 12) + 'px';\n    },\n\n    insertRowCell: function (type, option) {\n        const contextTable = this.context.table;\n\n        if (type === 'row') {\n            const rowIndex = option === 'up' ? contextTable._trIndex : contextTable._trIndex + 1;\n            let cells = '';\n\n            for (let i = 0, len = contextTable._tdCnt; i < len; i++) {\n                cells += '<td><div>' + util.zeroWidthSpace + '</div></td>';\n            }\n\n            const newRow = contextTable._element.insertRow(rowIndex);\n            newRow.innerHTML = cells;\n        }\n        // cell\n        else {\n            const trArray = contextTable._trElements;\n            const cellIndex = option === 'left' ? contextTable._tdIndex : contextTable._tdIndex + 1;\n            let cell = null;\n            \n            for (let i = 0, len = contextTable._trCnt; i < len; i++) {\n                cell = trArray[i].insertCell(cellIndex);\n                cell.innerHTML = '<div>' + util.zeroWidthSpace + '</div>';\n            }\n        }\n\n        this.plugins.table.setPositionControllerDiv.call(this, contextTable._tdElement, true);\n    },\n\n    deleteRowCell: function (type) {\n        const contextTable = this.context.table;\n\n        if (type === 'row') {\n            contextTable._element.deleteRow(contextTable._trIndex);\n        }\n        // cell\n        else {\n            const trArray = contextTable._trElements;\n            const cellIndex = contextTable._tdIndex;\n            \n            for (let i = 0, len = contextTable._trCnt; i < len; i++) {\n                trArray[i].deleteCell(cellIndex);\n            }\n        }\n\n        this.controllersOff();\n    },\n\n    onClick_resizeDiv: function (e) {\n        e.stopPropagation();\n        const target = e.target;\n\n        const command = target.getAttribute('data-command') || target.parentNode.getAttribute('data-command');\n        const value = target.getAttribute('data-value') || target.parentNode.getAttribute('data-value');\n        const option = target.getAttribute('data-option') || target.parentNode.getAttribute('data-option');\n        \n        if (!command) return;\n\n        e.preventDefault();\n        const contextTable = this.context.table;\n\n        switch (command) {\n            case 'insert':\n                this.plugins.table.insertRowCell.call(this, value, option);\n                break;\n            case 'delete':\n                this.plugins.table.deleteRowCell.call(this, value);\n                break;\n            case 'remove':\n            util.removeItem(contextTable._element);\n            this.controllersOff();\n            this.focus();\n        }\n\n    }\n};\n","/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport util from '../../lib/util';\n\nexport default {\n    name: 'resizing',\n    add: function (core) {\n        const context = core.context;\n        context.resizing = {\n            _resizeClientX: 0,\n            _resizeClientY: 0,\n            _resize_plugin: '',\n            _resize_w: 0,\n            _resize_h: 0,\n            _origin_w: 0,\n            _origin_h: 0,\n            _rotateVertical: false,\n            _resize_direction: ''\n        };\n\n        /** resize controller, button */\n        let resize_div_container = eval(this.setController_resize());\n        context.resizing.resizeContainer = resize_div_container;\n\n        context.resizing.resizeDiv = resize_div_container.getElementsByClassName('modal-resize')[0];\n        context.resizing.resizeDot = resize_div_container.getElementsByClassName('resize-dot')[0];\n        context.resizing.resizeDisplay = resize_div_container.getElementsByClassName('resize-display')[0];\n\n        let resize_button = eval(this.setController_button(core.lang));\n        context.resizing.resizeButton = resize_button;\n        resize_button.addEventListener('mousedown', function (e) { e.stopPropagation(); }, false);\n\n        let resize_handles = context.resizing.resizeHandles = resize_div_container.querySelectorAll('.sun-editor-name-resize-handle');\n        context.resizing.resizeButtonGroup = resize_button.getElementsByClassName('sun-editor-id-resize-button-group')[0];\n\n        /** add event listeners */\n        resize_handles[0].addEventListener('mousedown', this.onMouseDown_resize_handle.bind(core));\n        resize_handles[1].addEventListener('mousedown', this.onMouseDown_resize_handle.bind(core));\n        resize_handles[2].addEventListener('mousedown', this.onMouseDown_resize_handle.bind(core));\n        resize_handles[3].addEventListener('mousedown', this.onMouseDown_resize_handle.bind(core));\n        resize_handles[4].addEventListener('mousedown', this.onMouseDown_resize_handle.bind(core));\n        resize_handles[5].addEventListener('mousedown', this.onMouseDown_resize_handle.bind(core));\n        resize_handles[6].addEventListener('mousedown', this.onMouseDown_resize_handle.bind(core));\n        resize_handles[7].addEventListener('mousedown', this.onMouseDown_resize_handle.bind(core));\n        resize_button.addEventListener('click', this.onClick_resizeButton.bind(core));\n\n        /** append html */\n        context.element.relative.appendChild(resize_div_container);\n        context.element.relative.appendChild(resize_button);\n\n        /** empty memory */\n        resize_div_container = null, resize_button = null, resize_handles = null;\n    },\n\n    /** resize controller, button (image, iframe) */\n    setController_resize: function () {\n        const resize_container = util.createElement('DIV');\n        resize_container.className = 'modal-resize-container';\n        resize_container.style.display = 'none';\n        resize_container.innerHTML = '' +\n            '<div class=\"modal-resize\">' +\n            '   <div class=\"resize-display\"></div>' +\n            '</div>' +\n            '<div class=\"resize-dot\">' +\n            '   <div class=\"tl sun-editor-name-resize-handle\"></div>' +\n            '   <div class=\"tr sun-editor-name-resize-handle\"></div>' +\n            '   <div class=\"bl sun-editor-name-resize-handle\"></div>' +\n            '   <div class=\"br sun-editor-name-resize-handle\"></div>' +\n            '   <div class=\"lw sun-editor-name-resize-handle\"></div>' +\n            '   <div class=\"th sun-editor-name-resize-handle\"></div>' +\n            '   <div class=\"rw sun-editor-name-resize-handle\"></div>' +\n            '   <div class=\"bh sun-editor-name-resize-handle\"></div>' +\n            '</div>';\n\n        return resize_container;\n    },\n\n    setController_button: function (lang) {\n        const resize_button = util.createElement(\"DIV\");\n        resize_button.className = \"resize-btn\";\n        resize_button.style.display = \"none\";\n        resize_button.innerHTML = '' +\n            '<div class=\"arrow arrow-up\"></div>' +\n            '<div class=\"btn-group sun-editor-id-resize-button-group\">' +\n            '   <button type=\"button\" data-command=\"percent\" data-value=\"1\" title=\"' + lang.controller.resize100 + '\"><span class=\"note-fontsize-10\">100%</span></button>' +\n            '   <button type=\"button\" data-command=\"percent\" data-value=\"0.75\" title=\"' + lang.controller.resize75 + '\"><span class=\"note-fontsize-10\">75%</span></button>' +\n            '   <button type=\"button\" data-command=\"percent\" data-value=\"0.5\" title=\"' + lang.controller.resize50 + '\"><span class=\"note-fontsize-10\">50%</span></button>' +\n            '   <button type=\"button\" data-command=\"percent\" data-value=\"0.25\" title=\"' + lang.controller.resize25 + '\"><span class=\"note-fontsize-10\">25%</span></button>' +\n            '   <button type=\"button\" data-command=\"rotate\" data-value=\"-90\" title=\"' + lang.controller.rotateLeft + '\"><div class=\"icon-rotate-left\"></div></button>' +\n            '   <button type=\"button\" data-command=\"rotate\" data-value=\"90\" title=\"' + lang.controller.rotateRight + '\"><div class=\"icon-rotate-right\"></div></button>' +\n            '</div>' +\n            '<div class=\"btn-group\">' +\n            '   <button type=\"button\" data-command=\"mirror\" data-value=\"h\" title=\"' + lang.controller.mirrorHorizontal + '\"><div class=\"icon-mirror-horizontal\"></div></button>' +\n            '   <button type=\"button\" data-command=\"mirror\" data-value=\"v\" title=\"' + lang.controller.mirrorVertical + '\"><div class=\"icon-mirror-vertical\"></div></button>' +\n            '   <button type=\"button\" data-command=\"revert\" title=\"' + lang.dialogBox.revertButton + '\"><div class=\"icon-revert\"></div></button>' +\n            '   <button type=\"button\" data-command=\"update\" title=\"' + lang.controller.edit + '\"><div class=\"icon-modify\"></div></button>' +\n            '   <button type=\"button\" data-command=\"delete\" title=\"' + lang.controller.remove + '\"><div aria-hidden=\"true\" class=\"icon-delete\"></div></button>' +\n            '</div>';\n\n        return resize_button;\n    },\n\n    call_controller_resize: function (targetElement, plugin) {\n        const contextResizing = this.context.resizing;\n        contextResizing._resize_plugin = plugin;\n\n        const resizeContainer = contextResizing.resizeContainer;\n        const resizeDiv = contextResizing.resizeDiv;\n        const offset = util.getOffset(targetElement);\n\n        const isVertical = contextResizing._rotateVertical = /^(90|270)$/.test(Math.abs(targetElement.getAttribute('data-rotate')).toString());\n\n        const w = isVertical ? targetElement.offsetHeight : targetElement.offsetWidth;\n        const h = isVertical ? targetElement.offsetWidth : targetElement.offsetHeight;\n        const t = offset.top;\n        const l = offset.left - this.context.element.wysiwyg.scrollLeft;\n\n        resizeContainer.style.top = t + 'px';\n        resizeContainer.style.left = l + 'px';\n        resizeContainer.style.width = w + 'px';\n        resizeContainer.style.height = h + 'px';\n\n        resizeDiv.style.top = '0px';\n        resizeDiv.style.left = '0px';\n        resizeDiv.style.width =  w + 'px';\n        resizeDiv.style.height =  h + 'px';\n\n        let align = targetElement.getAttribute('data-align') || 'basic';\n        align = align === 'none' ? 'basic' : align;\n        util.changeTxt(contextResizing.resizeDisplay, this.lang.dialogBox[align] + ' (' + w + ' x ' + h + ')');\n\n        const resizeDisplay = this.context[plugin]._resizing ? 'flex' : 'none';\n        const resizeHandles = contextResizing.resizeHandles;\n\n        contextResizing.resizeButtonGroup.style.display = resizeDisplay;\n        for (let i = 0, len = resizeHandles.length; i < len; i++) {\n            resizeHandles[i].style.display = resizeDisplay;\n        }\n\n        this.controllersOn(contextResizing.resizeContainer, contextResizing.resizeButton);\n\n        // button group\n        const overLeft = this.context.element.relative.offsetWidth - l - contextResizing.resizeButton.offsetWidth;\n        contextResizing.resizeButton.style.top = (h + t + 60) + 'px';\n        contextResizing.resizeButton.style.left = (l + (overLeft < 0 ? overLeft : 0)) + 'px';\n\n        contextResizing._resize_w = w;\n        contextResizing._resize_h = h;\n\n        const originSize = (targetElement.getAttribute('origin-size') || '').split(',');\n        contextResizing._origin_w = originSize[0] || targetElement.naturalWidth;\n        contextResizing._origin_h = originSize[1] || targetElement.naturalHeight;\n\n        return {\n            w: w,\n            h: h,\n            t: t,\n            l: l\n        };\n    },\n\n    cancel_controller_resize: function () {\n        const isVertical = this.context.resizing._rotateVertical;\n        this.controllersOff();\n        this.context.element.resizeBackground.style.display = 'none';\n\n        const w = isVertical ? this.context.resizing._resize_h : this.context.resizing._resize_w;\n        const h = isVertical ? this.context.resizing._resize_w : this.context.resizing._resize_h;\n\n        this.plugins[this.context.resizing._resize_plugin].setSize.call(this, w, h, isVertical);\n        this.plugins.resizing.setTransformSize.call(this, this.context[this.context.resizing._resize_plugin]._element);\n        \n        this.plugins[this.context.resizing._resize_plugin].init.call(this);\n    },\n\n    create_caption: function () {\n        const caption = util.createElement('FIGCAPTION');\n        caption.setAttribute('contenteditable', true);\n        caption.innerHTML = '<p>' + this.lang.dialogBox.caption + '</p>';\n        return caption;\n    },\n\n    set_cover: function (element) {\n        const cover = util.createElement('FIGURE');\n        cover.className = 'sun-editor-figure-cover';\n        cover.appendChild(element);\n\n        return cover;\n    },\n\n    set_container: function (cover, className) {\n        const container = util.createElement('DIV');\n        container.className = 'sun-editor-id-comp ' + className;\n        container.setAttribute('contenteditable', false);\n        container.appendChild(cover);\n\n        return container;\n    },\n\n    onClick_resizeButton: function (e) {\n        e.stopPropagation();\n\n        const target = e.target;\n        const command = target.getAttribute('data-command') || target.parentNode.getAttribute('data-command');\n\n        if (!command) return;\n\n        const value = target.getAttribute('data-value') || target.parentNode.getAttribute('data-value');\n        const contextEl = this.context[this.context.resizing._resize_plugin]._element;\n        const contextPlugin = this.plugins[this.context.resizing._resize_plugin];\n\n        e.preventDefault();\n\n        if (/percent/.test(command)) {\n            this.plugins.resizing.resetTransform.call(this, contextEl);\n\n            contextPlugin.setPercentSize.call(this, (value * 100) + '%', 'auto');\n\n            const size = this.plugins.resizing.call_controller_resize.call(this, contextEl, this.context.resizing._resize_plugin);\n            contextPlugin.onModifyMode.call(this, contextEl, size);\n        }\n        else if (/mirror/.test(command)) {\n            const r = contextEl.getAttribute('data-rotate') || '0';\n            let x = contextEl.getAttribute('data-rotateX') || '';\n            let y = contextEl.getAttribute('data-rotateY') || '';\n\n            if ((value === 'h' && !this.context.resizing._rotateVertical) || (value === 'v' && this.context.resizing._rotateVertical)) {\n                y = y ? '' : '180';\n            } else {\n                x = x ? '' : '180';\n            }\n\n            contextEl.setAttribute('data-rotateX', x);\n            contextEl.setAttribute('data-rotateY', y);\n\n            this.plugins.resizing._setTransForm(contextEl, r, x, y);\n        }\n        else if (/rotate/.test(command)) {\n            const contextResizing = this.context.resizing;\n            const slope = (contextEl.getAttribute('data-rotate') * 1) + (value * 1);\n            const deg = Math.abs(slope) >= 360 ? 0 : slope;\n\n            contextEl.setAttribute('data-rotate', deg);\n            contextResizing._rotateVertical = /^(90|270)$/.test(Math.abs(deg).toString());\n\n            this.plugins.resizing.setTransformSize.call(this, contextEl);\n\n            const size = this.plugins.resizing.call_controller_resize.call(this, contextEl, contextResizing._resize_plugin);\n            contextPlugin.onModifyMode.call(this, contextEl, size);\n        }\n        else if (/revert/.test(command)) {\n            if (contextPlugin.setAutoSize) {\n                contextPlugin.setAutoSize.call(this);\n            } else {\n                contextPlugin.resetAlign.call(this);\n                this.plugins.resizing.resetTransform.call(this, contextEl);\n            }\n\n            const size = this.plugins.resizing.call_controller_resize.call(this, contextEl, this.context.resizing._resize_plugin);\n            contextPlugin.onModifyMode.call(this, contextEl, size);\n        }\n        else if (/update/.test(command)) {\n            contextPlugin.openModify.call(this);\n            this.controllersOff();\n        }\n        else if (/delete/.test(command)) {\n            contextPlugin.destroy.call(this);\n        }\n    },\n\n    resetTransform: function (element) {\n        const originSize = (element.getAttribute('data-origin') || '').split(',');\n        this.context.resizing._rotateVertical = false;\n\n        element.style.transform = '';\n        element.style.transformOrigin = '';\n        element.setAttribute('data-rotate', '');\n        element.setAttribute('data-rotateX', '');\n        element.setAttribute('data-rotateY', '');\n\n        element.style.width = (originSize[0] + 'px' || 'auto');\n        element.style.height = (originSize[1] + 'px' || '');\n        this.plugins.resizing.setTransformSize.call(this, element);\n    },\n\n    setTransformSize: function (element) {\n        const cover = util.getParentElement(element, '.sun-editor-figure-cover');\n\n        const isVertical = this.context.resizing._rotateVertical;\n        const deg = element.getAttribute('data-rotate') * 1;\n\n        const offsetW = element.offsetWidth;\n        const offsetH = element.offsetHeight;\n        const w = isVertical ? offsetH : offsetW;\n        const h = isVertical ? offsetW : offsetH;\n\n        this.plugins[this.context.resizing._resize_plugin].cancelPercentAttr.call(this);\n        this.plugins[this.context.resizing._resize_plugin].setSize.call(this, offsetW, offsetH);\n\n        cover.style.width = w + 'px';\n        cover.style.height = (this.context[this.context.resizing._resize_plugin]._caption ? '' : h + 'px');\n\n        let transOrigin = '';\n        if (isVertical) {\n            let transW = (offsetW/2) + 'px ' + (offsetW/2) + 'px 0';\n            let transH = (offsetH/2) + 'px ' + (offsetH/2) + 'px 0';\n            transOrigin = deg === 90 || deg === -270 ? transH : transW;\n        }\n\n        element.style.transformOrigin = transOrigin;\n\n        this.plugins.resizing._setTransForm(element, deg.toString(), element.getAttribute('data-rotateX') || '', element.getAttribute('data-rotateY') || '');\n        this.plugins.resizing._setCaptionPosition.call(this, element, util.getChildElement(util.getParentElement(element, '.sun-editor-figure-cover'), 'FIGCAPTION'));\n    },\n\n    _setTransForm: function (element, r, x, y) {\n        let width = (element.offsetWidth - element.offsetHeight) * (/-/.test(r) ? 1 : -1);\n        let translate = '';\n\n        if (/[1-9]/.test(r) && (x || y)) {\n            translate = x ? 'Y' : 'X';\n\n            switch (r) {\n                case '90':\n                    translate = x && y ? 'X' : y ? translate : '';\n                    break;\n                case '270':\n                    width *= -1;\n                    translate = x && y ? 'Y' : x ? translate : '';\n                    break;\n                case '-90':\n                    translate = x && y ? 'Y' : x ? translate : '';\n                    break;\n                case '-270':\n                    width *= -1;\n                    translate = x && y ? 'X' : y ? translate : '';\n                    break;\n                default:\n                    translate = '';\n            }\n        }\n        \n        element.style.transform = 'rotate(' + r + 'deg)' + (x ? ' rotateX(' + x + 'deg)' : '') + (y ? ' rotateY(' + y + 'deg)' : '') + (translate ? ' translate' + translate + '(' + width + 'px)' : '');\n    },\n\n    _setCaptionPosition: function (element, figcaption) {\n        if (figcaption) {\n            figcaption.style.marginTop = (this.context.resizing._rotateVertical ? element.offsetWidth - element.offsetHeight : 0) + 'px';\n        }\n    },\n\n    onMouseDown_resize_handle: function (e) {\n        const contextResizing = this.context.resizing;\n        const direction = contextResizing._resize_direction = e.target.classList[0];\n        e.stopPropagation();\n        e.preventDefault();\n\n        contextResizing._resizeClientX = e.clientX;\n        contextResizing._resizeClientY = e.clientY;\n        this.context.element.resizeBackground.style.display = 'block';\n        contextResizing.resizeButton.style.display = 'none';\n        contextResizing.resizeDiv.style.float = /l/.test(direction) ? 'right' : /r/.test(direction) ? 'left' : 'none';\n\n        const closureFunc_bind = function closureFunc() {\n            this.plugins.resizing.cancel_controller_resize.call(this);\n            document.removeEventListener('mousemove', resizing_element_bind);\n            document.removeEventListener('mouseup', closureFunc_bind);\n        }.bind(this);\n\n        const resizing_element_bind = this.plugins.resizing.resizing_element.bind(this, contextResizing, direction, this.context[contextResizing._resize_plugin]);\n\n        document.addEventListener('mousemove', resizing_element_bind);\n        document.addEventListener('mouseup', closureFunc_bind);\n    },\n\n    resizing_element: function (contextResizing, direction, plugin, e) {\n        const clientX = e.clientX;\n        const clientY = e.clientY;\n\n        let resultW = plugin._element_w;\n        let resultH = plugin._element_h;\n\n        const w = plugin._element_w + (/r/.test(direction) ? clientX - contextResizing._resizeClientX : contextResizing._resizeClientX - clientX);\n        const h = plugin._element_h + (/b/.test(direction) ? clientY - contextResizing._resizeClientY : contextResizing._resizeClientY - clientY);\n        const wh = ((plugin._element_h / plugin._element_w) * w);\n\n        if (/t/.test(direction)) contextResizing.resizeDiv.style.top = (plugin._element_h - (/h/.test(direction) ? h : wh)) + 'px';\n        if (/l/.test(direction)) contextResizing.resizeDiv.style.left = (plugin._element_w - w) + 'px';\n\n        if (/r|l/.test(direction)) {\n            contextResizing.resizeDiv.style.width = w + 'px';\n            resultW = w;\n        }\n\n        if (/^(t|b)[^h]$/.test(direction)) {\n            contextResizing.resizeDiv.style.height = wh + 'px';\n            resultH = wh;\n        }\n        else if (/^(t|b)h$/.test(direction)) {\n            contextResizing.resizeDiv.style.height = h + 'px';\n            resultH = h;\n        }\n\n        contextResizing._resize_w = resultW;\n        contextResizing._resize_h = resultH;\n        util.changeTxt(contextResizing.resizeDisplay, Math.round(resultW) + ' x ' + Math.round(resultH));\n    }\n};","/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\r\n'use strict';\r\n\r\nimport util from '../../lib/util';\r\nimport colorPicker from '../modules/colorPicker';\r\n\r\nexport default {\r\n    name: 'hiliteColor',\r\n    add: function (core, targetElement) {\r\n        core.addModule([colorPicker]);\r\n\r\n        const context = core.context;\r\n        context.hiliteColor = {\r\n            previewEl: null,\r\n            colorInput: null\r\n        };\r\n\r\n        /** set submenu */\r\n        let listDiv = eval(this.setSubmenu(context.colorPicker.colorListHTML));\r\n        context.hiliteColor.colorInput = listDiv.getElementsByClassName('sun-editor-id-submenu-color-input')[0];\r\n\r\n        /** add event listeners */\r\n        context.hiliteColor.colorInput.addEventListener('keyup', this.onChangeInput.bind(core));\r\n        listDiv.getElementsByClassName('sun-editor-id-submenu-color-submit')[0].addEventListener('click', this.submit.bind(core));\r\n        listDiv.getElementsByTagName('UL')[0].addEventListener('click', this.pickup.bind(core));\r\n\r\n        /** append html */\r\n        targetElement.parentNode.appendChild(listDiv);\r\n\r\n        /** empty memory */\r\n        listDiv = null;\r\n    },\r\n\r\n    setSubmenu: function (colorArea) {\r\n        const listDiv = util.createElement('DIV');\r\n\r\n        listDiv.className = 'sun-editor-submenu layer_editor';\r\n        listDiv.style.display = 'none';\r\n        listDiv.innerHTML = colorArea;\r\n\r\n        return listDiv;\r\n    },\r\n\r\n    on: function () {\r\n        const contextPicker = this.context.colorPicker;\r\n\r\n        contextPicker._colorInput = this.context.hiliteColor.colorInput;\r\n        contextPicker._defaultColor = '#FFFFFF';\r\n        contextPicker._styleProperty = 'backgroundColor';\r\n\r\n        this.plugins.colorPicker.init.call(this, this.getSelectionNode(), null);\r\n    },\r\n\r\n    onChangeInput: function (e) {\r\n        this.plugins.colorPicker.setCurrentColor.call(this, '#' + e.target.value);\r\n    },\r\n\r\n    submit: function () {\r\n        this.plugins.hiliteColor.applyColor.call(this, this.context.colorPicker._currentColor);\r\n    },\r\n\r\n    pickup: function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        if (!/^BUTTON$/i.test(e.target.tagName)) {\r\n            return false;\r\n        }\r\n\r\n        this.plugins.hiliteColor.applyColor.call(this, e.target.getAttribute('data-value'));\r\n    },\r\n\r\n    applyColor: function (color) {\r\n        const newNode = util.createElement('SPAN');\r\n        newNode.style.backgroundColor = color;\r\n\r\n        this.nodeChange(newNode, ['background-color']);\r\n        \r\n        this.submenuOff();\r\n        this.focus();\r\n    }\r\n};\r\n","/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport util from '../../lib/util';\n\nexport default {\n    name: 'notice',\n    add: function (core) {\n        const context = core.context;\n        context.notice = {};\n\n        /** dialog */\n        let notice_div = util.createElement('DIV');\n        let notice_span = util.createElement('SPAN');\n        let notice_button = util.createElement('BUTTON');\n\n        notice_div.className = 'sun-editor-id-notice';\n        notice_button.className = 'close';\n        notice_button.setAttribute('aria-label', 'Close');\n        notice_button.setAttribute('title', core.lang.dialogBox.close);\n        notice_button.innerHTML = '<div aria-hidden=\"true\" data-command=\"close\" class=\"icon-cancel\"></div>';\n        \n        notice_div.appendChild(notice_span);\n        notice_div.appendChild(notice_button);\n\n        context.notice.modal = notice_div;\n        context.notice.message = notice_span;\n\n        /** add event listeners */\n        notice_button.addEventListener('click', this.onClick_cancel.bind(core));\n        \n        /** append html */\n        context.element.editorArea.insertBefore(notice_div, context.element.wysiwyg);\n        \n        /** empty memory */\n        notice_div = null;\n    },\n\n    onClick_cancel: function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.plugins.notice.close.call(this);\n    },\n\n    open: function (text)  {\n        this.context.notice.message.textContent = text;\n        this.context.notice.modal.style.display = 'block';\n    },\n\n    close: function () {\n        this.context.notice.modal.style.display = 'none';\n    }\n};\n","/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport util from '../../lib/util';\nimport dialog from '../modules/dialog';\nimport resizing from '../modules/resizing';\n\nexport default {\n    name: 'video',\n    add: function (core) {\n        core.addModule([dialog, resizing]);\n\n        const context = core.context;\n        context.video = {\n            _container: null,\n            _cover: null,\n            _element: null,\n            _resizingDiv: null,\n            _element_w: context.option.videoWidth,\n            _element_h: context.option.videoHeight,\n            _element_l: 0,\n            _element_t: 0,\n            _origin_w: context.option.videoWidth,\n            _origin_h: context.option.videoHeight,\n            _caption: null,\n            captionCheckEl: null,\n            _captionChecked: false,\n            _proportionChecked: true,\n            _align: 'none',\n            _floatClassRegExp: 'float\\\\-[a-z]+',\n            _resizing: context.option.videoResizing\n        };\n\n        /** video dialog */\n        let video_dialog = eval(this.setDialog(core.context.option, core.lang));\n        context.video.modal = video_dialog;\n        context.video.focusElement = video_dialog.getElementsByClassName('sun-editor-id-video-url')[0];\n        context.video.captionCheckEl = video_dialog.getElementsByClassName('suneditor-id-video-check-caption')[0];\n\n        /** add event listeners */\n        video_dialog.getElementsByClassName('btn-primary')[0].addEventListener('click', this.submit.bind(core));\n\n        context.video.videoWidth = {};\n        context.video.videoHeight = {};\n\n        if (context.option.videoResizing) {\n            context.video.videoWidth = video_dialog.getElementsByClassName('sun-editor-id-video-x')[0];\n            context.video.videoHeight = video_dialog.getElementsByClassName('sun-editor-id-video-y')[0];\n            context.video.proportion = video_dialog.getElementsByClassName('suneditor-id-video-check-proportion')[0];\n\n            context.video.videoWidth.value = context.option.videoWidth;\n            context.video.videoHeight.value = context.option.videoHeight;\n\n            context.video.videoWidth.addEventListener('change', this.setInputSize.bind(core, 'x'));\n            context.video.videoHeight.addEventListener('change', this.setInputSize.bind(core, 'y'));\n            video_dialog.getElementsByClassName('sun-editor-id-video-revert-button')[0].addEventListener('click', this.sizeRevert.bind(core));\n        }\n\n        /** append html */\n        context.dialog.modal.appendChild(video_dialog);\n\n        /** empty memory */\n        video_dialog = null;\n    },\n\n    /** dialog */\n    setDialog: function (option, lang) {\n        const dialog = util.createElement('DIV');\n\n        dialog.className = 'modal-content sun-editor-id-dialog-video';\n        dialog.style.display = 'none';\n        let html = '' +\n            '<form class=\"editor_video\">' +\n            '   <div class=\"modal-header\">' +\n            '       <button type=\"button\" data-command=\"close\" class=\"close\" aria-label=\"Close\" title=\"' + lang.dialogBox.close + '\">' +\n            '           <div aria-hidden=\"true\" data-command=\"close\" class=\"icon-cancel\"></div>' +\n            '       </button>' +\n            '       <h5 class=\"modal-title\">' + lang.dialogBox.videoBox.title + '</h5>' +\n            '   </div>' +\n            '   <div class=\"modal-body\">' +\n            '       <div class=\"form-group\">' +\n            '           <label>' + lang.dialogBox.videoBox.url + '</label>' +\n            '           <input class=\"form-control sun-editor-id-video-url\" type=\"text\" />' +\n            '       </div>';\n\n            if (option.videoResizing) {\n                html += '' +\n                '   <div class=\"form-group\">' +\n                '       <div class=\"size-text\"><label class=\"size-w\">' + lang.dialogBox.width + '</label><label class=\"size-x\">&nbsp;</label><label class=\"size-h\">' + lang.dialogBox.height + '</label></div>' +\n                '       <input type=\"number\" class=\"form-size-control sun-editor-id-video-x\" /><label class=\"size-x\">x</label><input type=\"number\" class=\"form-size-control sun-editor-id-video-y\" />' +\n                '       <label><input type=\"checkbox\" class=\"suneditor-id-video-check-proportion\" style=\"margin-left: 20px;\" checked/>&nbsp;' + lang.dialogBox.proportion + '</label>' +\n                '       <button type=\"button\" title=\"' + lang.dialogBox.revertButton + '\" class=\"btn_editor sun-editor-id-video-revert-button\" style=\"float: right;\"><div class=\"icon-revert\"></div></button>' +\n                '   </div>';\n            }\n\n            html += '' +\n            '       <div class=\"form-group-footer\">' +\n            '           <label><input type=\"checkbox\" class=\"suneditor-id-video-check-caption\" />&nbsp;' + lang.dialogBox.caption + '</label>' +\n            '       </div>' +\n            '   </div>' +\n            '   <div class=\"modal-footer\">' +\n            '       <div style=\"float: left;\">' +\n            '           <label><input type=\"radio\" name=\"suneditor_video_radio\" class=\"modal-radio\" value=\"none\" checked>' + lang.dialogBox.basic + '</label>' +\n            '           <label><input type=\"radio\" name=\"suneditor_video_radio\" class=\"modal-radio\" value=\"left\">' + lang.dialogBox.left + '</label>' +\n            '           <label><input type=\"radio\" name=\"suneditor_video_radio\" class=\"modal-radio\" value=\"center\">' + lang.dialogBox.center + '</label>' +\n            '           <label><input type=\"radio\" name=\"suneditor_video_radio\" class=\"modal-radio\" value=\"right\">' + lang.dialogBox.right + '</label>' +\n            '       </div>' +\n            '       <button type=\"submit\" class=\"btn btn-primary sun-editor-id-submit-video\" title=\"' + lang.dialogBox.submitButton + '\"><span>' + lang.dialogBox.submitButton + '</span></button>' +\n            '   </div>' +\n            '</form>';\n\n        dialog.innerHTML = html;\n\n        return dialog;\n    },\n\n    setInputSize: function (xy) {\n        if (this.context.video.proportion.checked) {\n            if (xy === 'x') {\n                this.context.video.videoHeight.value = Math.round((this.context.video._element_h / this.context.video._element_w) * this.context.video.videoWidth.value);\n            } else {\n                this.context.video.videoWidth.value = Math.round((this.context.video._element_w / this.context.video._element_h) * this.context.video.videoHeight.value);\n            }\n        }\n    },\n\n    submit: function (e) {\n        this.showLoading();\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.context.video._captionChecked = this.context.video.captionCheckEl.checked;\n\n        const submitAction = function () {\n            if (this.context.video.focusElement.value.trim().length === 0) return false;\n\n            const contextVideo = this.context.video;\n            const w = (/^\\d+$/.test(contextVideo.videoWidth.value) ? contextVideo.videoWidth.value : this.context.option.videoWidth);\n            const h = (/^\\d+$/.test(contextVideo.videoHeight.value) ? contextVideo.videoHeight.value : this.context.option.videoHeight);\n            let resizingDiv = null;\n            let oIframe = null;\n            let cover = null;\n            let container = null;\n            let url = contextVideo.focusElement.value.trim();\n            contextVideo._align = contextVideo.modal.querySelector('input[name=\"suneditor_video_radio\"]:checked').value;\n\n            /** iframe source */\n            if (/^<iframe.*\\/iframe>$/.test(url)) {\n                oIframe = (new DOMParser()).parseFromString(url, 'text/html').getElementsByTagName('iframe')[0];\n            }\n            /** url */\n            else {\n                oIframe = util.createElement('IFRAME');\n                /** youtube */\n                if (/youtu\\.?be/.test(url)) {\n                    url = url.replace('watch?v=', '');\n                    if (!/^\\/\\/.+\\/embed\\//.test(url)) {\n                        url = url.replace(url.match(/\\/\\/.+\\//)[0], '//www.youtube.com/embed/');\n                    }\n                }\n                oIframe.src = url;\n            }\n\n            /** update */\n            if (this.context.dialog.updateModal) {\n                contextVideo._element.src = oIframe.src;\n                container = contextVideo._container;\n                cover = util.getParentElement(contextVideo._element, '.sun-editor-figure-cover');\n                oIframe = contextVideo._element;\n                resizingDiv = contextVideo._resizingDiv;\n            }\n            /** create */\n            else {\n                oIframe.frameBorder = '0';\n                oIframe.allowFullscreen = true;\n                oIframe.contentDocument;\n                oIframe.onload = function () {\n                    this.setAttribute('origin-size', this.offsetWidth + ',' + this.offsetHeight);\n                    this.setAttribute('data-origin', this.offsetWidth + ',' + this.offsetHeight);\n                    this.style.height = this.offsetHeight + 'px';\n                }.bind(oIframe);\n                contextVideo._element = oIframe;\n\n                /** cover */\n                cover = this.plugins.resizing.set_cover.call(this, oIframe);\n\n                /** resizingDiv */\n                contextVideo._resizingDiv = resizingDiv = util.createElement('DIV');\n                resizingDiv.className = 'sun-editor-id-iframe-inner-resizing-cover';\n                cover.appendChild(resizingDiv);\n\n                /** container */\n                container = this.plugins.resizing.set_container.call(this, cover, 'sun-editor-id-iframe-container');\n            }\n\n            const changeSize = w * 1 !== oIframe.offsetWidth || h * 1 !== oIframe.offsetHeight;\n\n            if (contextVideo._resizing) {\n                this.context.video._proportionChecked = contextVideo.proportion.checked;\n                oIframe.setAttribute('data-proportion', contextVideo._proportionChecked);\n            }\n\n            // caption\n            if (contextVideo._captionChecked) {\n                if (!contextVideo._caption) {\n                    contextVideo._caption = this.plugins.resizing.create_caption.call(this);\n                    cover.appendChild(contextVideo._caption);\n                }\n            } else {\n                if (contextVideo._caption) {\n                    util.removeItem(contextVideo._caption);\n                    contextVideo._caption = null;\n                }\n            }\n\n            // size\n            if (changeSize) {\n                this.plugins.video.setSize.call(this, w, h);\n            }\n\n            // align\n            if (contextVideo._align && 'none' !== contextVideo._align) {\n                cover.style.margin = 'auto';\n            } else {\n                cover.style.margin = '0';\n            }\n            \n            util.removeClass(container, this.context.video._floatClassRegExp);\n            util.addClass(container, 'float-' + contextVideo._align);\n            oIframe.setAttribute('data-align', contextVideo._align);\n\n            if (!this.context.dialog.updateModal) {\n                this.insertNode(container, util.getFormatElement(this.getSelectionNode()));\n                this.appendFormatTag(container);\n            } else if((contextVideo._resizing && changeSize) || (this.context.resizing._rotateVertical && contextVideo._captionChecked)) {\n                this.plugins.resizing.setTransformSize.call(this, oIframe);\n            }\n\n        }.bind(this);\n\n        try {\n            submitAction();\n        } finally {\n            this.plugins.dialog.close.call(this);\n            this.closeLoading();\n        }\n\n        this.focus();\n\n        return false;\n    },\n\n    sizeRevert: function () {\n        const contextVideo = this.context.video;\n        if (contextVideo._origin_w) {\n            contextVideo.videoWidth.value = contextVideo._element_w = contextVideo._origin_w;\n            contextVideo.videoHeight.value = contextVideo._element_h = contextVideo._origin_h;\n        }\n    },\n\n    onModifyMode: function (element, size) {\n        const contextVideo = this.context.video;\n        contextVideo._element = element;\n        contextVideo._cover = util.getParentElement(element, '.sun-editor-figure-cover');\n        contextVideo._container = util.getParentElement(element, '.sun-editor-id-iframe-container');\n        contextVideo._caption = util.getChildElement(contextVideo._cover, 'FIGCAPTION');\n        contextVideo._resizingDiv = util.getChildElement(contextVideo._cover, '.sun-editor-id-iframe-inner-resizing-cover');\n\n        contextVideo._align = element.getAttribute('data-align') || 'none';\n\n        contextVideo._element_w = size.w;\n        contextVideo._element_h = size.h;\n        contextVideo._element_t = size.t;\n        contextVideo._element_l = size.l;\n\n        let origin = contextVideo._element.getAttribute('data-origin');\n        if (origin) {\n            origin = origin.split(',');\n            contextVideo._origin_w = origin[0] * 1;\n            contextVideo._origin_h = origin[1] * 1;\n        } else {\n            contextVideo._origin_w = size.w;\n            contextVideo._origin_h = size.h;\n            contextVideo._element.setAttribute('data-origin', size.w + ',' + size.h);\n        }\n    },\n\n    openModify: function () {\n        const contextVideo = this.context.video;\n\n        contextVideo.focusElement.value = contextVideo._element.src;\n        contextVideo.videoWidth.value = contextVideo._element.offsetWidth;\n        contextVideo.videoHeight.value = contextVideo._element.offsetHeight;\n        contextVideo._captionChecked = contextVideo.captionCheckEl.checked = !!contextVideo._caption;\n        contextVideo.modal.querySelector('input[name=\"suneditor_video_radio\"][value=\"' + contextVideo._align + '\"]').checked = true;\n\n        if (contextVideo._resizing) {\n            contextVideo.proportion.checked = contextVideo._proportionChecked = contextVideo._element.getAttribute('data-proportion') === 'true';\n            contextVideo.proportion.disabled = false;\n        }\n\n        this.plugins.dialog.open.call(this, 'video', true);\n    },\n\n    setSize: function (w, h, isVertical) {\n        const contextVideo = this.context.video;\n        contextVideo._element.style.width = w + 'px';\n        contextVideo._element.style.height = h + 'px';\n        contextVideo._resizingDiv.style.height = (isVertical ? w : h) + 'px';\n    },\n\n    setPercentSize: function (w) {\n        const contextVideo = this.context.video;\n\n        contextVideo._container.style.width = w;\n        contextVideo._container.style.height = '';\n        contextVideo._cover.style.width = '100%';\n        contextVideo._cover.style.height = '';\n        contextVideo._element.style.width = '100%';\n        contextVideo._element.style.height = contextVideo._resizingDiv.style.height = ((contextVideo._origin_h / contextVideo._origin_w) * contextVideo._element.offsetWidth) + 'px';\n\n        if (/100/.test(w)) {\n            util.removeClass(contextVideo._container, this.context.video._floatClassRegExp);\n            util.addClass(contextVideo._container, 'float-center');\n        }\n    },\n\n    cancelPercentAttr: function () {\n        const contextVideo = this.context.video;\n        \n        contextVideo._cover.style.width = '';\n        contextVideo._cover.style.height = '';\n        contextVideo._container.style.width = '';\n        contextVideo._container.style.height = '';\n\n        util.removeClass(contextVideo._container, this.context.video._floatClassRegExp);\n        util.addClass(contextVideo._container, 'float-' + contextVideo._align);\n    },\n\n    resetAlign: function () {\n        const contextVideo = this.context.video;\n\n        contextVideo._element.setAttribute('data-align', '');\n        contextVideo._align = 'none';\n        contextVideo._cover.style.margin = '0';\n        util.removeClass(contextVideo._container, contextVideo._floatClassRegExp);\n    },\n\n    destroy: function () {\n        util.removeItem(this.context.video._container);\n        this.plugins.video.init.call(this);\n        this.controllersOff();\n    },\n\n    init: function () {\n        const contextVideo = this.context.video;\n        contextVideo.focusElement.value = '';\n        contextVideo.captionCheckEl.checked = false;\n        contextVideo.modal.querySelector('input[name=\"suneditor_video_radio\"][value=\"none\"]').checked = true;\n        \n        if (contextVideo._resizing) {\n            contextVideo.videoWidth.value = this.context.option.videoWidth;\n            contextVideo.videoHeight.value = this.context.option.videoHeight;\n            contextVideo.proportion.checked = true;\n            contextVideo.proportion.disabled = true;\n        }\n    }\n};\n","/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport util from '../../lib/util';\n\nexport default {\n    name: 'dialog',\n    add: function (core) {\n        const context = core.context;\n        context.dialog = {};\n\n        /** dialog */\n        let dialog_div = util.createElement('DIV');\n        dialog_div.className = 'sun-editor-id-dialogBox sun-editor-common';\n\n        let dialog_back = util.createElement('DIV');\n        dialog_back.className = 'modal-dialog-background sun-editor-id-dialog-back';\n        dialog_back.style.display = 'none';\n\n        let dialog_area = util.createElement('DIV');\n        dialog_area.className = 'modal-dialog sun-editor-id-dialog-modal';\n        dialog_area.style.display = 'none';\n\n        dialog_div.appendChild(dialog_back);\n        dialog_div.appendChild(dialog_area);\n\n        context.dialog.modalArea = dialog_div;\n        context.dialog.back = dialog_back;\n        context.dialog.modal = dialog_area;\n\n        /** add event listeners */\n        context.dialog.modal.addEventListener('click', this.onClick_dialog.bind(core));\n        \n        /** append html */\n        context.element.relative.appendChild(dialog_div);\n        \n        /** empty memory */\n        dialog_div = null, dialog_back = null, dialog_area = null;\n    },\n\n    onClick_dialog: function (e) {\n        e.stopPropagation();\n\n        if (/modal-dialog/.test(e.target.className) || /close/.test(e.target.getAttribute('data-command'))) {\n            this.plugins.dialog.close.call(this);\n        }\n    },\n\n    open: function (kind, update)  {\n        if (this.modalForm) return false;\n\n        this.context.dialog.updateModal = update;\n\n        if (this.context.option.popupDisplay === 'full') {\n            this.context.dialog.modalArea.style.position = 'fixed';\n        } else {\n            this.context.dialog.modalArea.style.position = 'absolute';\n        }\n\n        this.context.dialog.kind = kind;\n        this.modalForm = this.context[kind].modal;\n        const focusElement = this.context[kind].focusElement;\n\n        this.context.dialog.modalArea.style.display = 'block';\n        this.context.dialog.back.style.display = 'block';\n        this.context.dialog.modal.style.display = 'block';\n        this.modalForm.style.display = 'block';\n\n        if (focusElement) focusElement.focus();\n    },\n\n    close: function () {\n        this.modalForm.style.display = 'none';\n        this.context.dialog.back.style.display = 'none';\n        this.context.dialog.modalArea.style.display = 'none';\n        this.modalForm = null;\n        this.context.dialog.updateModal = false;\n        this.plugins[this.context.dialog.kind].init.call(this);\n    }\n};\n","/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2018 JiHong Lee.\r\n * MIT license.\r\n */\r\n'use strict';\r\n\r\nimport util from '../../lib/util';\r\n\r\nexport default {\r\n    name: 'colorPicker',\r\n    add: function (core) {\r\n        const context = core.context;\r\n        context.colorPicker = {\r\n            colorListHTML: '',\r\n            _colorInput: '',\r\n            _defaultColor: '#000',\r\n            _styleProperty: 'color',\r\n            _currentColor: ''\r\n        };\r\n\r\n        /** set submenu */\r\n        let listDiv = this.createColorList(core.context.option, core.lang);\r\n\r\n        /** caching */\r\n        context.colorPicker.colorListHTML = listDiv;\r\n\r\n        /** empty memory */\r\n        listDiv = null;\r\n    },\r\n\r\n    createColorList: function (option, lang) {\r\n        const colorList = !option.colorList ?\r\n            [\r\n                '#ff0000', '#ff5e00', '#ffe400', '#abf200', '#00d8ff', '#0055ff', '#6600ff', '#ff00dd', '#000000', '#ffd8d8', '#fae0d4', '#faf4c0', '#e4f7ba', '#d4f4fa', '#d9e5ff', '#e8d9ff', '#ffd9fa',\r\n                '#ffffff', '#ffa7a7', '#ffc19e', '#faed7d', '#cef279', '#b2ebf4', '#b2ccff', '#d1b2ff', '#ffb2f5', '#bdbdbd', '#f15f5f', '#f29661', '#e5d85c', '#bce55c', '#5cd1e5', '#6699ff', '#a366ff', '#f261df', '#8c8c8c',\r\n                '#980000', '#993800', '#998a00', '#6b9900', '#008299', '#003399', '#3d0099', '#990085', '#353535', '#670000', '#662500', '#665c00', '#476600', '#005766', '#002266', '#290066', '#660058', '#222222'\r\n            ] : option.colorList;\r\n\r\n        let list = '<div class=\"inner_layer\">' +\r\n            '<div class=\"pallet_color_selector\">' +\r\n            '   <ul class=\"list_color\">';\r\n        for (let i = 0, len = colorList.length; i < len; i++) {\r\n            const color = colorList[i];\r\n            list += '<li>' +\r\n                    '   <button type=\"button\" data-value=\"' + color + '\" title=\"' + color + '\" style=\"background-color:' + color + ';\"></button>' +\r\n                    '</li>';\r\n        }\r\n        list += '</ul>' +\r\n            '</div>' +\r\n            '<form class=\"sub-form-group\">' +\r\n            '   <label>#</label>' +\r\n            '   <input type=\"text\" maxlength=\"6\" class=\"sun-editor-id-submenu-color-input\" />' +\r\n            '   <button type=\"submit\" data-command=\"100\" class=\"sun-editor-id-submenu-color-submit\" title=\"' + lang.dialogBox.submitButton + '\"><span>' + lang.dialogBox.submitButton + '</span></button>' +\r\n            '</form>' +\r\n            '</div>';\r\n\r\n        return list;\r\n    },\r\n    \r\n    init: function (node, color) {\r\n        const colorPicker = this.plugins.colorPicker;\r\n        let fillColor = color ? color : colorPicker.getColorInNode.call(this, node) || this.context.colorPicker._defaultColor;\r\n        fillColor = colorPicker.isHexColor(fillColor) ? fillColor : colorPicker.rgb2hex(fillColor);\r\n\r\n        colorPicker.setInputText.call(this, fillColor);\r\n    },\r\n\r\n    setCurrentColor: function (hexColorStr) {\r\n        this.context.colorPicker._currentColor = hexColorStr;\r\n        this.context.colorPicker._colorInput.style.borderColor = hexColorStr;\r\n    },\r\n\r\n    setInputText: function (hexColorStr) {\r\n        this.context.colorPicker._colorInput.value = hexColorStr.replace('#', '');\r\n        this.plugins.colorPicker.setCurrentColor.call(this, hexColorStr);\r\n    },\r\n\r\n    getColorInNode: function (node) {\r\n        let findedColor = '';\r\n        const styleProperty = this.context.colorPicker._styleProperty;\r\n\r\n        while (!util.isWysiwygDiv(node) && findedColor.length === 0) {\r\n            if (node.nodeType === 1 && node.style[styleProperty]) findedColor = node.style[styleProperty];\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return findedColor;\r\n    },\r\n\r\n    /**\r\n     * @description Function to check hex format color\r\n     * @param {String} str\r\n     */\r\n    isHexColor: function (str) {\r\n        return /^#[0-9a-f]{3}(?:[0-9a-f]{3})?$/i.test(str);\r\n    },\r\n\r\n    /**\r\n     * @description Function to convert hex format to a rgb color\r\n     * @param {String} rgb - RGB color format\r\n     * @returns {String}\r\n     */\r\n    rgb2hex: function (rgb) {\r\n        rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\r\n\r\n        return (rgb && rgb.length === 4) ? \"#\" +\r\n            (\"0\" + parseInt(rgb[1],10).toString(16)).slice(-2) +\r\n            (\"0\" + parseInt(rgb[2],10).toString(16)).slice(-2) +\r\n            (\"0\" + parseInt(rgb[3],10).toString(16)).slice(-2) : '';\r\n    }\r\n};","/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport util from '../../lib/util';\n\nexport default {\n    name: 'list',\n    add: function (core, targetElement) {\n        /** set submenu */\n        let listDiv = eval(this.setSubmenu(core.lang));\n\n        /** add event listeners */\n        listDiv.getElementsByTagName('UL')[0].addEventListener('click', this.pickup.bind(core));\n\n        /** append html */\n        targetElement.parentNode.appendChild(listDiv);\n\n        /** empty memory */\n        listDiv = null;\n    },\n\n    setSubmenu: function (lang) {\n        const listDiv = util.createElement('DIV');\n\n        listDiv.className = 'sun-editor-submenu layer_editor layer_list';\n        listDiv.style.display = 'none';\n        listDiv.innerHTML = '' +\n            '<div class=\"inner_layer\">' +\n            '   <ul class=\"list_editor\">' +\n            '       <li><button type=\"button\" class=\"btn_edit\" data-command=\"insertOrderedList\" data-value=\"OL\" title=\"' + lang.toolbar.orderList + '\"><div class=\"icon-list-number\"></div></button></li>' +\n            '       <li><button type=\"button\" class=\"btn_edit\" data-command=\"insertUnorderedList\" data-value=\"UL\" title=\"' + lang.toolbar.unorderList + '\"><div class=\"icon-list-bullets\"></div></button></li>' +\n            '   </ul>' +\n            '</div>';\n\n        return listDiv;\n    },\n\n    pickup: function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        let target = e.target;\n        let command = '';\n        let value = '';\n\n        while (!command && !/^UL$/i.test(target.tagName)) {\n            command = target.getAttribute('data-command');\n            value = target.getAttribute('data-value');\n            target = target.parentNode;\n        }\n\n        const formatElement = util.getFormatElement(this.getSelectionNode());\n\n        if (/^LI$/i.test(formatElement.tagName)) {\n            const cancel = formatElement.parentNode.tagName === value;\n            this.execCommand(command, false, null);\n            if (cancel) this.execCommand('formatBlock', false, 'DIV');\n        } else {\n            let rightNode = formatElement.nextSibling;\n            let pNode = formatElement.parentNode;\n\n            const list = util.createElement(value);\n            const formatElementList = this.getSelectedFormatElements();\n            \n            for (let i = 0, len = formatElementList.length, fTag = null; i < len; i++) {\n                fTag = formatElementList[i];\n\n                if (i === len - 1) {\n                    rightNode = fTag.nextSibling;\n                    pNode = fTag.parentNode;\n                }\n\n                list.innerHTML += '<li>' + fTag.innerHTML + '</li>';\n                util.removeItem(fTag);\n            }\n\n            pNode.insertBefore(list, rightNode);\n        }\n\n        this.submenuOff();\n        this.focus();\n    }\n};\n","/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport util from '../../lib/util';\n\nexport default {\n    name: 'fontSize',\n    add: function (core, targetElement) {\n        /** set submenu */\n        let listDiv = eval(this.setSubmenu(core.context.option));\n\n        /** add event listeners */\n        listDiv.getElementsByTagName('UL')[0].addEventListener('click', this.pickup.bind(core));\n\n        /** append html */\n        targetElement.parentNode.appendChild(listDiv);\n\n        /** empty memory */\n        listDiv = null;\n    },\n\n    setSubmenu: function (option) {\n        const listDiv = util.createElement('DIV');\n        listDiv.className = 'sun-editor-submenu layer_editor layer_size';\n        listDiv.style.display = 'none';\n\n        const sizeList = !option.fontSize ? [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72] : option.fontSize;\n\n        let list = '<div class=\"inner_layer\">' +\n            '   <ul class=\"list_editor font_size_list\">';\n        for (let i = 0, len = sizeList.length; i < len; i++) {\n            const size = sizeList[i];\n            list += '<li><button type=\"button\" class=\"btn_edit\" data-value=\"' + size + '\" title=\"' + size + '\" style=\"font-size:' + size + 'px;\">' + size + '</button></li>';\n        }\n        list += '   </ul>' +\n            '</div>';\n\n        listDiv.innerHTML = list;\n\n        return listDiv;\n    },\n\n    pickup: function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!/^BUTTON$/i.test(e.target.tagName)) {\n            return false;\n        }\n\n        util.changeTxt(this.context.tool.fontSize, e.target.getAttribute('data-value'));\n        const newNode = util.createElement('SPAN');\n        newNode.style.fontSize = e.target.getAttribute('data-value') + 'px';\n        this.nodeChange(newNode, ['font-size']);\n\n        this.submenuOff();\n        this.focus();\n    }\n};\n","/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport util from '../../lib/util';\n\nexport default {\n    name: 'formatBlock',\n    add: function (core, targetElement) {\n        /** set submenu */\n        let listDiv = eval(this.setSubmenu(core.lang));\n\n        /** add event listeners */\n        listDiv.getElementsByTagName('UL')[0].addEventListener('click', this.pickUp.bind(core));\n\n        /** append html */\n        targetElement.parentNode.appendChild(listDiv);\n\n        /** empty memory */\n        listDiv = null;\n    },\n\n    setSubmenu: function (lang) {\n        const listDiv = util.createElement('DIV');\n\n        listDiv.className = 'sun-editor-submenu layer_editor layer_block';\n        listDiv.style.display = 'none';\n        listDiv.innerHTML = '' +\n            '<div class=\"inner_layer\">' +\n            '   <ul class=\"list_editor format_list\">' +\n            '       <li><button type=\"button\" class=\"btn_edit\" data-command=\"replace\" data-value=\"P\" title=\"' + lang.toolbar.tag_p + '\"><p style=\"font-size:13px; height:22px; line-height:1.5;\">' + lang.toolbar.tag_p + '</p></button></li>' +\n            '       <li><button type=\"button\" class=\"btn_edit\" data-command=\"replace\" data-value=\"DIV\" title=\"' + lang.toolbar.tag_div + '\"><div style=\"font-size:13px; height:22px; line-height:1.5;\">' + lang.toolbar.tag_div + '</div></button></li>' +\n            '       <li><button type=\"button\" class=\"btn_edit\" data-command=\"range\" data-value=\"BLOCKQUOTE\" title=\"' + lang.toolbar.tag_quote + '\">' +\n            '               <blockquote style=\"font-size:13px; height:22px; line-height:1.5; border-style:solid; border-color:#8baab7; padding-left:20px; border-left-width:5px;\">' + lang.toolbar.tag_quote + '</blockquote>' +\n            '           </button>' +\n            '       </li>' +\n            '       <li><button type=\"button\" class=\"btn_edit\" data-command=\"range\" data-value=\"PRE\" title=\"' + lang.toolbar.pre + '\">' +\n            '               <pre style=\"font-size:13px; padding:8px; background-color:#f6f8fa; border:1px solid #dce5e5; border-radius:3px;\">' + lang.toolbar.pre + '</pre>' +\n            '           </button>' +\n            '       </li>' +\n            '       <li><button type=\"button\" class=\"btn_edit\" data-command=\"replace\" data-value=\"H1\" title=\"' + lang.toolbar.tag_h + ' 1\" style=\"height:40px;\"><h1>' + lang.toolbar.tag_h + ' 1</h1></button></li>' +\n            '       <li><button type=\"button\" class=\"btn_edit\" data-command=\"replace\" data-value=\"H2\" title=\"' + lang.toolbar.tag_h + ' 2\" style=\"height:34px;\"><h2>' + lang.toolbar.tag_h + ' 2</h2></button></li>' +\n            '       <li><button type=\"button\" class=\"btn_edit\" data-command=\"replace\" data-value=\"H3\" title=\"' + lang.toolbar.tag_h + ' 3\" style=\"height:26px;\"><h3>' + lang.toolbar.tag_h + ' 3</h3></button></li>' +\n            '       <li><button type=\"button\" class=\"btn_edit\" data-command=\"replace\" data-value=\"H4\" title=\"' + lang.toolbar.tag_h + ' 4\" style=\"height:23px;\"><h4>' + lang.toolbar.tag_h + ' 4</h4></button></li>' +\n            '       <li><button type=\"button\" class=\"btn_edit\" data-command=\"replace\" data-value=\"H5\" title=\"' + lang.toolbar.tag_h + ' 5\" style=\"height:19px;\"><h5>' + lang.toolbar.tag_h + ' 5</h5></button></li>' +\n            '       <li><button type=\"button\" class=\"btn_edit\" data-command=\"replace\" data-value=\"H6\" title=\"' + lang.toolbar.tag_h + ' 6\" style=\"height:15px;\"><h6>' + lang.toolbar.tag_h + ' 6</h6></button></li>' +\n            '   </ul>' +\n            '</div>';\n\n        return listDiv;\n    },\n\n    pickUp: function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        let target = e.target;\n        let command = null, value = null;\n        \n        while (!command && !/UL/i.test(target.tagName)) {\n            command = target.getAttribute('data-command');\n            value = target.getAttribute('data-value');\n            target = target.parentNode;\n        }\n\n        // blockquote, pre\n        if (command === 'range') {\n            const rangeElement = util.createElement(value);\n            this.wrapToTags(rangeElement);\n            this.setRange(rangeElement.firstChild, 0, rangeElement.firstChild, 0);\n            this.appendFormatTag(rangeElement, util.isCell(this.getSelectionNode()) ? 'DIV' : '');\n        }\n        // others\n        else {\n            this.execCommand('formatBlock', false, value);\n            util.changeTxt(this.commandMap.FORMAT, value);\n        }\n\n        this.submenuOff();\n        this.focus();\n    }\n};\n"],"sourceRoot":""}